com.stripe.android.ui.core.cardscan.CardScanActivity
com.facebook.yoga.YogaNative
com.horcrux.svg.SvgPackage
com.facebook.jni.MapIteratorHelper
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.react.fabric.FabricUIManager$5
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.bridge.DynamicFromMap
com.swmansion.reanimated.R
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.react.bridge.InvalidIteratorException
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.horcrux.svg.R$animator
com.facebook.react.modules.dialog.AlertFragment
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State
com.stripe.android.ui.core.elements.KlarnaCountrySpec
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.react.bridge.BaseJavaModule
androidx.recyclerview.widget.RecyclerView
com.google.android.material.datepicker.MaterialTextInputPicker
com.stripe.android.ui.core.elements.NextActionSpec
com.bumptech.glide.GeneratedAppGlideModule
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion
com.stripe.android.financialconnections.model.ConsentPane
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
androidx.appcompat.widget.AlertDialogLayout
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types
com.stripe.android.uicore.address.CountryAddressSchema
com.google.android.material.internal.NavigationMenuView
com.facebook.react.uimanager.ComponentNameResolver
androidx.appcompat.widget.ViewStubCompat
com.facebook.react.bridge.ModuleSpec
com.stripe.android.financialconnections.model.Image
com.stripe.android.model.BankAccount$Status
com.google.android.gms.maps.model.CameraPosition
com.stripe.android.customersheet.CustomerSheetViewModel$registerFromActivity$3
androidx.navigation.NavGraphNavigator
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion
com.stripe.android.financialconnections.model.OwnershipRefresh$Status
androidx.fragment.app.FragmentManager$6
com.facebook.react.bridge.JavaScriptExecutor
com.google.android.gms.common.SupportErrorDialogFragment
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel
com.stripe.android.model.StripeIntent$Status
com.facebook.react.bridge.MemoryPressureListener
com.facebook.react.devsupport.JSException
com.horcrux.svg.R$dimen
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec
com.reactnativestripesdk.CardFormViewManager
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.bridge.CatalystInstanceImpl$3
com.facebook.react.bridge.JavaMethodWrapper$9
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
androidx.compose.ui.platform.ViewCompositionStrategy_androidKt$installForLifecycle$observer$1
com.stripe.android.financialconnections.model.Display
com.facebook.react.uimanager.ReanimatedUIManager
com.reactnativestripesdk.GooglePayLauncherFragment
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.reactcommunity.rndatetimepicker.RNTimePickerDialogFragment
com.swmansion.reanimated.BuildConfig
com.google.android.material.theme.MaterialComponentsViewInflater
kotlinx.serialization.json.JsonArray
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener
androidx.core.util.Pools$SimplePool
com.stripe.android.financialconnections.presentation.WebAuthFlowState
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory
com.google.android.material.behavior.SwipeDismissBehavior
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.facebook.jni.CppException
com.google.android.gms.identity.intents.model.UserAddress
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.react.uimanager.RootViewManager
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
com.stripe.android.financialconnections.ui.FinancialConnectionsSheetNativeActivity
com.swmansion.reanimated.AndroidUIScheduler$2
com.google.android.gms.common.annotation.KeepName
com.google.android.material.internal.NavigationMenuItemView
com.facebook.react.views.view.ReactClippingViewManager
com.google.android.material.textfield.TextInputEditText
com.facebook.jni.ThreadScopeSupport
com.facebook.react.modules.appearance.AppearanceModule
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager
com.facebook.react.bridge.ReadableNativeMap
com.facebook.react.bridge.Dynamic
com.facebook.react.bridge.JSIModuleType
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.reactnativestripesdk.addresssheet.AddressLauncherFragment
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.facebook.react.turbomodule.core.TurboModuleManager
com.facebook.react.uimanager.SimpleViewManager
com.stripe.android.financialconnections.features.consent.ConsentViewModel
com.swmansion.reanimated.R$string
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState
com.facebook.common.internal.DoNotStrip
androidx.emoji2.text.EmojiCompatInitializer
androidx.compose.ui.focus.FocusTargetModifierNode$FocusTargetModifierElement
com.stripe.android.financialconnections.model.DataAccessNoticeBody
androidx.navigation.ActivityNavigator
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.modules.core.JSTimers
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion
com.stripe.android.payments.StripeBrowserLauncherActivity
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState
kotlin.internal.jdk8.JDK8PlatformImplementations
kotlinx.serialization.json.JsonElement
com.horcrux.svg.SVGLength$UnitType
com.swmansion.reanimated.NativeMethodsHelper
com.stripe.android.financialconnections.model.FinancialConnectionsInstitution
android.support.v4.graphics.drawable.IconCompatParcelizer
com.horcrux.svg.RenderableViewManager$CircleViewManager
com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingActivity
com.stripe.android.financialconnections.model.Bullet
com.swmansion.reanimated.R$bool
com.reactnativestripesdk.StripeSdkModule
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.reactnativecommunity.webview.RNCWebViewManager
com.stripe.android.financialconnections.model.OwnershipRefresh
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
androidx.lifecycle.ProcessLifecycleInitializer
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.react.modules.core.DeviceEventManagerModule
androidx.savedstate.Recreator
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion
com.stripe.android.financialconnections.appinitializer.FinancialConnectionsInitializer
com.stripe.android.model.Source$Redirect$Status
com.facebook.common.time.RealtimeSinceBootClock
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
androidx.media.AudioAttributesImplApi21Parcelizer
com.rnmaps.maps.MapLocalTileManager
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel
androidx.emoji2.text.EmojiCompatInitializer$1
androidx.recyclerview.widget.GridLayoutManager
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.stripe.android.financialconnections.FinancialConnectionsSheetActivity
com.stripe.android.financialconnections.model.NetworkedAccountsList
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.horcrux.svg.RenderableViewManager$PatternManager
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession
com.facebook.react.bridge.SoftAssertions
com.stripe.android.financialconnections.model.PartnerNotice
com.stripe.android.paymentsheet.ui.PaymentOptionsPrimaryButtonContainerFragment
com.facebook.react.bridge.CxxModuleWrapper
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion
com.stripe.android.ui.core.elements.NameSpec
com.swmansion.reanimated.R$drawable
com.facebook.react.views.text.ReactVirtualTextViewManager
com.swmansion.reanimated.layoutReanimation.SharedElement
kotlin.jvm.internal.DefaultConstructorMarker
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.imagepipeline.platform.PreverificationHelper
com.google.android.material.datepicker.MaterialDatePicker
com.horcrux.svg.VirtualView
androidx.appcompat.widget.Toolbar
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.stripe.android.financialconnections.model.VisualUpdate
com.stripe.android.stripe3ds2.views.ChallengeActivity
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.bridge.GuardedResultAsyncTask
com.swmansion.reanimated.NodesManager$NativeUpdateOperation
com.facebook.react.bridge.JavaJSExecutor
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.react.bridge.CatalystInstanceImpl$5
com.facebook.fbreact.specs.NativeClipboardSpec
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
com.app.upfrica.MainActivity
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.stripe.android.financialconnections.model.NetworkedAccount
com.reactnativecommunity.webview.RNCWebViewFileProvider
com.swmansion.reanimated.nativeProxy.NoopEventHandler
com.stripe.android.model.ConsumerSession
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.stripe.android.view.PostalCodeEditText
com.stripe.android.paymentsheet.ui.BasePrimaryButtonContainerFragment
com.stripe.android.ui.core.elements.BlikSpec
com.stripe.android.paymentsheet.ui.PaymentSheetPrimaryButtonContainerFragment
com.stripe.android.ui.core.elements.KeyboardType
androidx.work.WorkerParameters
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.stripe.android.stripe3ds2.views.ThreeDS2Button
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.modules.blob.BlobModule
com.facebook.react.bridge.LifecycleEventListener
androidx.appcompat.widget.ActionBarContainer
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.bridge.ReadableType
com.facebook.react.fabric.GuardedFrameCallback
com.stripe.android.paymentsheet.forms.PaymentMethodRequirements
androidx.work.OverwritingInputMerger
com.facebook.react.config.ReactFeatureFlags
com.facebook.react.bridge.ReactContext$1
com.google.android.gms.common.api.GoogleApiActivity
androidx.compose.ui.focus.FocusEventElement
com.stripe.android.uicore.elements.PhoneNumberState
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$FinishedSpec
com.google.android.material.timepicker.ClockHandView
androidx.compose.ui.platform.InspectableValueKt
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.react.fabric.mounting.MountItemDispatcher
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.react.bridge.DefaultJSExceptionHandler
com.stripe.android.view.CardWidgetProgressView
com.stripe.android.financialconnections.model.InstitutionResponse
com.swmansion.reanimated.layoutReanimation.Snapshot
com.swmansion.reanimated.ReanimatedPackage$1
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.stripe.android.view.PaymentAuthWebView
com.stripe.android.networking.PaymentAnalyticsEvent
com.airbnb.mvrx.Async
com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.react.uimanager.BaseViewManager
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState
com.facebook.fbreact.specs.NativeAppStateSpec
com.stripe.android.ui.core.elements.FormItemSpec
com.stripe.android.financialconnections.model.AccountHolder$Type
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.stripe.android.financialconnections.model.MixedOAuthParams
com.facebook.fbreact.specs.NativeVibrationSpec
com.facebook.react.bridge.ReactIgnorableMountingException
android.support.v4.app.RemoteActionCompatParcelizer
com.swmansion.reanimated.NativeProxy$1
com.google.android.gms.common.api.internal.BasePendingResult
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.stripe.android.view.BecsDebitAccountNumberEditText
com.swmansion.reanimated.R$dimen
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails
androidx.appcompat.widget.ActionBarOverlayLayout
com.horcrux.svg.RenderableViewManager$GroupViewManager
androidx.media.AudioAttributesImplBaseParcelizer
androidx.work.impl.WorkDatabase_Impl
com.stripe.android.ui.core.elements.autocomplete.model.AddressComponent
com.stripe.android.financialconnections.model.TextUpdate
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product
com.facebook.react.bridge.WritableArray
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions
com.google.android.material.timepicker.TimePickerView
androidx.core.app.RemoteActionCompat
com.facebook.yoga.YogaLogLevel
com.facebook.react.bridge.NativeMap
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.stripe.android.paymentsheet.ui.PrimaryButton
com.stripe.android.payments.StripeBrowserProxyReturnActivity
com.facebook.react.fabric.mounting.LayoutMetricsConversions
com.swmansion.rnscreens.ScreenFragment
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.stripe.android.financialconnections.model.ManualEntryMode
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel
com.stripe.android.view.CardBrandView
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.fbreact.specs.NativeTimingSpec
com.google.android.material.timepicker.ChipTextInputComboView
com.facebook.react.fabric.mounting.SurfaceMountingManager$2
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.facebook.react.bridge.JsonWriterHelper
com.proyecto26.inappbrowser.RNInAppBrowserModule
com.horcrux.svg.R
com.stripe.android.financialconnections.model.BalanceRefresh
com.stripe.android.view.AddPaymentMethodActivity
com.facebook.fbreact.specs.NativeSoundManagerSpec
androidx.activity.ComponentActivity$5
com.facebook.react.fabric.events.EventBeatManager
com.stripe.android.networking.PaymentAnalyticsRequestFactory$ThreeDS2UiType
com.stripe.android.uicore.address.NameType
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem
com.facebook.react.views.view.ReactViewManager
com.stripe.android.view.PaymentMethodsRecyclerView
com.google.android.gms.wallet.button.ButtonOptions
com.stripe.android.view.EmailEditText
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.azendoo.reactnativesnackbar.SnackbarModule
com.facebook.react.fabric.CppComponentRegistry
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.hermes.intl.NumberFormat
com.facebook.react.bridge.Inspector
com.swmansion.gesturehandler.react.RNGestureHandlerModule
androidx.profileinstaller.ProfileInstallReceiver
androidx.appcompat.view.menu.ActionMenuItemView
com.swmansion.reanimated.NativeProxy
com.horcrux.svg.VirtualViewManager
com.facebook.react.modules.blob.FileReaderModule
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
com.facebook.react.modules.blob.BlobCollector
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
kotlinx.serialization.json.JsonNull
com.rnmaps.maps.MapManager
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel
com.oblador.vectoricons.VectorIconsModule
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
com.swmansion.reanimated.ReactNativeUtils
androidx.work.impl.diagnostics.DiagnosticsReceiver
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.react.fabric.LongStreamingStats
com.swmansion.reanimated.R$anim
com.reactnativecommunity.picker.TextViewImpl
com.stripe.android.view.PaymentFlowActivity
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
com.swmansion.reanimated.MapUtils
com.facebook.react.bridge.JSIModuleSpec
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.stripe.android.view.PaymentMethodsActivity
com.facebook.react.bridge.JavaMethodWrapper$4
com.swmansion.reanimated.R$style
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.jni.DestructorThread$DestructorStack
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater
com.stripe.android.view.CvcEditText
com.facebook.react.bridge.NativeModule
com.facebook.react.bridge.JavaOnlyArray
com.google.android.material.snackbar.SnackbarContentLayout
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest
com.facebook.yoga.YogaLogger
com.stripe.android.model.Source$CodeVerification$Status
com.facebook.react.views.image.ReactImageManager
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.facebook.fbreact.specs.NativeDevMenuSpec
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel
kotlinx.serialization.json.JsonObject
com.facebook.react.bridge.ReadableMapKeySetIterator
com.dropShadow.DropShadowModule
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState
com.horcrux.svg.R$layout
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
com.facebook.react.bridge.JSBundleLoaderDelegate
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion
com.stripe.android.financialconnections.features.success.SuccessState
com.facebook.react.modules.intent.IntentModule
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.google.android.gms.location.LocationRequest
com.swmansion.rnscreens.ScreenStackViewManager
androidx.appcompat.view.menu.ExpandedMenuView
com.stripe.android.ui.core.elements.Capitalization
androidx.compose.ui.platform.ComposeView
androidx.lifecycle.SavedStateHandleController
com.horcrux.svg.R$interpolator
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherActivity
com.swmansion.reanimated.R$styleable
com.stripe.android.stripe3ds2.views.ThreeDS2TextView
androidx.core.app.RemoteActionCompatParcelizer
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel
com.facebook.react.modules.fabric.ReactFabric
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
androidx.lifecycle.SavedStateHandleAttacher
com.stripe.android.customersheet.CustomerSheet$1
com.horcrux.svg.RenderableViewManager$EllipseViewManager
com.facebook.react.bridge.ReactApplicationContext
com.stripe.android.model.Source$Flow
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled
com.stripe.android.ui.core.elements.ConfirmStatusSpecAssociation
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.fbreact.specs.NativeModalManagerSpec
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor
com.facebook.react.bridge.ReadableNativeMap$1$1
androidx.fragment.app.DialogFragment
com.horcrux.svg.R$xml
com.facebook.hermes.intl.Intl
com.imagepicker.ImagePickerModule
com.facebook.react.uimanager.UIManagerModule
com.swmansion.reanimated.R$interpolator
com.facebook.systrace.TraceListener
com.google.android.material.textfield.TextInputLayout
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.horcrux.svg.RenderableViewManager$LineViewManager
com.stripe.android.financialconnections.features.success.SuccessViewModel
com.stripe.android.model.StripeIntent$NextActionType
com.stripe.android.ui.core.elements.PostConfirmStatusSpecAssociation
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.react.modules.core.RCTNativeAppEventEmitter
androidx.work.impl.workers.ConstraintTrackingWorker
com.horcrux.svg.R$styleable
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
javax.inject.Provider
com.facebook.react.modules.websocket.WebSocketModule
com.stripe.android.financialconnections.model.ConsentPaneBody
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.google.accompanist.navigation.animation.AnimatedComposeNavigator
com.facebook.react.modules.network.NetworkingModule
com.stripe.android.uicore.address.FieldType
com.google.android.material.appbar.AppBarLayout$Behavior
com.stripe.android.financialconnections.model.PartnerAccount
com.horcrux.svg.RenderableViewManager$RadialGradientManager
com.horcrux.svg.VirtualViewManager$SVGClass
com.google.android.material.button.MaterialButton
com.stripe.android.stripe3ds2.views.BrandZoneView
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.animated.EventAnimationDriver
androidx.work.impl.background.systemjob.SystemJobService
com.facebook.react.bridge.JavaMethodWrapper$1
androidx.constraintlayout.helper.widget.Flow
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.devsupport.HMRClient
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.bridge.ReadableMap
com.google.android.material.transformation.FabTransformationSheetBehavior
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs
com.horcrux.svg.SvgView
com.facebook.react.devsupport.JSCHeapCapture
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent
android.support.v4.media.session.PlaybackStateCompat
com.horcrux.svg.RenderableViewManager$DefsViewManager
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState
com.swmansion.rnscreens.ScreenStackFragment
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.horcrux.svg.RenderableViewManager$ForeignObjectManager
com.stripe.android.ui.core.elements.SimpleTextSpec
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState
com.facebook.react.bridge.JSIModuleRegistry
com.swmansion.reanimated.ReanimatedPackage
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion
com.swmansion.reanimated.nativeProxy.EventHandler
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.facebook.react.fabric.CppViewMutationsWrapper
com.stripe.android.ui.core.elements.AuBecsDebitMandateTextSpec
com.swmansion.reanimated.R$xml
androidx.compose.ui.platform.AndroidComposeView
com.stripe.android.financialconnections.model.Body
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.turbomodule.core.TurboModuleManager$1
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane
com.horcrux.svg.RenderableViewManager$TextPathViewManager
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver
androidx.compose.ui.graphics.GraphicsLayerModifierNodeElement
com.facebook.react.common.LifecycleState
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.fabric.FabricUIManager$1
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.facebook.jni.CppSystemErrorException
com.stripe.android.link.serialization.PopupPayload
com.facebook.react.bridge.ContextBaseJavaModule
com.stripe.android.model.BankAccount$Type
com.facebook.react.bridge.NativeArgumentsParseException
com.rnmaps.maps.MapPolylineManager
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.stripe.android.view.PaymentFlowViewPager
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.stripe.android.financialconnections.model.NetworkingLinkSignupBody
androidx.work.ListenableWorker
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec
com.facebook.jni.annotations.DoNotStrip
com.facebook.react.bridge.JSBundleLoader$1
com.google.maps.android.ui.RotationLayout
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.stripe.android.view.PaymentAuthWebViewActivity
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.facebook.react.fabric.mounting.SurfaceMountingManager$1
com.facebook.react.bridge.JavaMethodWrapper$7
com.swmansion.reanimated.NodesManager$4
com.facebook.react.modules.appstate.AppStateModule
com.stripe.android.link.serialization.PopupPayload$MerchantInfo
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$FinishedSpec
com.facebook.jni.IteratorHelper
com.bumptech.glide.manager.SupportRequestManagerFragment
com.facebook.react.bridge.NativeArray
androidx.activity.ComponentActivity$4
com.stripe.android.ui.core.elements.KlarnaHeaderStaticTextSpec
com.facebook.react.fabric.ReactNativeConfig
com.facebook.proguard.annotations.KeepGettersAndSetters
com.facebook.react.fabric.mounting.SurfaceMountingManager
com.facebook.react.bridge.Promise
com.facebook.react.bridge.RuntimeScheduler
com.facebook.react.bridge.PerformanceCounter
com.facebook.react.bridge.DynamicFromMap$1
com.stripe.android.model.Source$Status
com.facebook.react.module.model.ReactModuleInfo
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState
com.app.upfrica.MainApplication
com.swmansion.reanimated.NodesManager$2
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.stripe.android.ui.core.elements.CountrySpec
com.stripe.android.ui.core.elements.EmptyFormSpec
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.modules.statusbar.StatusBarModule
com.swmansion.reanimated.sensor.ReanimatedSensorType
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.react.bridge.BaseActivityEventListener
com.rnmaps.maps.MapUrlTileManager
com.swmansion.reanimated.sensor.ReanimatedSensorListener
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
com.stripe.android.financialconnections.model.ManualEntry
com.facebook.fbreact.specs.NativeLogBoxSpec
com.horcrux.svg.RenderableViewManager$ImageViewManager
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder
com.facebook.react.bridge.GuardedRunnable
com.facebook.react.bridge.UnexpectedNativeTypeException
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.facebook.fbreact.specs.NativeShareModuleSpec
androidx.media.AudioAttributesImpl
com.google.android.material.datepicker.MaterialCalendar
androidx.appcompat.widget.ButtonBarLayout
com.rnmaps.maps.MapMarkerManager
com.facebook.react.bridge.ReactMarker
androidx.media.AudioAttributesCompat
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
com.stripe.android.financialconnections.FinancialConnectionsSheetRedirectActivity
com.google.android.gms.common.api.Status
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion
com.google.android.material.progressindicator.CircularProgressIndicator
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.fabric.FabricUIManager$3
androidx.versionedparcelable.ParcelImpl
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState
com.google.android.gms.wallet.FullWallet
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.swmansion.reanimated.R$integer
com.facebook.react.bridge.NativeArrayInterface
com.swmansion.reanimated.ReanimatedMessageQueueThread
androidx.annotation.Keep
com.swmansion.reanimated.NodesManager$1
androidx.constraintlayout.widget.ConstraintLayout
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.bridge.JavaScriptContextHolder
androidx.work.impl.WorkDatabase
com.reactnativestripesdk.CustomerSheetFragment
com.stripe.android.financialconnections.model.Entry$Text
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.facebook.react.bridge.UIManagerListener
com.reactnativecommunity.picker.ReactDropdownPickerManager
com.facebook.react.bridge.ReactContext$2
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.views.modal.ReactModalHostManager
com.google.android.material.internal.CheckableImageButton
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel
com.swmansion.rnscreens.ScreenViewManager
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.fabric.FabricUIManager$6
com.stripe.android.view.CardMultilineWidget
androidx.work.impl.workers.DiagnosticsWorker
androidx.compose.ui.input.key.OnKeyEventElement
androidx.compose.ui.focus.FocusOwnerImpl$modifier$1
com.stripe.android.link.serialization.PopupPayload$CustomerInfo
com.facebook.jni.HybridData
androidx.recyclerview.widget.StaggeredGridLayoutManager
kotlinx.serialization.json.JsonPrimitive
com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent
com.facebook.react.fabric.FabricJSIModuleProvider
com.facebook.react.bridge.JavaMethodWrapper$6
com.stripe.android.financialconnections.features.consent.ConsentState
com.google.android.gms.common.util.DynamiteApi
com.stripe.android.financialconnections.FinancialConnectionsSheetState
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.bridge.JavaJSExecutor$Factory
androidx.work.Worker
androidx.transition.FragmentTransitionSupport
com.google.android.material.appbar.MaterialToolbar
com.swmansion.reanimated.sensor.ReanimatedSensor
com.horcrux.svg.RenderableViewManager$PathViewManager
com.facebook.react.modules.core.TimingModule
com.horcrux.svg.RenderableViewManager$MarkerManager
com.reactnativestripesdk.GooglePayButtonManager
androidx.compose.ui.draw.DrawBehindElement
com.facebook.react.uimanager.ViewManager
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec
com.stripe.android.paymentsheet.PaymentOptionsActivity
com.facebook.react.fabric.SurfaceHandler
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.fbreact.specs.NativeBugReportingSpec
com.horcrux.svg.R$bool
com.google.android.gms.common.api.Scope
com.facebook.react.bridge.ReactCxxErrorHandler
com.stripe.android.paymentsheet.PaymentSheetActivity
com.facebook.react.uimanager.ComponentNameResolverManager
com.stripe.android.financialconnections.model.Cta
com.stripe.android.ui.core.elements.DropdownSpec
com.stripe.android.ui.core.elements.SelectorIcon
com.stripe.android.model.StripeIntent$Usage
com.facebook.react.bridge.UIManager
com.facebook.react.bridge.CatalystInstance
android.support.v4.media.session.ParcelableVolumeInfo
com.stripe.android.financialconnections.model.PartnerAccountsList
com.stripe.android.ui.core.elements.AffirmTextSpec
com.reactnativecommunity.picker.ReactDialogPickerManager
com.stripe.android.ui.core.elements.DisplayField
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs
com.stripe.android.payments.paymentlauncher.PaymentLauncherViewModel$register$2
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.react.bridge.JSBundleLoader$4
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.react.bridge.ModuleHolder
com.google.android.material.transformation.ExpandableTransformationBehavior
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.fabric.StateWrapperImpl
com.rnmaps.maps.MapTileWorker
com.stripe.android.ui.core.elements.StaticTextSpec
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
androidx.collection.LongSparseArray
androidx.appcompat.widget.ActionMenuView
com.google.android.material.chip.Chip
androidx.compose.ui.input.key.OnPreviewKeyEvent
com.stripe.android.ui.core.elements.TranslationId
com.google.android.material.appbar.AppBarLayout
com.stripe.android.payments.bankaccount.ui.CollectBankAccountActivity
com.facebook.react.fabric.SurfaceHandlerBinding
com.facebook.react.views.text.ReactTextAnchorViewManager
com.horcrux.svg.RenderableViewManager$UseViewManager
androidx.fragment.app.FragmentContainerView
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.jscexecutor.JSCExecutor
androidx.compose.ui.focus.FocusPropertiesElement
androidx.compose.ui.layout.LayoutIdModifierElement
com.facebook.react.bridge.JSInstance
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.react.views.text.ReactRawTextManager
com.stripe.android.financialconnections.model.FinancialConnectionsAccount
android.support.v4.media.session.MediaSessionCompat$Token
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
androidx.profileinstaller.ProfileInstallerInitializer
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect
com.facebook.react.bridge.CatalystInstanceImpl$2
com.stripe.android.link.LinkForegroundActivity
com.facebook.react.bridge.Arguments$2
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog
com.stripe.android.financialconnections.model.Balance$Type
android.support.v4.media.MediaBrowserCompat$MediaItem
com.facebook.jni.HybridClassBase
com.facebook.react.bridge.MemoryPressure
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.horcrux.svg.SvgView$Events
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.stripe.android.financialconnections.model.LegalDetailsNotice
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.facebook.react.fabric.DevToolsReactPerfLogger$1
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.rnmaps.maps.MapCalloutManager
com.google.android.gms.common.api.internal.zzd
com.stripe.android.ui.core.elements.OTPSpec
com.stripe.android.view.MaskedCardView
com.facebook.react.bridge.JSBundleLoader
androidx.navigation.compose.ComposeNavigator
com.stripe.android.ui.core.elements.SepaMandateTextSpec
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager
com.facebook.react.uimanager.ViewGroupManager
com.horcrux.svg.R$color
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.stripe.android.ui.core.elements.CardBillingSpec
androidx.compose.ui.draw.PainterModifierNodeElement
com.facebook.jni.DestructorThread$1
com.stripe.android.financialconnections.features.reset.ResetViewModel
com.stripe.android.view.PaymentRelayActivity
androidx.appcompat.widget.FitWindowsFrameLayout
com.horcrux.svg.RenderableView
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback
com.horcrux.svg.R$drawable
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
com.google.android.gms.wallet.wobs.CommonWalletObject
com.rnmaps.maps.MapPolygonManager
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.stripe.android.financialconnections.model.Entry
com.stripe.android.link.serialization.PopupPayload$PaymentInfo
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.facebook.react.modules.toast.ToastModule
com.stripe.android.view.ExpiryDateEditText
com.facebook.react.fabric.mounting.MountingManager
com.swmansion.reanimated.R$color
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.proguard.annotations.DoNotStrip
com.swmansion.reanimated.sensor.ReanimatedSensorContainer
com.stripe.android.ui.core.elements.MandateTextSpec
com.stripe.android.financialconnections.model.Balance
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.horcrux.svg.R$integer
androidx.work.impl.background.systemalarm.SystemAlarmService
com.facebook.hermes.intl.DateTimeFormat
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.appcompat.app.AlertController$RecycleListView
com.stripe.android.ui.core.elements.PhoneSpec
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect
androidx.work.impl.workers.CombineContinuationsWorker
com.stripe.android.model.Source$Usage
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category
com.swmansion.rnscreens.SearchBarManager
com.facebook.react.views.text.ReactTextViewManager
com.facebook.react.fabric.FabricComponents
com.stripe.android.googlepaylauncher.GooglePayLauncherActivity
com.google.android.gms.wallet.button.PayButton
com.reactcommunity.rndatetimepicker.RNDatePickerDialogFragment
com.stripe.android.financialconnections.FinancialConnectionsSheet
androidx.compose.ui.input.rotary.OnRotaryScrollEventElement
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.google.android.material.button.MaterialButtonToggleGroup
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.stripe.android.ui.core.elements.AddressSpec
com.stripe.android.ui.core.elements.SharedDataSpec
com.stripe.android.financialconnections.features.manualentry.ManualEntryState
com.imagepicker.ImagePickerProvider
com.stripe.android.stripe3ds2.views.ChallengeZoneView
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.facebook.react.bridge.ReadableArray
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.soloader.SoLoader
com.stripe.android.view.CountryTextInputLayout
com.stripe.android.financialconnections.model.GetFinancialConnectionsAcccountsParams
com.BV.LinearGradient.LinearGradientManager
com.facebook.jni.HybridData$Destructor
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.stripe.android.uicore.elements.IdentifierSpec
androidx.lifecycle.DefaultLifecycleObserverAdapter
com.stripe.android.view.ShippingInfoWidget
androidx.recyclerview.widget.LinearLayoutManager
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.facebook.react.fabric.FabricUIManager$4
com.facebook.react.bridge.NativeModule$NativeMethod
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.collection.SparseArrayCompat
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
androidx.work.WorkManagerInitializer
androidx.appcompat.widget.SearchView
com.facebook.react.bridge.JavaMethodWrapper$2
android.support.v4.media.MediaMetadataCompat
com.google.android.material.internal.TouchObserverFrameLayout
com.google.android.gms.maps.model.LatLngBounds
androidx.core.graphics.drawable.IconCompat
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.facebook.react.common.mapbuffer.WritableMapBuffer
androidx.core.graphics.drawable.IconCompatParcelizer
com.stripe.android.financialconnections.model.AddNewAccount
com.google.android.material.progressindicator.LinearProgressIndicator
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.react.bridge.JSIModuleProvider
com.swmansion.reanimated.NodesManager$OnAnimationFrame
com.facebook.react.fabric.FabricUIManager
com.stripe.android.customersheet.CustomerSheetActivity
com.stripe.android.paymentsheet.DefaultPaymentSheetLauncher$1
com.stripe.android.stripe3ds2.views.ThreeDS2WebView
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.facebook.react.bridge.JavaMethodWrapper$5
com.swmansion.reanimated.R$attr
com.facebook.soloader.DoNotOptimize
com.stripe.android.ui.core.elements.EmailSpec
com.facebook.react.fabric.FabricUIManager$2
com.facebook.react.bridge.CallbackImpl
com.facebook.react.bridge.ReactBridge
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation
androidx.compose.ui.focus.FocusRequesterElement
androidx.lifecycle.SingleGeneratedAdapterObserver
com.stripe.android.ui.core.elements.IbanSpec
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract
com.rnmaps.maps.MapModule
com.facebook.react.bridge.ReactMarkerConstants
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$CanceledSpec
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.stripe.android.view.CardNumberEditText
com.stripe.android.view.CardNumberTextInputLayout
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem
com.airbnb.mvrx.MavericksLifecycleAwareFlowKt$startedChannel$observer$1
com.stripe.android.financialconnections.model.NetworkingLinkSignupPane
com.swmansion.reanimated.ReanimatedModule
androidx.compose.ui.platform.WindowRecomposer_androidKt$createLifecycleAwareWindowRecomposer$2
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem
androidx.compose.ui.platform.WrappedComposition
com.facebook.react.modules.appregistry.AppRegistry
com.reactnativecommunity.checkbox.ReactCheckBoxManager
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.proyecto26.inappbrowser.ChromeTabsManagerActivity
com.stripe.android.financialconnections.model.CreditBalance
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion
androidx.room.MultiInstanceInvalidationService
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.facebook.react.bridge.ReactContext
com.horcrux.svg.RenderableViewManager$RectViewManager
com.rnmaps.maps.MapGradientPolylineManager
androidx.core.widget.NestedScrollView
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.stripe.android.financialconnections.model.DataAccessNotice
androidx.appcompat.widget.AppCompatImageView
com.facebook.react.fabric.EmptyReactNativeConfig
com.horcrux.svg.RenderableViewManager$MaskManager
com.airbnb.mvrx.FlowExtensionsKt$assertOneActiveSubscription$observer$1
android.support.v4.media.RatingCompat
com.reactnativecommunity.picker.CheckedTextViewImpl
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.bridge.JavaOnlyMap$1
com.rnmaps.maps.MapWMSTileManager
com.facebook.react.bridge.ReadableNativeMap$2
com.google.android.gms.maps.GoogleMapOptions
com.facebook.hermes.instrumentation.HermesSamplingProfiler
androidx.work.impl.foreground.SystemForegroundService
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
androidx.compose.ui.layout.LayoutModifierElement
androidx.compose.ui.focus.FocusChangedElement
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.bridge.PromiseImpl
com.facebook.react.animated.NativeAnimatedModule
com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes
kotlin.Pair
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.react.bridge.JSExceptionHandler
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.imagepipeline.memory.NativeMemoryChunk
androidx.media.AudioAttributesImplApi21
androidx.navigation.compose.DialogNavigator
com.facebook.common.time.AwakeTimeSinceBootClock
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor
com.facebook.react.devsupport.LogBoxModule
androidx.constraintlayout.widget.Barrier
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.fbreact.specs.NativeAppearanceSpec
androidx.compose.ui.draw.DrawWithContentElement
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.stripe.android.financialconnections.model.LegalDetailsBody
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.swmansion.reanimated.nativeProxy.NativeProxyCommon
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.browser.browseractions.BrowserActionsFallbackMenuView
com.reactcommunity.rndatetimepicker.DatePickerModule
com.facebook.react.bridge.DynamicFromObject
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.horcrux.svg.SvgViewManager
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.swmansion.reanimated.ReaCompatibility
com.stripe.android.paymentsheet.analytics.EventReporter$Mode
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback
com.facebook.react.fabric.CoreComponentsRegistry
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel
com.stripe.android.stripe3ds2.views.InformationZoneView
com.facebook.yoga.YogaNodeJNIBase
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.modules.sound.SoundManagerModule
com.stripe.android.paymentsheet.PaymentSheetViewModel$registerFromActivity$5
com.facebook.react.bridge.WritableMap
com.facebook.react.bridge.JSBundleLoader$2
com.reactnativestripesdk.CardFieldViewManager
androidx.appcompat.widget.DialogTitle
com.rnmaps.maps.MapOverlayManager
com.reactnativecommunity.picker.ReactPickerManager
com.horcrux.svg.R$anim
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.stripe.android.financialconnections.model.PaymentAccount
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion
com.facebook.react.views.slider.ReactSliderManager
com.facebook.react.bridge.GuardedAsyncTask
com.reactnativestripesdk.addresssheet.AddressSheetViewManager
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.stripe.android.paymentsheet.addresselement.AddressElementActivity
com.facebook.react.bridge.AssertionException
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem
com.stripe.android.payments.paymentlauncher.PaymentLauncherConfirmationActivity
com.facebook.react.bridge.JavaScriptExecutorFactory
com.facebook.react.bridge.Inspector$Page
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status
com.facebook.react.turbomodule.core.TurboModuleManager$2
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.imagepipeline.nativecode.Bitmaps
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect
com.facebook.react.fabric.SurfaceHandlerBinding$DisplayModeTypeDef
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState
com.stripe.android.core.model.CountryCode
com.stripe.android.ui.core.elements.UpiSpec
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.facebook.soloader.Api18TraceUtils
com.horcrux.svg.BuildConfig
com.facebook.react.bridge.JavaScriptModule
com.stripe.android.financialconnections.model.SynchronizeSessionResponse
com.swmansion.reanimated.AndroidUIScheduler
com.facebook.react.bridge.WindowFocusChangeListener
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface
androidx.appcompat.widget.ContentFrameLayout
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion
com.stripe.android.financialconnections.features.reset.ResetState
com.facebook.jni.DestructorThread$DestructorList
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$RedirectNextActionSpec
com.facebook.react.modules.image.ImageLoaderModule
androidx.media.AudioAttributesCompatParcelizer
com.facebook.fbreact.specs.NativeLinkingManagerSpec
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
com.google.android.material.search.SearchView$Behavior
com.stripe.android.model.SourceTypeModel$Card$ThreeDSecureStatus
com.stripe.android.financialconnections.model.BankAccount
com.google.android.material.internal.BaselineLayout
com.stripe.android.model.ConsumerSessionLookup
androidx.activity.ComponentActivity$3
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.android.material.sidesheet.SideSheetBehavior
com.facebook.jni.DestructorThread
com.swmansion.reanimated.NodesManager
com.facebook.react.bridge.Arguments$1
com.reactnativecommunity.webview.RNCWebViewModule
com.facebook.react.bridge.ColorPropConverter
com.stripe.android.view.BecsDebitMandateAcceptanceTextView
com.google.android.gms.location.LocationResult
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason
com.facebook.react.bridge.CatalystInstanceImpl$4
com.facebook.react.fabric.FabricSoLoader
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.swmansion.reanimated.nativeProxy.SensorSetter
com.horcrux.svg.RenderableViewManager$TextViewManager
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.horcrux.svg.RenderableViewManager$TSpanViewManager
com.stripe.android.view.StripeEditText
com.stripe.android.link.LinkRedirectHandlerActivity
com.stripe.android.financialconnections.model.FinancialConnectionsAccountList
com.facebook.react.fabric.DevToolsReactPerfLogger
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.stripe.android.ui.core.elements.CardDetailsSectionSpec
androidx.appcompat.widget.ActionBarContextView
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator
com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingLifecycleObserver
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState
com.facebook.hermes.reactexecutor.HermesExecutor
com.swmansion.reanimated.Utils
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.horcrux.svg.R$id
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.google.android.gms.common.internal.ReflectedParcelable
com.facebook.jni.UnknownCppException
com.google.android.material.card.MaterialCardView
com.swmansion.reanimated.CopiedEvent
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod
com.google.android.material.timepicker.ClockFaceView
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent
com.facebook.react.defaults.DefaultComponentsRegistry
com.swmansion.reanimated.R$animator
com.reactnativestripesdk.StripeContainerManager
com.google.android.gms.maps.model.LatLng
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
com.facebook.react.bridge.ReadableNativeArray
com.horcrux.svg.R$style
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor
com.facebook.react.bridge.JavaMethodWrapper
androidx.activity.result.ActivityResultRegistry$1
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.stripe.android.core.model.Country
com.horcrux.rnsvg.NativeSvgViewModuleSpec
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetNativeActivityArgs
com.facebook.react.bridge.JavaOnlyMap
com.google.android.gms.wallet.MaskedWallet
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.facebook.soloader.SysUtil$Api14Utils
com.facebook.react.fabric.ComponentFactory
com.facebook.react.bridge.WritableNativeArray
com.stripe.android.ui.core.elements.BsbSpec
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.facebook.react.modules.clipboard.ClipboardModule
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$CanceledSpec
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.facebook.react.modules.share.ShareModule
com.swmansion.reanimated.ReanimatedUIManagerFactory
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion
com.swmansion.reanimated.layoutReanimation.AnimationsManager
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.fbreact.specs.NativeImageEditorSpec
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
androidx.startup.InitializationProvider
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
com.horcrux.svg.SvgViewModule
com.facebook.react.bridge.ReactNoCrashSoftException
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.stripe.android.financialconnections.model.CashBalance
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.stripe.android.ui.core.elements.ContactInformationSpec
com.reactnativestripesdk.AuBECSDebitFormViewManager
com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
com.reactcommunity.rndatetimepicker.TimePickerModule
com.swmansion.reanimated.ReanimatedModule$1
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder
com.airbnb.mvrx.lifecycleAwareLazy$initializeWhenCreated$1
com.facebook.react.bridge.ReadableNativeMap$3
com.stripe.android.financialconnections.model.OauthPrepane
com.facebook.react.bridge.BackgroundExecutor
androidx.appcompat.widget.AppCompatTextView
android.support.v4.media.MediaDescriptionCompat
com.stripe.android.financialconnections.model.ReturningNetworkingUserAccountPicker
com.horcrux.svg.RenderableViewManager
androidx.collection.ArrayMap
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.rnmaps.maps.MapHeatmapManager
com.facebook.fbreact.specs.NativeRedBoxSpec
com.facebook.react.bridge.Callback
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.stripe.android.view.BecsDebitBsbEditText
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel
com.stripe.android.ui.core.elements.autocomplete.model.Place
androidx.core.app.CoreComponentFactory
com.stripe.android.ui.core.elements.AuBankAccountNumberSpec
com.swmansion.reanimated.NodesManager$3
com.reactnativestripesdk.FinancialConnectionsSheetFragment
com.horcrux.svg.R$string
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.rnmaps.maps.MapCircleManager
com.facebook.react.bridge.ReactMethod
com.facebook.react.modules.dialog.DialogModule
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.stripe.android.stripe3ds2.views.ChallengeProgressFragment
com.reactnativepagerview.PagerViewViewManager
com.stripe.android.ui.core.elements.PlaceholderSpec
com.stripe.android.uicore.address.FieldSchema
com.facebook.hermes.intl.Collator
com.stripe.android.financialconnections.model.FinancialConnectionsSession
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback
com.swmansion.reanimated.R$id
com.stripe.android.PaymentSession$lifecycleObserver$1
androidx.activity.ImmLeaksCleaner
com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionActivity
com.facebook.jni.NativeRunnable
com.stripe.android.stripe3ds2.views.ThreeDS2HeaderTextView
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.compose.ui.graphics.BlockGraphicsLayerElement
com.stripe.android.model.ConsumerSession$VerificationSession
com.facebook.react.bridge.Systrace
com.bumptech.glide.load.ImageHeaderParser$ImageType
com.facebook.react.bridge.ReactCallback
com.stripe.android.ui.core.elements.DropdownItemSpec
com.facebook.react.bridge.JSIModule
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.stripe.android.ui.core.elements.SaveForFutureUseSpec
com.horcrux.svg.RNSVGRenderableManager
com.google.android.material.transformation.ExpandableBehavior
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior
com.facebook.react.fabric.Binding
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.facebook.react.bridge.JavaMethodWrapper$10
com.horcrux.svg.R$attr
com.airbnb.mvrx.MavericksState
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.bridge.RuntimeExecutor
androidx.media.AudioAttributesImplBase
com.google.android.material.internal.ClippableRoundedCornerLayout
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow
com.facebook.react.bridge.JSIModulePackage
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.google.android.gms.auth.api.signin.GoogleSignInAccount
androidx.fragment.app.Fragment$6
androidx.work.ArrayCreatingInputMerger
com.facebook.react.bridge.CatalystInstanceImpl$1$1
kotlinx.coroutines.android.AndroidDispatcherFactory
com.stripe.android.financialconnections.model.Entry$Image
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.bridge.Arguments
com.stripe.android.view.SelectShippingMethodWidget
androidx.appcompat.view.menu.ListMenuItemView
com.stripe.android.paymentsheet.flowcontroller.DefaultFlowController$4
androidx.work.impl.background.systemalarm.RescheduleReceiver
com.facebook.react.bridge.JavaOnlyArray$1
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.util.RCTLog
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.google.android.material.transformation.FabTransformationBehavior
kotlin.internal.jdk7.JDK7PlatformImplementations
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.react.bridge.JavaModuleWrapper
com.horcrux.svg.RenderableViewManager$LinearGradientManager
com.facebook.react.bridge.JSIModuleHolder
com.google.android.gms.location.LocationAvailability
com.horcrux.svg.RenderableViewManager$SymbolManager
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.bridge.ReadableNativeArray$1
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel
com.google.android.material.carousel.CarouselLayoutManager
com.swmansion.reanimated.CopiedEvent$1
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.google.android.gms.common.api.internal.LifecycleCallback
com.swmansion.reanimated.AndroidUIScheduler$1
com.swmansion.reanimated.R$layout
com.horcrux.svg.R$dimen: int abc_dialog_fixed_height_minor
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.horcrux.svg.VirtualView: android.graphics.Region mRegion
com.horcrux.svg.R$style: int Base_V22_Theme_AppCompat_Light
com.horcrux.svg.SvgViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.swmansion.reanimated.R$styleable: int SearchView_useDrawerArrowDrawable
com.swmansion.reanimated.R$drawable: int abc_tab_indicator_mtrl_alpha
com.swmansion.reanimated.R$styleable: int[] View
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_tickMarkTint
com.swmansion.reanimated.R$anim: int catalyst_push_up_in
androidx.navigation.NavBackStackEntryState: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.swmansion.reanimated.R$id: int notification_main_column_container
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_visible
com.stripe.android.model.PaymentMethod$Upi: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.swmansion.reanimated.R$styleable: int GradientColor_android_tileMode
com.swmansion.reanimated.R$attr: int actionModeSplitBackground
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mReactTag
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_PopupWindow
com.swmansion.reanimated.R$styleable: int[] AppCompatTextView
com.horcrux.svg.R$styleable: int ActionBar_backgroundStacked
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot sourceViewSnapshot
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.swmansion.reanimated.R$styleable: int View_theme
com.horcrux.svg.R$attr: int gapBetweenBars
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginX
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResultInternal$Completed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.swmansion.reanimated.ReanimatedPackage$1: com.swmansion.reanimated.ReanimatedPackage this$0
com.horcrux.svg.R$attr: int backgroundStacked
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel: com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion Companion
com.horcrux.svg.R$id: int textSpacerNoTitle
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.swmansion.reanimated.R$attr: int spinBars
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textColorLink
com.horcrux.svg.R$styleable: int[] FragmentContainerView
com.swmansion.reanimated.R$dimen: int notification_big_circle_margin
com.horcrux.svg.R$styleable: int ActionBar_titleTextStyle
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button
com.horcrux.svg.R$attr: int actionBarDivider
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.swmansion.reanimated.R$layout: int abc_activity_chooser_view_list_item
com.swmansion.reanimated.R$attr: int tooltipForegroundColor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.horcrux.svg.R$styleable: int[] LinearLayoutCompat_Layout
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.swmansion.reanimated.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Headline
com.horcrux.svg.R$attr: int customNavigationLayout
com.swmansion.reanimated.R$layout: int select_dialog_item_material
com.horcrux.svg.R$string: int link_description
com.horcrux.svg.R$styleable: int DrawerArrowToggle_color
com.swmansion.reanimated.R$attr: int pressedStateOverlayImage
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mTurboModuleCleanupStarted
com.swmansion.reanimated.R$id: int search_go_btn
com.google.crypto.tink.proto.Keyset$Key: int KEY_DATA_FIELD_NUMBER
com.google.crypto.tink.proto.KeyTemplate: java.lang.String typeUrl_
com.swmansion.reanimated.R$attr: int customNavigationLayout
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentLinkedQueue mOnViewAttachItems
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.util.ArrayList viewsToSnapshot
com.swmansion.reanimated.R$attr: int actionModeShareDrawable
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane AUTH_OPTIONS
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int[] mIntBuffer
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
com.swmansion.reanimated.R$color: int abc_secondary_text_material_light
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogStyle
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] $VALUES
com.swmansion.reanimated.R$color: int abc_primary_text_disable_only_material_dark
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$drawable: int abc_text_select_handle_right_mtrl
com.swmansion.reanimated.R$attr: int progressBarImage
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.horcrux.svg.R$attr: int windowFixedHeightMajor
com.stripe.android.googlepaylauncher.GooglePayLauncher$BillingAddressConfig: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog
com.stripe.android.paymentsheet.PaymentSheet$Address: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$layout: int abc_list_menu_item_icon
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mSurfaceId
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.swmansion.reanimated.R$id: int checkbox
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.StripeSdkModule$mActivityEventListener$1 mActivityEventListener
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
com.swmansion.reanimated.R$id: int action_bar_spinner
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionTitle
com.stripe.android.model.PaymentMethodCreateParams$Upi: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.HmacKey hmacKey_
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.horcrux.svg.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.google.android.gms.maps.model.StyleSpan: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.swmansion.reanimated.R$anim: int abc_shrink_fade_out_from_bottom
com.horcrux.svg.R$dimen: int tooltip_margin
com.horcrux.svg.R$color: int dim_foreground_material_dark
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.horcrux.svg.R$layout: int abc_action_menu_layout
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$style: int Theme_AppCompat_NoActionBar
com.swmansion.reanimated.R$styleable: int Toolbar_android_gravity
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabBar
com.horcrux.svg.R$drawable: int abc_list_divider_mtrl_alpha
com.horcrux.svg.R$styleable: int ColorStateListItem_android_lStar
com.horcrux.svg.R$id: int buttonPanel
com.horcrux.svg.R$styleable: int TextAppearance_textLocale
com.horcrux.svg.R$attr: int alertDialogCenterButtons
com.horcrux.svg.R$styleable: int RecycleListView_paddingTopNoTitle
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar
com.swmansion.reanimated.R$color: int primary_text_disabled_material_dark
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
com.horcrux.svg.R$id: int fitBottomStart
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int suggestionRowLayout
com.swmansion.reanimated.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.horcrux.svg.R$styleable: int MenuView_android_itemTextAppearance
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGTextPath
com.swmansion.reanimated.R$layout: int abc_tooltip
com.swmansion.reanimated.R$styleable: int ActionBar_divider
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Switch
com.horcrux.svg.R$attr: int trackTintMode
com.horcrux.svg.R$attr: int roundAsCircle
com.horcrux.svg.R$styleable: int[] Fragment
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.fabric.mounting.MountingManager: java.lang.String TAG
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION_PROGRESS
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.horcrux.svg.R$id: int rn_frame_method
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.proto.KeyTypeEntry DEFAULT_INSTANCE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int dialogPreferredPadding
com.reactnativestripesdk.GooglePayButtonManager: com.reactnativestripesdk.GooglePayButtonManager$Companion Companion
com.horcrux.svg.R$styleable: int Toolbar_titleMarginBottom
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_fontWeight
com.horcrux.svg.R$styleable: int[] ButtonBarLayout
com.horcrux.svg.R$drawable: int notification_template_icon_low_bg
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions PAYMENT_METHOD
com.horcrux.svg.R$layout: int abc_popup_menu_header_item_layout
com.stripe.android.financialconnections.features.reset.ResetViewModel: com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.stripe.android.view.AddPaymentMethodActivityStarter$Result$Failure: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.lang.Object _disposer
com.horcrux.svg.VirtualView: float mScale
com.horcrux.svg.R$layout: int abc_screen_toolbar
com.swmansion.reanimated.R$id: int fitCenter
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderQuery
com.horcrux.svg.R$drawable: int abc_text_cursor_material
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod DASHBOARD
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.ConcurrentHashMap mSurfaceIdToManager
com.swmansion.reanimated.R$style: int Widget_AppCompat_RatingBar_Indicator
com.swmansion.reanimated.R$id: int customPanel
com.horcrux.svg.R$id: int accessibility_actions
com.horcrux.svg.RNSVGRenderableManager: int DEFAULT_BUFFER_SIZE
com.swmansion.reanimated.R$dimen: int abc_search_view_preferred_width
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String NAME
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.stripe.android.ui.core.elements.FormItemSpec: com.stripe.android.ui.core.elements.FormItemSpec$Companion Companion
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Body1
com.stripe.android.view.AddPaymentMethodActivityStarter$Result$Canceled: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: int mSurfaceId
com.swmansion.reanimated.R$attr: int textAppearanceListItem
com.stripe.android.paymentsheet.model.PaymentSelection$New$LinkInline: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int summary_description
com.stripe.android.GooglePayJsonFactory$MerchantInfo: android.os.Parcelable$Creator CREATOR
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: com.bumptech.glide.RequestManager requestManager
com.stripe.android.model.DeferredIntentParams$Mode$Payment: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int submenuarrow
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.horcrux.svg.R$styleable: int PopupWindow_android_popupBackground
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButtonColors: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.BalanceRefresh: com.stripe.android.financialconnections.model.BalanceRefresh$Companion Companion
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.stripe.android.model.SourceTypeModel$SepaDebit: android.os.Parcelable$Creator CREATOR
com.facebook.react.turbomodule.core.TurboModuleManager: boolean sIsSoLibraryLoaded
com.horcrux.svg.R$attr: int windowActionBarOverlay
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer accountConfirmError
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.Map mFabricCommitMarkers
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.Sensor sensor
com.horcrux.svg.R$attr: int actualImageUri
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.KeyData keyData_
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$drawable: int abc_seekbar_thumb_material
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.stripe.android.paymentsheet.model.SavedSelection$None: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int ActionBar_contentInsetEnd
com.stripe.android.paymentsheet.state.GooglePayState$Indeterminate: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_dropdownitem_text_padding_left
com.horcrux.svg.R$styleable: int GradientColor_android_gradientRadius
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
com.stripe.android.financialconnections.model.TextUpdate: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_placeholderImageScaleType
com.swmansion.reanimated.R$attr: int thickness
com.horcrux.svg.R$dimen: int abc_panel_menu_list_width
com.horcrux.svg.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Colored
com.google.android.gms.wallet.OfferWalletObject: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int MenuItem_android_onClick
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.horcrux.svg.R$id: int view_tag_instance_handle
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$style: int Base_V22_Theme_AppCompat_Light
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs initialArgs
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitter
com.stripe.android.model.SourceOrder$Shipping: android.os.Parcelable$Creator CREATOR
com.stripe.android.model.ConsumerPaymentDetails: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.CardFieldView cardFieldView
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
com.horcrux.svg.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.horcrux.svg.R$dimen: int abc_config_prefDialogWidth
com.horcrux.svg.R$dimen: int abc_dialog_min_width_minor
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_actualImageResource
com.swmansion.reanimated.R$drawable: int abc_switch_track_mtrl_alpha
com.horcrux.svg.R$layout: int abc_action_bar_title_item
com.swmansion.reanimated.R$style: int Platform_AppCompat_Light
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: int nextListenerId
com.horcrux.svg.R$dimen: int abc_dropdownitem_text_padding_right
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule mModule
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type$Companion Companion
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Button
com.horcrux.svg.R$attr: int tintMode
com.stripe.android.financialconnections.model.FinancialConnectionsInstitution: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$styleable: int AppCompatTheme_actionButtonStyle
com.horcrux.svg.SvgView: boolean mRendered
com.stripe.android.stripe3ds2.transactions.MessageExtension: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.google.crypto.tink.proto.HmacKeyFormat: int version_
com.stripe.android.paymentsheet.addresselement.AddressLauncherResult$Canceled: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int showAsAction
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.swmansion.reanimated.R$styleable: int[] Autofill_InlineSuggestion
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
com.horcrux.svg.SvgView: java.util.Map mDefinedClipPaths
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.horcrux.svg.R$attr: int buttonPanelSideLayout
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModuleManagerCallbackCleanupScope
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.horcrux.svg.R$integer: int react_native_inspector_proxy_port
com.horcrux.svg.R$style: int Animation_AppCompat_Tooltip
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.stripe.android.link.serialization.PopupPayload$MerchantInfo: com.stripe.android.link.serialization.PopupPayload$MerchantInfo$Companion Companion
com.stripe.android.financialconnections.model.VisualUpdate: com.stripe.android.financialconnections.model.VisualUpdate$Companion Companion
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_CompactMenu
com.horcrux.svg.R$styleable: int FontFamily_fontProviderCerts
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: int mViewTag
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.swmansion.reanimated.R$dimen: int notification_top_pad
com.horcrux.svg.R$attr: int failureImage
com.horcrux.svg.R$dimen: int abc_edit_text_inset_bottom_material
com.facebook.react.fabric.SurfaceHandlerBinding: int NO_SURFACE_ID
com.swmansion.reanimated.R$styleable: int AppCompatImageView_srcCompat
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_WIDTH
com.swmansion.reanimated.R$styleable: int SwitchCompat_track
com.horcrux.svg.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.swmansion.reanimated.R$attr: int switchStyle
com.stripe.android.model.SourceOrderParams$Item: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.horcrux.svg.R$styleable: int GradientColor_android_centerY
com.swmansion.reanimated.R$attr: int subMenuArrow
com.google.android.gms.internal.wallet.zzm: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_gravity
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.horcrux.svg.R$id: int italic
com.swmansion.reanimated.R$layout: int abc_dialog_title_material
com.swmansion.reanimated.R$dimen: int abc_text_size_display_2_material
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: boolean mCanCoalesceEvent
com.horcrux.svg.R$id: int view_tree_lifecycle_owner
com.horcrux.svg.R$id: int action_image
com.swmansion.reanimated.R$id: int tag_on_receive_content_listener
com.horcrux.svg.R$id: int tag_unhandled_key_event_manager
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.horcrux.svg.R$styleable: int AppCompatTheme_panelBackground
com.horcrux.svg.R$id: int rn_redbox_report_label
com.horcrux.svg.R$style: int Widget_AppCompat_SeekBar
com.swmansion.reanimated.R$attr: int fontProviderPackage
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowColor
com.horcrux.svg.R$color: int secondary_text_disabled_material_light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.swmansion.reanimated.R$styleable: int CheckedTextView_android_checkMark
com.horcrux.svg.R$attr: int goIcon
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.rnmaps.maps.MapManager: com.google.android.gms.maps.GoogleMapOptions googleMapOptions
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$dimen: int abc_disabled_alpha_material_light
com.horcrux.svg.R$dimen: int abc_text_size_small_material
com.horcrux.svg.R$animator: int fragment_fade_enter
com.swmansion.reanimated.R$color: int abc_tint_btn_checkable
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.horcrux.svg.R$dimen: int abc_switch_padding
com.horcrux.svg.R$anim: int abc_fade_out
com.swmansion.reanimated.R$layout: int redbox_view
com.stripe.android.model.ConsumerSession$VerificationSession: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SwitchCompat_thumbTint
com.horcrux.svg.R$id: int normal
com.horcrux.svg.R$id: int accessibility_custom_action_29
com.horcrux.svg.R$attr: int searchIcon
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlActivated
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display4
com.horcrux.svg.R$id: int topPanel
com.horcrux.svg.R$attr: int editTextColor
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
com.swmansion.reanimated.R$string: int abc_menu_sym_shortcut_label
com.swmansion.reanimated.R$anim: int abc_popup_exit
com.stripe.android.model.BinRange: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int src_atop
com.swmansion.reanimated.R$attr: int selectableItemBackground
com.swmansion.reanimated.R$attr: int actualImageResource
com.horcrux.svg.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mMostRecentSurfaceMountingManager
com.horcrux.svg.R$layout: int abc_action_mode_close_item_material
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean canRetry
com.facebook.react.fabric.StateWrapperImpl: java.lang.String TAG
com.swmansion.reanimated.R$attr: int alertDialogButtonGroupStyle
com.horcrux.svg.R$style: int Widget_Autofill_InlineSuggestionStartIconStyle
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.ByteString value_
com.google.crypto.tink.proto.AesSivKey: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.R$layout: int notification_action
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter mEventEmitter
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGMask
com.swmansion.reanimated.R$style: int Platform_V21_AppCompat_Light
com.google.crypto.tink.proto.Keyset: int KEY_FIELD_NUMBER
com.stripe.android.core.networking.ApiRequest$Options: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList keyInfo_
com.stripe.android.financialconnections.FinancialConnectionsSheetForTokenResult$Canceled: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.horcrux.svg.R$attr: int colorAccent
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.horcrux.svg.R$drawable: int abc_text_select_handle_middle_mtrl
com.swmansion.reanimated.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener this$0
com.proyecto26.inappbrowser.RNInAppBrowserModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel: com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion Companion
com.horcrux.svg.R$attr: int listPreferredItemPaddingRight
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.swmansion.reanimated.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async confirmVerification
com.horcrux.svg.R$style: int SpinnerDatePickerStyle
com.horcrux.svg.R$attr: int actionBarStyle
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.stripe.android.model.DeferredIntentParams$Mode$Setup: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int abc_tint_default
com.swmansion.reanimated.R$dimen: int abc_text_size_headline_material
com.stripe.android.model.ConsumerSession: android.os.Parcelable$Creator CREATOR
com.stripe.android.auth.PaymentBrowserAuthContract$Args: com.stripe.android.auth.PaymentBrowserAuthContract$Args$CREATOR CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category INVESTMENT
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_exitFadeDuration
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.horcrux.svg.R$string: int abc_search_hint
com.horcrux.svg.R$styleable: int AlertDialog_buttonPanelSideLayout
com.swmansion.reanimated.R$dimen: int abc_action_bar_default_height_material
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int abc_menu_meta_shortcut_label
com.horcrux.svg.R$anim: int abc_tooltip_exit
com.swmansion.reanimated.R$style: int Theme_Catalyst_RedBox
com.horcrux.svg.R$styleable: int AppCompatTheme_searchViewStyle
com.horcrux.svg.R$layout: int redbox_view
com.facebook.react.config.ReactFeatureFlags: int turboModuleBindingMode
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane UNEXPECTED_ERROR
com.horcrux.svg.R$attr: int titleMarginStart
com.stripe.android.financialconnections.model.Body: android.os.Parcelable$Creator CREATOR
com.stripe.android.uicore.address.CountryAddressSchema: com.stripe.android.uicore.address.CountryAddressSchema$Companion Companion
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.horcrux.svg.R$attr: int collapseIcon
com.horcrux.svg.R$styleable: int FontFamily_fontProviderPackage
com.horcrux.svg.R$attr: int actionButtonStyle
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.horcrux.svg.R$layout: int abc_alert_dialog_title_material
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product ISSUING
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrKey DEFAULT_INSTANCE
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product CANARY
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.swmansion.reanimated.R$id: int accessibility_label
com.swmansion.reanimated.R$id: int accessibility_custom_action_0
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_Dialog
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.stripe.android.stripe3ds2.init.AppInfo: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int content
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlHighlight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.horcrux.svg.R$styleable: int ActionBar_navigationMode
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.horcrux.svg.R$styleable: int[] CompoundButton
com.horcrux.svg.R$attr: int retryImage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.swmansion.reanimated.R$drawable: int notify_panel_notification_icon_bg
com.horcrux.svg.R$dimen: int tooltip_horizontal_padding
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int Toolbar_menu
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int[] AppCompatImageView
com.horcrux.svg.R$attr: int textAppearanceLargePopupMenu
com.swmansion.reanimated.R$attr: int alphabeticModifiers
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.horcrux.svg.R$styleable: int SearchView_android_focusable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.horcrux.svg.R$attr: int drawableTint
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.horcrux.svg.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.horcrux.svg.R$styleable: int[] Toolbar
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: kotlin.Lazy $cachedSerializer$delegate
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
com.swmansion.reanimated.R$attr: int dialogCornerRadius
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxParams params_
com.horcrux.svg.R$attr: int selectableItemBackground
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.events.EventBeatManager mEventBeatManager
com.horcrux.svg.R$id: int src_in
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.horcrux.svg.R$attr: int switchTextAppearance
com.swmansion.reanimated.R$styleable: int[] RecycleListView
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status$Companion Companion
com.swmansion.reanimated.R$attr: int toolbarStyle
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.react.bridge.ReactApplicationContext mContext
com.horcrux.svg.R$styleable: int ActionBar_elevation
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.google.crypto.tink.proto.HmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int backgroundImage
com.horcrux.svg.R$color: int tooltip_background_light
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundAsCircle
com.horcrux.svg.R$drawable: int abc_star_black_48dp
com.horcrux.svg.R$styleable: int ColorStateListItem_android_alpha
com.horcrux.svg.R$attr: int roundingBorderWidth
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus webAuthFlowStatus
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$id: int accessibility_custom_action_22
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.horcrux.svg.R$layout: int abc_cascading_menu_item_layout
com.horcrux.svg.R$attr: int windowFixedWidthMajor
com.google.android.gms.wallet.wobs.WalletObjectMessage: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGPattern
com.stripe.android.model.PaymentIntent: android.os.Parcelable$Creator CREATOR
com.stripe.android.stripe3ds2.transaction.SdkTransactionId: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel: com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion Companion
com.horcrux.svg.R$styleable: int MenuItem_actionProviderClass
com.google.crypto.tink.proto.AesCmacKeyFormat: int keySize_
com.swmansion.reanimated.R$style: int Platform_Widget_AppCompat_Spinner
com.swmansion.reanimated.R$dimen: int abc_text_size_body_2_material
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.swmansion.reanimated.R$id: int accessibility_custom_action_7
com.swmansion.reanimated.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EMS
com.horcrux.svg.R$drawable: int abc_spinner_textfield_background_material
com.horcrux.svg.R$id: int search_bar
com.horcrux.svg.R$style: int Widget_AppCompat_ActivityChooserView
com.google.crypto.tink.shaded.protobuf.AbstractMessageLite: int memoizedHashCode
com.horcrux.svg.R$styleable: int MenuView_android_itemBackground
com.swmansion.reanimated.R$interpolator: int fast_out_slow_in
com.swmansion.reanimated.R$attr: int textAppearanceSmallPopupMenu
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean SHOW_CHANGED_VIEW_HIERARCHIES
com.swmansion.reanimated.R$id: int accessibility_custom_action_5
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingSubviewCountMap
com.horcrux.svg.R$styleable: int MenuItem_android_onClick
com.horcrux.svg.VirtualView: android.graphics.RectF mClientRect
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory MORTGAGE
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.swmansion.reanimated.R$layout: int notification_template_icon_group
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display1
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_EditText
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutUpdateAnimation
com.horcrux.svg.R$string: int catalyst_reload_error
com.google.crypto.tink.proto.Keyset$Key: int STATUS_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dividerVertical
com.stripe.android.paymentsheet.model.PaymentSelection$Link: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.SvgView$Events: java.lang.String mName
com.swmansion.reanimated.R$attr: int listLayout
com.horcrux.svg.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.google.crypto.tink.proto.KmsAeadKey: int PARAMS_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: java.lang.String value
com.horcrux.svg.R$drawable: int abc_tab_indicator_mtrl_alpha
com.swmansion.reanimated.R$styleable: int MenuItem_android_title
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.swmansion.reanimated.R$attr: int textColorSearchUrl
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.horcrux.svg.VirtualView: java.lang.String mName
com.google.crypto.tink.proto.HmacKeyFormat: int keySize_
com.horcrux.svg.R$string: int catalyst_reload_button
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontStyle
com.stripe.android.ui.core.elements.autocomplete.model.Place: com.stripe.android.ui.core.elements.autocomplete.model.Place$Companion Companion
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.horcrux.svg.R$styleable: int SearchView_submitBackground
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.airbnb.mvrx.Async payload
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_DELETE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_X
com.swmansion.reanimated.R$dimen: int abc_alert_dialog_button_bar_height
com.horcrux.svg.R$attr: int buttonTint
com.horcrux.svg.R$attr: int windowMinWidthMajor
com.horcrux.svg.R$dimen: int abc_action_bar_stacked_max_height
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager parentViewManager
com.google.crypto.tink.proto.AesGcmKeyFormat: int keySize_
com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField: com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField$Companion Companion
com.horcrux.svg.R$dimen: int abc_text_size_title_material_toolbar
com.horcrux.svg.R$styleable: int MenuGroup_android_checkableBehavior
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_overlayImage
com.horcrux.svg.R$styleable: int SearchView_hideNavigationIcon
com.swmansion.reanimated.R$styleable: int ActionBar_homeAsUpIndicator
com.swmansion.reanimated.R$attr: int titleMargin
com.horcrux.svg.R$styleable: int AppCompatTheme_colorError
com.horcrux.svg.R$color: int abc_secondary_text_material_dark
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane NETWORKING_LINK_VERIFICATION
com.horcrux.svg.RNSVGRenderableManager: java.lang.String NAME
com.horcrux.svg.R$id: int up
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.lang.String TAG
com.horcrux.svg.R$attr: int closeIcon
com.horcrux.svg.R$dimen: int abc_text_size_display_4_material
com.swmansion.reanimated.R$anim: int catalyst_slide_down
com.horcrux.svg.R$styleable: int SwitchCompat_splitTrack
com.horcrux.svg.R$id: int action_bar_container
com.horcrux.svg.R$color: int ripple_material_dark
com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult$Timeout: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.horcrux.svg.R$attr: int switchPadding
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.horcrux.svg.R$anim: int abc_slide_in_bottom
com.swmansion.reanimated.R$styleable: int ActivityChooserView_initialActivityCount
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.horcrux.svg.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_backgroundImage
com.swmansion.reanimated.R$styleable: int ColorStateListItem_android_color
com.horcrux.svg.R$id: int right_side
com.swmansion.reanimated.R$styleable: int AppCompatTheme_editTextColor
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGPath
com.horcrux.svg.R$layout: int abc_search_dropdown_item_icons_2line
com.horcrux.svg.R$color: int abc_tint_switch_track
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.stripe.android.EphemeralOperation$Customer$GetPaymentMethods: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.ReturningNetworkingUserAccountPicker: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeBackground
com.horcrux.svg.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mReattachedViews
com.horcrux.svg.R$styleable: int ActionBar_subtitle
com.stripe.android.model.Source$Receiver: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int GradientColor_android_endX
com.swmansion.reanimated.R$dimen: int abc_action_button_min_height_material
com.horcrux.svg.R$anim: int abc_popup_enter
com.horcrux.svg.VirtualView: android.graphics.Path mCachedClipPath
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.horcrux.svg.R$id: int rn_frame_file
com.swmansion.reanimated.R$styleable: int[] ActivityChooserView
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.swmansion.reanimated.R$style: int Widget_AppCompat_RatingBar_Small
com.reactnativepagerview.PagerViewViewManager: com.reactnativepagerview.PagerViewViewManager$Companion Companion
com.google.android.gms.identity.intents.model.UserAddress: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_list_item_height_material
com.horcrux.svg.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.horcrux.svg.R$styleable: int ActionBar_contentInsetRight
com.swmansion.reanimated.R$styleable: int SwitchCompat_android_thumb
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListPopupWindow
com.horcrux.svg.R$id: int custom
com.swmansion.reanimated.R$styleable: int ActionBar_backgroundStacked
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.horcrux.svg.R$attr: int thumbTextPadding
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength strokeWidth
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.swmansion.reanimated.R$id: int accessibility_role
com.horcrux.svg.R$attr: int commitIcon
com.stripe.android.paymentsheet.paymentdatacollection.ach.USBankAccountFormScreenState$SavedAccount: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int abc_capital_on
com.horcrux.svg.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
com.swmansion.reanimated.R$dimen: int abc_text_size_large_material
com.horcrux.svg.R$attr: int colorControlActivated
com.swmansion.reanimated.R$attr: int tickMark
com.swmansion.reanimated.R$attr: int actionBarSplitStyle
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable mReactBackgroundDrawable
com.google.crypto.tink.proto.AesEaxParams: int ivSize_
com.horcrux.svg.R$attr: int windowActionBar
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.horcrux.svg.RenderableViewManager$TextViewManager: java.lang.String REACT_CLASS
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: kotlin.Lazy $cachedSerializer$delegate
com.stripe.android.view.StripeEditText$StripeEditTextState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
com.swmansion.reanimated.R$styleable: int ActionBar_customNavigationLayout
com.swmansion.reanimated.R$styleable: int Fragment_android_name
com.horcrux.svg.R$id: int line1
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dialog
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.swmansion.reanimated.R$styleable: int GradientColor_android_endY
com.swmansion.reanimated.R$id: int labelled_by
com.swmansion.reanimated.R$styleable: int Spinner_android_entries
com.stripe.android.stripe3ds2.transaction.ChallengeAction$Oob: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.NodesManager mNodesManager
com.horcrux.svg.R$attr: int viewInflaterClass
com.swmansion.reanimated.R$styleable: int MenuView_android_verticalDivider
com.stripe.android.model.SourceParams$WeChatParams: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int popupTheme
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.swmansion.reanimated.R$attr: int track
com.swmansion.reanimated.R$drawable: int abc_spinner_mtrl_am_alpha
com.horcrux.svg.R$styleable: int AppCompatImageView_srcCompat
com.swmansion.reanimated.R$dimen: int highlight_alpha_material_dark
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListMenuView
com.swmansion.reanimated.R$attr: int subtitleTextColor
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: java.lang.String value
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textStyle
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingBatchExecutionStats
com.swmansion.reanimated.layoutReanimation.Snapshot: int height
com.swmansion.reanimated.R$color: int material_grey_850
com.swmansion.reanimated.R$id: int search_edit_frame
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
com.swmansion.reanimated.R$attr: int showText
com.horcrux.svg.R$styleable: int ActionBar_progressBarPadding
com.stripe.android.model.ConsumerPaymentDetailsCreateParams$Card: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.horcrux.svg.VirtualView: boolean mCTMInvertible
com.swmansion.reanimated.R$attr: int buttonBarNegativeButtonStyle
com.horcrux.svg.R$attr: int listPreferredItemPaddingStart
com.swmansion.reanimated.R$style: int Animation_AppCompat_Tooltip
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.stripe.android.model.Stripe3ds2AuthResult$Ares: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: java.lang.String activeAuthSession
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.swmansion.reanimated.R$id: int fitStart
com.horcrux.svg.R$attr: int actionModeCloseButtonStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.horcrux.svg.R$styleable: int Toolbar_subtitleTextAppearance
com.swmansion.reanimated.R$anim: int abc_grow_fade_in_from_bottom
com.google.android.gms.wallet.button.ButtonOptions: android.os.Parcelable$Creator CREATOR
com.stripe.android.model.SourceParams: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] ActionMenuView
com.horcrux.svg.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.horcrux.svg.R$attr: int actionBarTabBarStyle
com.horcrux.svg.R$attr: int fontProviderFetchTimeout
com.stripe.android.financialconnections.features.consent.ConsentState: java.util.List merchantLogos
com.swmansion.reanimated.R$id: int focusCrop
com.horcrux.svg.R$id: int autofill_inline_suggestion_title
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableLeftCompat
com.swmansion.reanimated.R$attr: int expandActivityOverflowButtonDrawable
com.swmansion.reanimated.R$styleable: int AppCompatTheme_seekBarStyle
com.horcrux.svg.R$style: int Theme_FullScreenDialogAnimatedFade
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualViewManager$MatrixDecompositionContext sMatrixDecompositionContext
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingViews
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
com.facebook.react.config.ReactFeatureFlags: boolean enableAtomicRegisterSegment
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.horcrux.svg.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$attr: int checkMarkTintMode
com.horcrux.svg.R$color: int accent_material_light
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ImageButton
com.horcrux.svg.R$id: int accessibility_custom_action_11
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_failureImageScaleType
com.horcrux.svg.R$style: int Base_V23_Theme_AppCompat
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.stripe.android.financialconnections.model.PartnerNotice: com.stripe.android.financialconnections.model.PartnerNotice$Companion Companion
com.swmansion.reanimated.sensor.ReanimatedSensorListener: com.swmansion.reanimated.nativeProxy.SensorSetter setter
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.horcrux.svg.R$styleable: int Toolbar_android_gravity
com.horcrux.svg.R$attr: int dropDownListViewStyle
com.horcrux.svg.R$styleable: int ActionBar_contentInsetStart
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.horcrux.svg.R$styleable: int SearchView_commitIcon
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.stripe.android.PaymentRelayStarter$Args$PaymentIntentArgs: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display1
com.horcrux.svg.R$color: int secondary_text_disabled_material_dark
com.stripe.android.financialconnections.presentation.WebAuthFlowState$InProgress: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_action_bar_elevation_material
com.horcrux.svg.R$id: int fps_text
com.horcrux.svg.R$color: int abc_tint_seek_thumb
com.swmansion.reanimated.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow FINICITY_CONNECT_V2_OAUTH_WEBVIEW
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.facebook.jni.CppSystemErrorException: int errorCode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.horcrux.svg.R$dimen: int abc_text_size_display_1_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_VISIBLE
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType MM
com.swmansion.reanimated.R$attr: int collapseContentDescription
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect sHelperRect
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.horcrux.svg.R$styleable: int AppCompatTextView_emojiCompatEnabled
com.horcrux.svg.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.horcrux.svg.R$string: int abc_action_bar_up_description
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
com.horcrux.svg.R$styleable: int SearchView_goIcon
com.horcrux.svg.R$bool: int abc_config_actionMenuItemAllCaps
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason CUSTOM_MANUAL_ENTRY
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$string: int state_off_description
com.swmansion.reanimated.R$attr: int queryHint
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.horcrux.svg.R$attr: int contentInsetLeft
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.horcrux.svg.R$id: int react_test_id
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Field mBorderRadiusField
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.swmansion.reanimated.R$drawable: int btn_radio_off_mtrl
com.stripe.android.model.ElementsSessionParams$DeferredIntentType: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.horcrux.svg.R$attr: int listPreferredItemPaddingLeft
com.horcrux.svg.R$styleable: int ColorStateListItem_alpha
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.horcrux.svg.R$styleable: int SimpleDraweeView_failureImage
com.horcrux.svg.R$styleable: int MenuItem_showAsAction
com.horcrux.svg.R$dimen: int abc_action_button_min_height_material
com.horcrux.svg.R$color: int foreground_material_light
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.stripe.android.model.PaymentMethod$AuBecsDebit: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogTheme
com.horcrux.svg.RenderableViewManager$CircleViewManager: java.lang.String REACT_CLASS
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane ATTACH_LINKED_PAYMENT_ACCOUNT
com.horcrux.svg.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int MenuGroup_android_visible
com.horcrux.svg.R$styleable: int Toolbar_title
com.swmansion.reanimated.R$styleable: int MenuItem_numericModifiers
com.swmansion.reanimated.R$color: int abc_hint_foreground_material_light
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGEllipse
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_actualImageScaleType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.stripe.android.ui.core.elements.NameSpec: com.stripe.android.ui.core.elements.NameSpec$Companion Companion
com.swmansion.reanimated.R$style: int Theme_AppCompat_CompactMenu
com.swmansion.reanimated.R$dimen: int abc_action_bar_content_inset_material
com.facebook.react.fabric.FabricUIManager$4: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.R$attr: int actionMenuTextColor
com.swmansion.reanimated.R$id: int action_menu_presenter
com.swmansion.reanimated.R$attr: int buttonGravity
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_DEFAULT
com.horcrux.svg.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String account
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type$Companion Companion
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Dialog
com.horcrux.svg.R$id: int right_icon
com.swmansion.reanimated.R$styleable: int SearchView_queryHint
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.swmansion.reanimated.R$color: int error_color_material_dark
com.swmansion.reanimated.R$color: int secondary_text_disabled_material_light
com.swmansion.reanimated.R$anim: int abc_tooltip_exit
com.horcrux.svg.R$styleable: int GradientColor_android_startColor
com.swmansion.reanimated.R$id: int text2
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane NETWORKING_SAVE_TO_LINK_VERIFICATION
com.horcrux.svg.R$attr: int panelMenuListTheme
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_color
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonStyle
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async lookupAccount
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status$Companion Companion
com.horcrux.svg.R$styleable: int GradientColorItem_android_offset
com.swmansion.reanimated.R$string: int catalyst_sample_profiler_enable
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithAnimation
com.google.crypto.tink.proto.AesGcmKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.horcrux.svg.R$attr: int thumbTint
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Small
com.horcrux.svg.R$styleable: int TextAppearance_android_textColorLink
com.stripe.android.model.PaymentMethodCreateParams: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundingBorderPadding
com.swmansion.reanimated.R$attr: int editTextBackground
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View mTransitionContainer
com.swmansion.reanimated.R$styleable: int SearchView_animateMenuItems
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContractV2$Args$InjectionParams: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.view.ReactViewGroup: int mLayoutDirection
com.horcrux.svg.R$id: int accessibility_value
com.horcrux.svg.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.swmansion.reanimated.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.stripe.android.view.PaymentFlowActivityStarter$Args: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Platform_V21_AppCompat_Light
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status FAILED
com.horcrux.svg.SvgView: float mVbWidth
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Time
com.horcrux.svg.R$attr: int icon
com.horcrux.svg.R$color: int abc_search_url_text
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.Object[] mObjBuffer
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$styleable: int AlertDialog_listItemLayout
com.horcrux.svg.R$attr: int homeLayout
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.swmansion.reanimated.R$dimen: int abc_progress_bar_height_material
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.location.zzdb: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_tab_indicator_material
com.swmansion.reanimated.R$styleable: int AlertDialog_buttonIconDimen
com.horcrux.svg.R$color: int secondary_text_default_material_light
com.swmansion.reanimated.R$id: int async
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMark
com.horcrux.svg.R$string: int catalyst_debug_open
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.reactnativecommunity.picker.ReactPickerManager: boolean $assertionsDisabled
com.horcrux.svg.R$string: int catalyst_devtools_open
com.horcrux.svg.R$styleable: int LinearLayoutCompat_divider
com.horcrux.svg.R$attr: int colorError
com.swmansion.reanimated.R$layout: int abc_action_bar_up_container
com.horcrux.svg.R$layout: int notification_template_part_chronometer
com.horcrux.svg.R$id: int accessibility_custom_action_14
com.swmansion.reanimated.R$color: int abc_btn_colored_text_material
com.horcrux.svg.R$styleable: int[] SimpleDraweeView
com.horcrux.svg.R$color: int abc_tint_edittext
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.horcrux.svg.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowRadius
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
com.google.crypto.tink.proto.AesCmacKeyFormat: int PARAMS_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int progressBarImageScaleType
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Title
com.swmansion.reanimated.R$string: int header_description
com.horcrux.svg.R$styleable: int SearchView_voiceIcon
com.swmansion.reanimated.R$style: int Animation_AppCompat_Dialog
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int ratingBarStyleIndicator
com.swmansion.reanimated.R$style: int Animation_AppCompat_DropDownUp
com.swmansion.reanimated.R$id: int icon
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.horcrux.svg.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int mReactTag
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: java.lang.String value
com.horcrux.svg.R$id: int accessibility_custom_action_19
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarStyle
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int CompoundButton_android_button
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_orientation
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display4
com.stripe.android.paymentsheet.state.LinkState: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesEaxKey: int PARAMS_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopStart
com.horcrux.svg.R$styleable: int MenuView_android_windowAnimationStyle
com.horcrux.svg.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.swmansion.reanimated.R$id: int content
com.horcrux.svg.R$styleable: int DrawerArrowToggle_barLength
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.horcrux.svg.VirtualView: java.lang.String mMarkerEnd
com.swmansion.reanimated.R$string: int catalyst_hot_reloading_auto_disable
com.horcrux.svg.R$style: int Theme_FullScreenDialog
com.swmansion.reanimated.R$color: int dim_foreground_disabled_material_dark
com.stripe.android.model.StripeIntent$NextActionData$DisplayOxxoDetails: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsInstitution: com.stripe.android.financialconnections.model.FinancialConnectionsInstitution$Companion Companion
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String validPhone
com.stripe.android.financialconnections.model.FinancialConnectionsAccount: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Companion Companion
com.horcrux.svg.R$string: int menuitem_description
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderColor
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.facebook.react.config.ReactFeatureFlags: boolean useMapBufferProps
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$animator: int fragment_close_exit
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$CanceledSpec: com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$CanceledSpec INSTANCE
com.rnmaps.maps.MapGradientPolylineManager: android.util.DisplayMetrics metrics
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.List mDevToolsReactPerfLoggerListeners
com.horcrux.svg.R$id: int accessibility_custom_action_16
com.swmansion.reanimated.R$dimen: int abc_action_button_min_width_material
com.stripe.android.stripe3ds2.transaction.ChallengeAction$HtmlForm: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status[] $VALUES
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events EVENT_DATA_URL
com.horcrux.svg.R$drawable: int abc_ratingbar_material
com.reactnativestripesdk.StripeSdkModule: java.lang.String stripeAccountId
com.horcrux.svg.R$color: int switch_thumb_disabled_material_dark
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_TabBar
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View sourceView
com.swmansion.reanimated.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane MANUAL_ENTRY
com.horcrux.svg.R$id: int expanded_menu
com.horcrux.svg.R$attr: int colorPrimary
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginBottom
com.stripe.android.paymentsheet.PaymentOptionResult$Canceled: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int[] ActionBarLayout
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopStart
com.swmansion.reanimated.R$dimen: int abc_edit_text_inset_top_material
com.horcrux.svg.R$drawable: int abc_textfield_search_material
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
com.swmansion.reanimated.R$styleable: int SwitchCompat_trackTint
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.stripe.android.PaymentSessionData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int actionBarItemBackground
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.horcrux.svg.R$attr: int popupWindowStyle
com.horcrux.svg.R$styleable: int MenuGroup_android_id
kotlinx.coroutines.CancelledContinuation: int _resumed
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
com.horcrux.svg.R$string: int catalyst_hot_reloading_auto_disable
com.swmansion.reanimated.R$id: int textSpacerNoButtons
com.swmansion.reanimated.R$attr: int actionBarTabTextStyle
com.stripe.android.model.PaymentMethodCreateParams$AuBecsDebit: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int tag_transition_group
com.horcrux.svg.R$layout: int notification_action
com.reactnativestripesdk.GooglePayButtonManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int AppCompatImageView_tintMode
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory CHECKING
com.horcrux.svg.R$attr: int spinBars
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Small
com.stripe.android.paymentsheet.addresselement.AddressElementActivityContract$Result: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_star_small
com.swmansion.reanimated.R$drawable: int test_level_drawable
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.stripe.android.financialconnections.model.CreditBalance: com.stripe.android.financialconnections.model.CreditBalance$Companion Companion
com.horcrux.svg.R$styleable: int TextAppearance_android_fontFamily
com.horcrux.svg.R$string: int state_on_description
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.swmansion.reanimated.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.horcrux.svg.R$attr: int retryImageScaleType
com.stripe.android.financialconnections.model.PaymentAccount: com.stripe.android.financialconnections.model.PaymentAccount$Companion Companion
com.swmansion.reanimated.R$drawable: int abc_ic_clear_material
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_STATE
com.azendoo.reactnativesnackbar.SnackbarModule: java.util.List mActiveSnackbars
com.horcrux.svg.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.horcrux.svg.R$string: int catalyst_settings_title
com.stripe.android.financialconnections.model.SynchronizeSessionResponse: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int windowActionModeOverlay
com.horcrux.svg.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.horcrux.svg.R$styleable: int AppCompatTextView_android_textAppearance
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Caption
com.horcrux.svg.R$dimen: int abc_action_bar_overflow_padding_end_material
com.horcrux.svg.R$anim: int abc_fade_in
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_TRANSFORM_MATRIX
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionInParentIndex
com.horcrux.svg.R$attr: int track
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.google.crypto.tink.proto.HmacKey: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.stripe.android.paymentsheet.PaymentSheet$InitializationMode$DeferredIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int spinnerDropDownItemStyle
com.horcrux.svg.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.horcrux.svg.R$attr: int backgroundTint
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: java.util.HashMap listeners
com.horcrux.svg.RenderableViewManager$LineViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.swmansion.reanimated.R$styleable: int AppCompatTheme_imageButtonStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
com.stripe.android.model.PaymentMethod$Card$ThreeDSecureUsage: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int abc_list_selector_disabled_holo_light
com.horcrux.svg.R$id: int view_tree_saved_state_registry_owner
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrParams params_
com.horcrux.svg.R$string: int catalyst_hot_reloading_stop
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dark
com.facebook.react.fabric.FabricUIManager$3: com.facebook.react.fabric.FabricUIManager this$0
com.google.crypto.tink.proto.KeyTypeEntry: boolean newKeyAllowed_
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow MX_OAUTH_WEBVIEW
com.horcrux.svg.R$dimen: int notification_top_pad
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.horcrux.svg.R$attr: int roundedCornerRadius
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int action_bar
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.swmansion.reanimated.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category UNKNOWN
com.horcrux.svg.R$styleable: int ActionBar_title
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopLeft
com.swmansion.reanimated.R$drawable: int abc_list_selector_background_transition_holo_dark
com.horcrux.svg.R$style: int Base_Animation_AppCompat_Dialog
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.swmansion.reanimated.R$color: int abc_background_cache_hint_selector_material_light
com.horcrux.svg.R$string: int abc_searchview_description_submit
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane LINK_LOGIN
com.horcrux.svg.R$string: int alert_description
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
com.horcrux.svg.R$attr: int actionBarTheme
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView svgView
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
com.swmansion.reanimated.R$color: int ripple_material_light
com.horcrux.svg.R$attr: int pressedStateOverlayImage
com.swmansion.reanimated.R$attr: int color
com.horcrux.svg.R$id: int accessibility_custom_action_15
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] quaternion
com.horcrux.svg.R$attr: int emojiCompatEnabled
com.horcrux.svg.RenderableViewManager$PathViewManager: java.lang.String REACT_CLASS
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacKeyFormat DEFAULT_INSTANCE
com.swmansion.reanimated.R$styleable: int Toolbar_titleTextColor
com.horcrux.svg.R$style: int TextAppearance_AppCompat
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
com.horcrux.svg.R$styleable: int ColorStateListItem_android_color
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async searchInstitutions
com.stripe.android.stripe3ds2.transaction.InitChallengeResult$End: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int abc_list_longpressed_holo
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Colored
com.swmansion.reanimated.R$color: int dim_foreground_disabled_material_light
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.horcrux.svg.R$dimen: int abc_text_size_display_3_material
com.horcrux.svg.R$id: int autofill_inline_suggestion_start_icon
com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult$Success: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.swmansion.reanimated.R$id: int accessibility_custom_action_30
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.swmansion.reanimated.R$styleable: int ViewStubCompat_android_id
com.swmansion.reanimated.R$styleable: int[] ColorStateListItem
com.swmansion.reanimated.R$styleable: int AppCompatTextView_emojiCompatEnabled
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList entry_
com.horcrux.svg.R$id: int tag_unhandled_key_listeners
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadImpl messageQueueThread
com.swmansion.reanimated.R$styleable: int MenuItem_contentDescription
com.horcrux.svg.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.swmansion.reanimated.R$attr: int actionModePasteDrawable
com.swmansion.reanimated.R$drawable: int notification_tile_bg
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel: com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion Companion
com.swmansion.reanimated.R$styleable: int AppCompatTheme_editTextBackground
com.swmansion.reanimated.R$attr: int panelBackground
com.swmansion.reanimated.R$color: int material_deep_teal_200
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int AES_CTR_KEY_FORMAT_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.swmansion.reanimated.R$dimen: int notification_right_icon_size
com.horcrux.svg.VirtualView: boolean mTransformInvertible
com.stripe.android.financialconnections.model.NetworkedAccountsList: com.stripe.android.financialconnections.model.NetworkedAccountsList$Companion Companion
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane initialPane
com.horcrux.svg.R$color: int abc_tint_btn_checkable
com.stripe.android.model.ElementsSessionParams$PaymentIntentType: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GRAVITY
com.swmansion.reanimated.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod AMOUNTS
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.facebook.react.fabric.CppViewMutationsWrapper: com.facebook.jni.HybridData mHybridData
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PROPS
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.horcrux.svg.R$string: int abc_menu_shift_shortcut_label
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.swmansion.reanimated.R$drawable: int btn_radio_on_mtrl
com.swmansion.reanimated.R$dimen: int abc_seekbar_track_background_height_material
com.swmansion.reanimated.R$color: int tooltip_background_light
com.horcrux.svg.R$dimen: int abc_dialog_list_padding_top_no_title
com.horcrux.svg.R$attr: int placeholderImage
com.horcrux.svg.R$drawable: int abc_cab_background_top_material
com.horcrux.svg.R$style: int Theme_Catalyst_LogBox
com.stripe.android.model.wallets.Wallet$ApplePayWallet: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int chronometer
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
com.stripe.android.model.CustomerCard: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int windowMinWidthMinor
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomRight
com.horcrux.svg.R$id: int edit_query
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.swmansion.reanimated.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.swmansion.reanimated.R$attr: int spinnerStyle
kotlin.SafePublicationLazyImpl: java.lang.Object _value
com.horcrux.svg.R$id: int tag_accessibility_actions
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean reducedBranding
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: java.lang.ref.WeakReference reactContext
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.horcrux.svg.R$string: int catalyst_debug_error
com.stripe.android.link.serialization.PopupPayload: com.stripe.android.link.serialization.PopupPayload$Companion Companion
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int version_
com.swmansion.reanimated.R$id: int chronometer
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] SearchView
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mCurrentSharedTransitionViews
com.horcrux.svg.R$color: int abc_primary_text_material_light
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type CASH
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason UNKNOWN
com.swmansion.reanimated.R$attr: int dropdownListPreferredItemHeight
com.swmansion.reanimated.R$attr: int titleMarginBottom
com.horcrux.svg.R$dimen: int abc_text_size_subtitle_material_toolbar
com.horcrux.svg.R$attr: int roundingBorderColor
com.horcrux.svg.R$attr: int autoCompleteTextViewStyle
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.stripe.android.stripe3ds2.init.HardwareId: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_hot_reloading_auto_enable
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.horcrux.svg.R$attr: int autofillInlineSuggestionSubtitle
com.swmansion.reanimated.R$dimen: int notification_small_icon_background_padding
com.horcrux.svg.R$styleable: int SearchView_queryBackground
com.swmansion.reanimated.R$attr: int dialogTheme
com.swmansion.reanimated.R$styleable: int CheckedTextView_checkMarkCompat
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int popupWindowStyle
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.horcrux.svg.R$id: int tag_state_description
com.stripe.android.financialconnections.features.consent.ConsentState: com.airbnb.mvrx.Async consent
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
com.swmansion.reanimated.R$attr: int drawableTint
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.swmansion.reanimated.R$styleable: int MenuGroup_android_checkableBehavior
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane MANUAL_ENTRY_SUCCESS
com.swmansion.reanimated.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.horcrux.svg.RenderableView: java.util.ArrayList mOriginProperties
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: java.lang.String value
com.google.android.gms.wallet.MaskedWallet: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int[] ViewStubCompat
com.stripe.android.core.model.CountryCode: com.stripe.android.core.model.CountryCode$Companion Companion
com.swmansion.reanimated.R$id: int scrollView
com.swmansion.reanimated.R$style: int Base_V7_Widget_AppCompat_EditText
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_showDividers
com.swmansion.reanimated.R$drawable: int abc_ic_go_search_api_material
com.facebook.react.views.view.ReactViewGroup: int ARRAY_CAPACITY_INCREMENT
kotlinx.serialization.json.JsonObject: kotlinx.serialization.json.JsonObject$Companion Companion
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mContext
com.horcrux.svg.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
com.swmansion.reanimated.R$integer: int status_bar_notification_info_maxnum
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$color: int androidx_core_ripple_material_light
com.horcrux.svg.R$styleable: int ActionMode_subtitleTextStyle
com.swmansion.reanimated.R$styleable: int ActionBar_logo
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarItemBackground
com.stripe.android.financialconnections.model.ConsentPaneBody: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int abc_searchview_description_clear
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacKey DEFAULT_INSTANCE
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeight
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.swmansion.reanimated.R$id: int uniform
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane SUCCESS
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: kotlin.Lazy $cachedSerializer$delegate
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacParams params_
com.swmansion.reanimated.R$id: int on
com.swmansion.reanimated.R$layout: int abc_cascading_menu_item_layout
com.swmansion.reanimated.R$anim: int abc_slide_out_bottom
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountContract$Result: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int disabled_alpha_material_light
com.horcrux.svg.R$layout: int redbox_item_frame
com.swmansion.reanimated.R$id: int tag_transition_group
com.horcrux.svg.VirtualView: android.graphics.RectF mFillBounds
com.horcrux.svg.R$color: int abc_search_url_text_normal
com.horcrux.svg.R$attr: int titleMarginBottom
com.horcrux.svg.R$attr: int drawerArrowStyle
com.horcrux.svg.R$styleable: int FontFamilyFont_ttcIndex
com.reactnativecommunity.picker.ReactPickerManager: int SET_NATIVE_SELECTED
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableEndCompat
com.swmansion.reanimated.R$dimen: int abc_text_size_medium_material
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
com.stripe.android.link.LinkActivityResult$Failed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int backgroundStacked
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.horcrux.svg.VirtualView: android.graphics.Path mPath
com.stripe.android.model.PaymentMethodCreateParams$Ideal: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int MenuView_android_itemBackground
com.swmansion.reanimated.R$animator: int fragment_open_enter
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.google.crypto.tink.proto.KmsAeadKey: int version_
com.stripe.android.customersheet.InternalCustomerSheetResult$Error: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupMenu
com.swmansion.reanimated.R$attr: int fontVariationSettings
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_Y
com.horcrux.svg.R$id: int action_text
com.horcrux.svg.R$id: int focusCrop
com.swmansion.reanimated.R$dimen: int abc_panel_menu_list_width
com.swmansion.reanimated.R$dimen: int abc_button_inset_horizontal_material
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_X
com.horcrux.svg.R$integer: int abc_config_activityDefaultDur
com.google.android.gms.wallet.PaymentDataRequest: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int abc_menu_space_shortcut_label
com.horcrux.svg.R$attr: int actionModeCloseContentDescription
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResult$Completed: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.PartnerAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.horcrux.svg.R$styleable: int[] LinearLayoutCompat
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.stripe.android.payments.paymentlauncher.PaymentLauncherContract$Args$SetupIntentNextActionArgs: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int font
com.horcrux.svg.RenderableView: android.graphics.Paint$Join strokeLinejoin
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_RUN_CPP_VIEWS
com.horcrux.svg.R$color: int catalyst_logbox_background
com.horcrux.svg.R$color: int dim_foreground_disabled_material_light
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$attr: int defaultQueryHint
com.swmansion.reanimated.R$color: int abc_primary_text_material_dark
com.swmansion.reanimated.R$styleable: int Toolbar_maxButtonHeight
com.horcrux.svg.RenderableViewManager$RectViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$color: int primary_text_default_material_light
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.stripe.android.model.ConsumerSession: com.stripe.android.model.ConsumerSession$Companion Companion
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.swmansion.reanimated.R$attr: int actionOverflowButtonStyle
com.facebook.react.fabric.mounting.MountItemDispatcher: java.lang.String TAG
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product LINK_WITH_NETWORKING
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
kotlinx.coroutines.sync.MutexImpl$LockedQueue: java.lang.Object owner
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.swmansion.reanimated.R$styleable: int Toolbar_buttonGravity
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
com.swmansion.reanimated.R$style: int Theme_FullScreenDialog
com.stripe.android.model.PaymentMethodCreateParams$Fpx: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod DESCRIPTOR_CODE
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_X
com.swmansion.reanimated.R$attr: int logo
com.swmansion.reanimated.R$styleable: int Toolbar_android_minHeight
com.swmansion.reanimated.R$style: int Widget_Autofill
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
com.horcrux.svg.R$attr: int overlapAnchor
com.google.android.gms.internal.location.zzg: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGSymbol
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: kotlin.Lazy $cachedSerializer$delegate
com.swmansion.reanimated.R$attr: int splitTrack
com.stripe.android.financialconnections.model.LegalDetailsBody: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.stripe.android.ui.core.elements.NextActionSpec: com.stripe.android.ui.core.elements.NextActionSpec$Companion Companion
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.stripe.android.model.PiiTokenParams: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.PaymentCardRecognitionIntentResponse: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$styleable: int ActionBar_backgroundSplit
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.horcrux.svg.R$styleable: int DrawerArrowToggle_drawableSize
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.horcrux.svg.R$color: int button_material_light
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat DEFAULT_INSTANCE
com.horcrux.svg.R$layout: int select_dialog_item_material
com.horcrux.svg.R$attr: int measureWithLargestChild
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.swmansion.reanimated.R$id: int accessibility_custom_action_28
com.swmansion.reanimated.R$color: int material_grey_800
com.horcrux.svg.R$styleable: int TextAppearance_android_textStyle
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_fadeDuration
com.swmansion.reanimated.R$drawable: int abc_list_selector_background_transition_holo_light
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
com.stripe.android.financialconnections.model.CreditBalance: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
com.stripe.android.financialconnections.model.CashBalance: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int abc_popup_background_mtrl_mult
com.swmansion.reanimated.R$styleable: int MenuGroup_android_enabled
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.swmansion.reanimated.R$styleable: int CompoundButton_buttonTintMode
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionButton
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Medium
com.swmansion.reanimated.R$attr: int textAllCaps
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product RESERVE_APPEALS
com.swmansion.reanimated.R$id: int accessibility_custom_action_23
com.horcrux.svg.RenderableView: int FILL_RULE_EVENODD
com.horcrux.svg.R$dimen: int abc_dialog_padding_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.swmansion.reanimated.R$attr: int numericModifiers
com.swmansion.reanimated.R$styleable: int Toolbar_navigationContentDescription
com.swmansion.reanimated.R$string: int abc_activitychooserview_choose_application
com.horcrux.svg.R$id: int accessibility_custom_action_0
com.swmansion.reanimated.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.horcrux.svg.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$attr: int logoDescription
com.horcrux.svg.R$style: int Base_Theme_AppCompat_CompactMenu
com.swmansion.reanimated.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarImageScaleType
com.horcrux.svg.R$id: int tag_accessibility_pane_title
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.swmansion.reanimated.R$attr: int textColorAlertDialogListItem
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_width_major
com.horcrux.svg.R$attr: int actionBarTabTextStyle
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product DIRECT_SETTINGS
com.swmansion.reanimated.R$drawable: int notification_bg_low_pressed
com.swmansion.reanimated.R$styleable: int ActionBar_backgroundSplit
com.horcrux.svg.R$styleable: int FragmentContainerView_android_name
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.horcrux.svg.R$id: int accessibility_custom_action_20
com.reactnativestripesdk.CardFormViewManager: com.facebook.react.uimanager.ThemedReactContext reactContextRef
com.swmansion.reanimated.R$animator: int fragment_fade_exit
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_X
com.horcrux.svg.R$attr: int contentDescription
com.swmansion.reanimated.R$style: int Widget_AppCompat_CompoundButton_Switch
com.horcrux.svg.R$style: int Widget_AppCompat_EditText
com.swmansion.reanimated.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.swmansion.reanimated.R$styleable: int AppCompatTheme_controlBackground
com.horcrux.svg.R$attr: int textAllCaps
com.horcrux.svg.R$attr: int dividerHorizontal
com.swmansion.reanimated.R$attr: int actionModeSelectAllDrawable
com.horcrux.svg.R$attr: int radioButtonStyle
com.swmansion.reanimated.R$drawable: int abc_item_background_holo_light
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior$Companion Companion
com.swmansion.reanimated.R$styleable: int AlertDialog_listItemLayout
com.swmansion.reanimated.R$dimen: int abc_config_prefDialogWidth
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product DIRECT_ONBOARDING
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Small_Inverse
com.swmansion.reanimated.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.horcrux.svg.R$string: int abc_shareactionprovider_share_with
com.stripe.android.stripe3ds2.transaction.ChallengeAction$Resend: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.FinancialConnectionsSheetState: boolean activityRecreated
com.swmansion.reanimated.R$dimen: int abc_floating_window_z
com.stripe.android.paymentsheet.model.SavedSelection$PaymentMethod: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.success.SuccessViewModel: com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion Companion
com.swmansion.reanimated.R$id: int accessibility_custom_action_22
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: java.lang.String value
com.horcrux.svg.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.lang.ref.WeakReference reactContext
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactContext mContext
com.stripe.android.stripe3ds2.transaction.ChallengeResult$Timeout: android.os.Parcelable$Creator CREATOR
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountContract$Args$ForDeferredPaymentIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_list_pressed_holo_dark
com.swmansion.reanimated.R$attr: int colorAccent
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableTopCompat
com.swmansion.reanimated.R$drawable: int abc_edit_text_material
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int mReactTag
com.horcrux.svg.R$style: int Widget_AppCompat_ListPopupWindow
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.swmansion.reanimated.R$attr: int switchMinWidth
com.horcrux.svg.R$dimen: int compat_notification_large_icon_max_width
com.swmansion.reanimated.R$styleable: int ActionBar_popupTheme
com.swmansion.reanimated.R$id: int parentPanel
com.swmansion.reanimated.R$id: int tag_on_apply_window_listener
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int version_
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display4
com.rnmaps.maps.MapPolylineManager: android.util.DisplayMetrics metrics
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModuleImpl mRNCWebViewModuleImpl
com.stripe.android.financialconnections.model.AccountHolder$Type: kotlin.Lazy $cachedSerializer$delegate
com.swmansion.reanimated.NodesManager$1: com.swmansion.reanimated.NodesManager this$0
com.horcrux.svg.R$id: int accessibility_collection_item
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.stripe.android.ui.core.elements.EmptyFormSpec: com.stripe.android.ui.core.elements.EmptyFormSpec INSTANCE
com.swmansion.reanimated.R$styleable: int[] FontFamily
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Small
com.swmansion.reanimated.R$styleable: int ActionBar_title
com.swmansion.reanimated.R$id: int time
com.facebook.react.fabric.StateWrapperImpl: boolean mDestroyed
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.horcrux.svg.R$id: int special_effects_controller_view_tag
com.horcrux.svg.R$dimen: int tooltip_y_offset_non_touch
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod$Companion Companion
com.horcrux.svg.R$id: int progress_horizontal
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.google.android.gms.wallet.PaymentMethodTokenizationParameters: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.horcrux.svg.R$style: int Widget_AppCompat_ButtonBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason OTHER
com.horcrux.svg.R$attr: int autofillInlineSuggestionEndIconStyle
com.swmansion.reanimated.R$string: int timer_description
com.horcrux.svg.R$styleable: int SearchView_closeIcon
com.swmansion.reanimated.R$color: int primary_text_disabled_material_light
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTint
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_retryImageScaleType
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap payload
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: int value
com.swmansion.reanimated.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.os.Handler sCompletionHandler
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type[] $VALUES
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow DIRECT_WEBVIEW
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.swmansion.reanimated.R$attr: int lastBaselineToBottomHeight
com.swmansion.reanimated.R$dimen: int abc_star_big
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.horcrux.svg.R$attr: int tint
com.swmansion.reanimated.R$dimen: int abc_text_size_display_4_material
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
com.swmansion.reanimated.R$styleable: int ActionMode_titleTextStyle
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status$Companion Companion
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.swmansion.reanimated.R$dimen: int notification_action_text_size
com.swmansion.reanimated.R$id: int ghost_view_holder
com.swmansion.reanimated.R$attr: int actionLayout
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.horcrux.svg.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
com.horcrux.svg.R$anim: int catalyst_push_up_out
com.facebook.react.fabric.mounting.MountItemDispatcher: int MAX_TIME_IN_FRAME_FOR_NON_BATCHED_OPERATIONS_MS
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listMenuViewStyle
com.swmansion.reanimated.R$style: int Theme_FullScreenDialogAnimatedSlide
com.swmansion.reanimated.R$styleable: int SearchView_commitIcon
com.swmansion.reanimated.layoutReanimation.Snapshot: float borderRadius
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResult$Failed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int abc_action_mode_done
com.horcrux.svg.VirtualView: android.graphics.Matrix mCTM
com.horcrux.svg.RenderableViewManager$SymbolManager: java.lang.String REACT_CLASS
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.proto.AesSivKey DEFAULT_INSTANCE
com.horcrux.svg.R$string: int catalyst_hot_reloading_auto_enable
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.swmansion.reanimated.R$layout: int abc_action_menu_layout
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.swmansion.reanimated.ReanimatedModule: java.lang.String NAME
com.horcrux.svg.R$color: int error_color_material_dark
com.horcrux.svg.R$attr: int actionModePopupWindowStyle
com.horcrux.svg.R$styleable: int[] View
com.swmansion.reanimated.R$styleable: int ViewStubCompat_android_layout
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.horcrux.svg.R$styleable: int GradientColor_android_endY
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.horcrux.svg.SvgView: int mMeetOrSlice
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.horcrux.svg.R$attr: int autoSizeMaxTextSize
com.horcrux.svg.RenderableViewManager$TSpanViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.swmansion.reanimated.R$id: int visible_removing_fragment_view_tag
com.swmansion.reanimated.R$attr: int homeAsUpIndicator
com.horcrux.svg.R$attr: int checkedTextViewStyle
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.proto.AesGcmSivKeyFormat DEFAULT_INSTANCE
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Light
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopStart
com.horcrux.svg.R$style: int DialogAnimationSlide
com.swmansion.reanimated.R$attr: int listPreferredItemHeightSmall
com.horcrux.svg.R$styleable: int[] ActionMode
com.swmansion.reanimated.R$attr: int editTextColor
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.swmansion.reanimated.R$attr: int colorError
com.swmansion.reanimated.R$layout: int abc_action_menu_item_layout
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.horcrux.svg.R$attr: int theme
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.R$styleable: int TextAppearance_textLocale
com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionContract$Args: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] CompoundButton
com.swmansion.reanimated.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.horcrux.svg.R$drawable: int abc_ratingbar_small_material
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Body1
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Info
com.horcrux.svg.R$string: int abc_action_menu_overflow_description
com.swmansion.reanimated.R$dimen: int compat_button_padding_vertical_material
com.swmansion.reanimated.R$attr: int tintMode
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int SwitchCompat_switchMinWidth
com.swmansion.reanimated.R$string: int abc_capital_off
com.swmansion.reanimated.R$attr: int ratingBarStyleSmall
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.horcrux.svg.R$dimen: int abc_seekbar_track_background_height_material
com.swmansion.reanimated.R$color: int material_blue_grey_800
com.swmansion.reanimated.R$attr: int ratingBarStyle
com.horcrux.svg.R$string: int catalyst_inspector
com.swmansion.reanimated.R$styleable: int GradientColor_android_centerX
com.horcrux.svg.R$styleable: int RecycleListView_paddingBottomNoButtons
com.google.crypto.tink.proto.KmsAeadKeyFormat: java.lang.String keyUri_
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus[] $VALUES
com.horcrux.svg.R$id: int accessibility_custom_action_6
com.facebook.react.fabric.FabricComponents: java.util.Map sComponentNames
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_Underlined
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.horcrux.svg.R$style: int Platform_AppCompat
com.swmansion.reanimated.R$attr: int actionModePopupWindowStyle
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
com.swmansion.reanimated.R$styleable: int MenuItem_iconTint
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.proto.KeyData DEFAULT_INSTANCE
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.horcrux.svg.R$attr: int actionModeCopyDrawable
com.horcrux.svg.R$styleable: int ActionBar_itemPadding
com.swmansion.reanimated.R$integer: int react_native_dev_server_port
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.horcrux.svg.R$attr: int alertDialogStyle
com.stripe.android.stripe3ds2.init.ui.StripeTextBoxCustomization: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$attr: int buttonCompat
com.swmansion.reanimated.R$drawable: int abc_scrubber_track_mtrl_alpha
com.swmansion.reanimated.R$styleable: int SwitchCompat_switchPadding
com.swmansion.reanimated.R$styleable: int AppCompatTheme_panelMenuListTheme
com.horcrux.svg.R$drawable: int abc_btn_radio_material_anim
com.horcrux.svg.R$string: int abc_menu_meta_shortcut_label
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Tooltip
com.swmansion.reanimated.R$layout: int abc_list_menu_item_radio
com.horcrux.svg.R$attr: int titleMarginTop
com.swmansion.reanimated.R$id: int message
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$id: int action_bar_activity_content
com.horcrux.svg.R$styleable: int ViewStubCompat_android_id
com.horcrux.svg.R$attr: int buttonTintMode
com.horcrux.svg.R$styleable: int Toolbar_collapseContentDescription
com.horcrux.svg.R$id: int action_mode_bar
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior UNKNOWN
com.stripe.android.googlepaylauncher.GooglePayLauncher$Result$Completed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod[] $VALUES
com.horcrux.svg.R$attr: int progressBarPadding
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.horcrux.svg.R$layout: int abc_activity_chooser_view_list_item
com.swmansion.reanimated.R$string: int state_busy_description
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_failureImage
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mMountItems
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrParams params_
com.swmansion.reanimated.R$attr: int listPopupWindowStyle
com.horcrux.svg.R$style: int Base_DialogWindowTitle_AppCompat
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.horcrux.svg.R$drawable: int abc_textfield_activated_mtrl_alpha
com.swmansion.reanimated.R$styleable: int ViewStubCompat_android_inflatedId
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.stripe.android.payments.bankaccount.CollectBankAccountConfiguration$USBankAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.swmansion.reanimated.R$attr: int roundedCornerRadius
com.swmansion.reanimated.R$id: int image
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow MX_CONNECT
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.horcrux.svg.R$dimen: int tooltip_precise_anchor_extra_offset
com.swmansion.reanimated.R$color: int abc_hint_foreground_material_dark
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.stripe.android.model.CustomerSource: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_copy_button
com.horcrux.svg.R$styleable: int SimpleDraweeView_retryImage
com.swmansion.reanimated.R$layout: int notification_action_tombstone
com.swmansion.reanimated.R$dimen: int hint_alpha_material_light
com.swmansion.reanimated.R$string: int scrollbar_description
com.swmansion.reanimated.R$attr: int showDividers
com.swmansion.reanimated.R$id: int tag_screen_reader_focusable
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$id: int off
com.horcrux.svg.R$attr: int subMenuArrow
com.horcrux.svg.R$color: int material_grey_850
com.swmansion.reanimated.R$style: int SpinnerDatePickerStyle
com.facebook.react.fabric.FabricUIManager$3: int val$reactTag
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$integer: int abc_config_activityShortDur
com.google.crypto.tink.proto.Keyset$Key: int outputPrefixType_
com.swmansion.reanimated.R$attr: int firstBaselineToTopHeight
com.swmansion.reanimated.R$dimen: int notification_action_icon_size
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ButtonBar
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.horcrux.svg.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$color: int secondary_text_default_material_dark
com.horcrux.svg.R$attr: int autofillInlineSuggestionStartIconStyle
com.swmansion.reanimated.R$attr: int borderlessButtonStyle
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_placeholderImage
com.horcrux.svg.RenderableViewManager$PatternManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$id: int action_context_bar
com.swmansion.reanimated.R$styleable: int Toolbar_title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.horcrux.svg.R$attr: int contentInsetEndWithActions
com.horcrux.svg.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int keyId_
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.swmansion.reanimated.R$attr: int actionBarTabBarStyle
com.horcrux.svg.R$attr: int actionMenuTextColor
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: android.view.View val$rootView
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Inverse
com.stripe.android.financialconnections.model.Bullet: android.os.Parcelable$Creator CREATOR
com.stripe.android.ui.core.elements.autocomplete.model.AddressComponent: com.stripe.android.ui.core.elements.autocomplete.model.AddressComponent$Companion Companion
com.swmansion.reanimated.R$id: int accessibility_custom_action_16
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.swmansion.reanimated.R$color: int background_material_dark
com.horcrux.svg.VirtualView: java.lang.String mMarkerMid
com.horcrux.svg.R$anim: int fragment_fast_out_extra_slow_in
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
com.swmansion.reanimated.R$attr: int menu
com.swmansion.reanimated.R$dimen: int abc_dropdownitem_icon_width
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_retryImage
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: int version_
com.horcrux.svg.R$styleable: int ActionBarLayout_android_layout_gravity
com.stripe.android.model.CustomerBankAccount: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mJavaModuleProvider
com.horcrux.svg.R$drawable: int abc_cab_background_internal_bg
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.horcrux.svg.R$id: int time
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
com.swmansion.reanimated.R$attr: int windowActionBarOverlay
com.swmansion.reanimated.R$attr: int popupTheme
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_Y
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display1
com.horcrux.svg.R$drawable: int notification_bg_low_pressed
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.horcrux.svg.R$drawable: int abc_tab_indicator_material
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager mSharedTransitionManager
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.swmansion.reanimated.R$attr: int textAppearanceSearchResultSubtitle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.horcrux.svg.R$styleable: int Toolbar_contentInsetEndWithActions
com.stripe.android.model.ShippingMethod: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Button
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionButtonStyle
kotlinx.serialization.json.JsonElement: kotlinx.serialization.json.JsonElement$Companion Companion
com.horcrux.svg.R$attr: int actionBarWidgetTheme
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.swmansion.reanimated.NodesManager this$0
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$id: int search_src_text
com.horcrux.svg.R$styleable: int MenuGroup_android_visible
com.horcrux.svg.R$layout: int abc_screen_content_include
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGTSpan
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int lineHeight
com.swmansion.reanimated.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.swmansion.reanimated.R$styleable: int[] ActionBarLayout
com.horcrux.svg.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.swmansion.reanimated.R$animator: int fragment_close_exit
com.swmansion.reanimated.R$styleable: int AlertDialog_singleChoiceItemLayout
com.swmansion.reanimated.R$styleable: int CompoundButton_buttonTint
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
com.stripe.android.paymentsheet.PaymentSheet$GooglePayConfiguration: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int tag_window_insets_animation_callback
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyle
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.stripe.android.model.wallets.Wallet$AmexExpressCheckoutWallet: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
com.horcrux.svg.R$id: int customPanel
com.horcrux.svg.R$styleable: int Toolbar_popupTheme
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Spinner
com.horcrux.svg.R$attr: int lStar
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.horcrux.svg.R$attr: int checkMarkTintMode
com.swmansion.reanimated.R$string: int abc_action_bar_up_description
com.swmansion.reanimated.R$styleable: int Spinner_android_prompt
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.google.crypto.tink.proto.KeyData: int TYPE_URL_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int titleMarginStart
com.stripe.android.model.SourceParams$OwnerParams: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int buttonGravity
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.swmansion.reanimated.R$attr: int arrowShaftLength
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat params_
com.horcrux.svg.R$string: int search_menu_title
com.swmansion.reanimated.R$styleable: int FontFamilyFont_fontStyle
com.swmansion.reanimated.R$color: int ripple_material_dark
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane PARTNER_AUTH
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.horcrux.svg.R$styleable: int AppCompatTextView_lineHeight
com.horcrux.svg.R$string: int catalyst_report_button
com.rnmaps.maps.MapModule: java.lang.String SNAPSHOT_FORMAT_PNG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_thickness
com.swmansion.reanimated.R$styleable: int ColorStateListItem_alpha
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomRight
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_backgroundImage
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$id: int accessibility_collection
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
com.stripe.android.financialconnections.model.Cta: com.stripe.android.financialconnections.model.Cta$Companion Companion
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.ref.WeakReference mContext
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: java.lang.String value
com.swmansion.reanimated.R$attr: int buttonStyleSmall
com.swmansion.reanimated.R$string: int catalyst_perf_monitor
com.horcrux.svg.R$attr: int showAsAction
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel: com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion Companion
com.swmansion.reanimated.R$attr: int iconTintMode
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginEnd
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.google.crypto.tink.proto.KeysetInfo: int KEY_INFO_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_DarkActionBar
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.swmansion.reanimated.R$styleable: int MenuItem_tooltipText
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarStyle
com.horcrux.svg.R$string: int catalyst_hot_reloading
com.horcrux.svg.R$attr: int actionOverflowButtonStyle
com.swmansion.reanimated.R$layout: int abc_alert_dialog_material
com.horcrux.svg.SvgView: boolean mInvertible
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
com.swmansion.reanimated.R$string: int catalyst_debug
com.horcrux.svg.R$style: int Widget_AppCompat_ListView
com.swmansion.reanimated.R$string: int abc_menu_delete_shortcut_label
com.horcrux.svg.R$style: int Platform_Widget_AppCompat_Spinner
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$styleable: int StateListDrawable_android_visible
com.horcrux.svg.R$string: int abc_prepend_shortcut_label
com.swmansion.reanimated.R$bool: int abc_action_bar_embed_tabs
com.horcrux.svg.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.swmansion.reanimated.R$style: int Base_DialogWindowTitle_AppCompat
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_BORDER_RADII
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.swmansion.reanimated.R$attr: int elevation
kotlinx.coroutines.selects.SeqNumber: long number
com.google.android.gms.maps.model.PointOfInterest: android.os.Parcelable$Creator CREATOR
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.swmansion.reanimated.R$attr: int contentInsetEnd
com.horcrux.svg.R$styleable: int SearchView_animateMenuItems
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.swmansion.reanimated.R$layout: int abc_action_mode_close_item_material
com.horcrux.svg.R$id: int rn_redbox_report_button
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ButtonBar
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.horcrux.svg.R$style: int AlertDialog_AppCompat_Light
com.stripe.android.financialconnections.model.VisualUpdate: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int highlight_alpha_material_light
com.stripe.android.model.PaymentMethodOptionsParams$Blik: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int notification_template_icon_low_bg
com.swmansion.reanimated.R$id: int fps_text
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_OVERFLOW_INSET
com.swmansion.reanimated.R$style: int Base_V26_Theme_AppCompat_Light
com.reactnativecommunity.checkbox.ReactCheckBoxManager: java.lang.String REACT_CLASS
com.stripe.android.stripe3ds2.transaction.ChallengeResult$Failed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Menu
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.horcrux.svg.R$attr: int layout
com.horcrux.svg.R$attr: int alertDialogButtonGroupStyle
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.horcrux.svg.VirtualViewManager: android.util.SparseArray mTagToRunnable
com.horcrux.svg.R$styleable: int AlertDialog_showTitle
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.R$styleable: int SwitchCompat_switchMinWidth
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_Y
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.horcrux.svg.R$styleable: int MenuView_subMenuArrow
com.stripe.android.model.Token: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.swmansion.reanimated.R$dimen: int notification_small_icon_size_as_large
com.horcrux.svg.R$dimen: int abc_disabled_alpha_material_dark
com.stripe.android.financialconnections.model.NetworkingLinkSignupBody: com.stripe.android.financialconnections.model.NetworkingLinkSignupBody$Companion Companion
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.swmansion.reanimated.layoutReanimation.Snapshot: int width
com.swmansion.reanimated.R$string: int catalyst_reload
com.stripe.android.model.ConsumerSession$VerificationSession$SessionType: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowActionBar
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.horcrux.svg.R$color: int secondary_text_default_material_dark
com.swmansion.reanimated.R$attr: int queryBackground
com.horcrux.svg.SvgView: int mTintColor
com.stripe.android.model.StripeIntent$NextActionData$AlipayRedirect: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: android.graphics.Path mFillPath
com.stripe.android.financialconnections.model.BankAccount: com.stripe.android.financialconnections.model.BankAccount$Companion Companion
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeTextType
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarImage
com.horcrux.svg.VirtualView: android.graphics.Matrix mTransform
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: java.lang.String value
com.horcrux.svg.R$string: int abc_menu_delete_shortcut_label
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int ActionBar_homeLayout
com.swmansion.reanimated.R$drawable: int abc_list_pressed_holo_light
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableRight
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_Y
com.swmansion.reanimated.R$drawable: int notification_bg_normal
com.swmansion.reanimated.R$attr: int tickMarkTintMode
com.horcrux.svg.R$dimen: int notification_big_circle_margin
com.horcrux.svg.R$styleable: int MenuItem_android_titleCondensed
com.horcrux.svg.R$styleable: int MenuItem_android_checked
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: java.lang.String value
com.horcrux.svg.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.horcrux.svg.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionChip
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.stripe.android.uicore.address.FieldType: com.stripe.android.uicore.address.FieldType$Companion Companion
com.horcrux.svg.R$styleable: int SwitchCompat_switchPadding
com.horcrux.svg.R$styleable: int Toolbar_logo
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.horcrux.svg.R$layout: int abc_tooltip
com.horcrux.svg.VirtualView: int mClipRule
com.swmansion.reanimated.NodesManager: java.util.Set nativeProps
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.stripe.android.financialconnections.model.Display: com.stripe.android.financialconnections.model.Display$Companion Companion
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_title
com.swmansion.reanimated.R$styleable: int AppCompatTheme_selectableItemBackground
com.horcrux.svg.R$styleable: int SimpleDraweeView_placeholderImage
com.stripe.android.paymentsheet.PaymentSheet$Configuration: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int action_mode_bar_stub
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Large_Inverse
com.horcrux.svg.R$styleable: int SearchView_layout
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.google.crypto.tink.proto.KeyTemplate: int TYPE_URL_FIELD_NUMBER
com.horcrux.svg.R$id: int tag_accessibility_clickable_spans
com.horcrux.svg.R$id: int centerCrop
com.swmansion.reanimated.R$string: int abc_menu_shift_shortcut_label
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Light
com.swmansion.reanimated.R$styleable: int CheckedTextView_checkMarkTint
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogStyle
com.horcrux.svg.R$dimen: int notification_large_icon_width
com.horcrux.svg.VirtualView: android.graphics.Matrix mMatrix
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarDivider
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_subtitle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.stripe.android.model.FinancialConnectionsSession: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: float mOpacity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.horcrux.svg.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.swmansion.reanimated.R$color: int abc_tint_switch_track
com.horcrux.svg.R$attr: int spinnerStyle
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.horcrux.svg.R$attr: int subtitleTextStyle
com.swmansion.reanimated.AndroidUIScheduler$2: com.swmansion.reanimated.AndroidUIScheduler this$0
com.horcrux.svg.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionSubtitle
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_RADIUS
com.horcrux.svg.R$styleable: int AppCompatTheme_colorAccent
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.horcrux.svg.R$dimen: int disabled_alpha_material_dark
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomStart
com.horcrux.svg.R$dimen: int notification_small_icon_size_as_large
com.swmansion.reanimated.R$attr: int roundTopEnd
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs$ForData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_hot_reloading
com.swmansion.reanimated.R$styleable: int GradientColorItem_android_color
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.horcrux.svg.R$integer: int cancel_button_image_alpha
com.swmansion.reanimated.R$id: int ghost_view
com.swmansion.reanimated.R$string: int radiogroup_description
com.swmansion.reanimated.R$style: int Base_Animation_AppCompat_Dialog
com.swmansion.reanimated.R$dimen: int abc_action_bar_default_padding_start_material
com.horcrux.svg.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$id: int action_divider
com.horcrux.svg.R$styleable: int SimpleDraweeView_overlayImage
com.horcrux.svg.R$styleable: int[] RecycleListView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.horcrux.svg.R$attr: int listPopupWindowStyle
com.swmansion.reanimated.R$styleable: int CompoundButton_buttonCompat
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane LINK_STEP_UP_VERIFICATION
com.swmansion.reanimated.R$styleable: int MenuItem_actionProviderClass
com.swmansion.reanimated.R$drawable: int btn_checkbox_checked_mtrl
com.horcrux.svg.R$id: int list_item
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
com.horcrux.svg.R$attr: int logo
com.horcrux.svg.R$attr: int placeholderImageScaleType
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacKey DEFAULT_INSTANCE
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.horcrux.svg.R$color: int catalyst_redbox_background
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomEnd
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActivityChooserView
com.horcrux.svg.R$styleable: int AlertDialog_android_layout
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode UNKNOWN
com.google.crypto.tink.proto.AesEaxKeyFormat: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.proto.AesCmacParams DEFAULT_INSTANCE
com.swmansion.reanimated.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.swmansion.reanimated.R$id: int group_divider
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
com.swmansion.reanimated.R$string: int abc_action_menu_overflow_description
com.swmansion.reanimated.layoutReanimation.Snapshot: int originX
com.horcrux.svg.R$color: int bright_foreground_disabled_material_dark
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetEnd
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.horcrux.svg.R$attr: int buttonBarStyle
com.swmansion.reanimated.R$styleable: int Toolbar_collapseContentDescription
com.horcrux.svg.R$attr: int tickMark
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: long FRAME_TIME_MS
com.stripe.android.model.ShippingInformation: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int submit_area
com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingContract$Args: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_EVENT_EMITTER
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.swmansion.reanimated.R$id: int progress_circular
com.stripe.android.model.SourceTypeModel$Card: android.os.Parcelable$Creator CREATOR
com.stripe.android.link.LinkPaymentDetails$New: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int background_floating_material_dark
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar
com.google.crypto.tink.proto.AesSivKey: int KEY_VALUE_FIELD_NUMBER
com.horcrux.svg.R$styleable: int MenuItem_android_alphabeticShortcut
com.swmansion.reanimated.R$styleable: int Toolbar_subtitleTextColor
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.horcrux.svg.R$layout: int abc_action_menu_item_layout
com.google.crypto.tink.proto.RegistryConfig: int CONFIG_NAME_FIELD_NUMBER
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int right_icon
com.horcrux.svg.R$attr: int submitBackground
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.horcrux.svg.R$styleable: int AppCompatTextView_textLocale
com.swmansion.reanimated.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.swmansion.reanimated.R$layout: int notification_template_custom_big
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_overlayImage
com.swmansion.reanimated.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.stripe.android.paymentsheet.model.PaymentSelection$Saved: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int MenuItem_android_titleCondensed
com.swmansion.reanimated.R$attr: int roundBottomStart
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mAddedSharedViews
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$drawable: int abc_item_background_holo_dark
com.swmansion.reanimated.R$drawable: int notification_bg_low_normal
com.horcrux.svg.R$anim: int catalyst_fade_out
com.horcrux.svg.R$id: int accessibility_role
com.stripe.android.paymentsheet.PaymentOptionContract$Args: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_custom_action_8
com.swmansion.reanimated.R$attr: int buttonIconDimen
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
com.horcrux.svg.R$attr: int ratingBarStyle
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbWidth
com.horcrux.svg.R$dimen: int abc_list_item_padding_horizontal_material
com.horcrux.svg.R$style: int Widget_AppCompat_ImageButton
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
com.swmansion.reanimated.R$attr: int titleMarginTop
com.horcrux.svg.R$attr: int ttcIndex
com.swmansion.reanimated.R$attr: int actionBarWidgetTheme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.horcrux.svg.SvgView: float mVbHeight
com.swmansion.reanimated.R$attr: int drawableTintMode
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListView
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.List transformMatrix
com.horcrux.svg.VirtualView: float canvasWidth
com.swmansion.reanimated.R$attr: int title
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat_Light
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.swmansion.reanimated.R$drawable: int abc_cab_background_top_mtrl_alpha
com.swmansion.reanimated.R$styleable: int GradientColor_android_startColor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.lang.ref.WeakReference mWeakNativeViewHierarchyManager
com.horcrux.svg.R$style: int Theme_Catalyst
com.horcrux.svg.R$styleable: int FontFamilyFont_fontVariationSettings
com.horcrux.svg.R$styleable: int SwitchCompat_android_thumb
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: kotlin.Lazy $cachedSerializer$delegate
com.stripe.android.financialconnections.model.SynchronizeSessionResponse: com.stripe.android.financialconnections.model.SynchronizeSessionResponse$Companion Companion
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.swmansion.reanimated.R$styleable: int ActionBar_itemPadding
com.horcrux.svg.R$color: int error_color_material_light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.horcrux.svg.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.horcrux.svg.R$styleable: int SearchView_autoShowKeyboard
com.horcrux.svg.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.horcrux.svg.VirtualView: android.graphics.Region mStrokeRegion
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionChip
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGRadialGradient
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes UNKNOWN
com.swmansion.reanimated.R$drawable: int abc_text_select_handle_middle_mtrl
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PERCENTAGE
com.swmansion.reanimated.R$styleable: int[] LinearLayoutCompat_Layout
com.swmansion.reanimated.R$id: int topPanel
com.swmansion.reanimated.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_ActionBar
com.swmansion.reanimated.R$styleable: int MenuGroup_android_id
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
kotlinx.serialization.json.JsonNull: kotlinx.serialization.json.JsonNull INSTANCE
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int tablist_description
com.swmansion.reanimated.R$styleable: int View_android_focusable
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundWithOverlayColor
com.horcrux.svg.VirtualView: int CLIP_RULE_NONZERO
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationManager
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Tooltip
com.horcrux.svg.RenderableView: float fillOpacity
com.swmansion.reanimated.R$styleable: int[] AnimatedStateListDrawableTransition
com.horcrux.svg.R$drawable: int abc_action_bar_item_background_material
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_fadeDuration
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$styleable: int MenuView_android_itemTextAppearance
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
com.horcrux.svg.SvgView: java.lang.String mAlign
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String routing
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.swmansion.reanimated.R$drawable: int abc_switch_thumb_material
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mOverflowInset
com.horcrux.svg.R$id: int search_edit_frame
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionChip
com.swmansion.reanimated.R$layout: int abc_activity_chooser_view
com.horcrux.svg.R$attr: int tooltipFrameBackground
com.stripe.android.model.PaymentMethod: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.ReactNativeConfig: com.facebook.react.fabric.ReactNativeConfig DEFAULT_CONFIG
com.horcrux.svg.R$string: int catalyst_debug_connecting
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: kotlin.Lazy $cachedSerializer$delegate
com.stripe.android.view.CountryTextInputLayout$SelectedCountryState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Body1
com.google.android.gms.internal.wallet.zze: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int contentInsetStartWithNavigation
com.swmansion.reanimated.R$layout: int abc_expanded_menu_layout
com.horcrux.svg.R$color: int ripple_material_light
com.horcrux.svg.RenderableView: int JOIN_ROUND
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_dividerPadding
com.swmansion.reanimated.R$attr: int textAppearanceSearchResultTitle
com.horcrux.svg.R$attr: int dropdownListPreferredItemHeight
com.swmansion.reanimated.R$color: int secondary_text_disabled_material_dark
com.swmansion.reanimated.R$string: int menubar_description
com.swmansion.reanimated.R$attr: int indeterminateProgressStyle
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.horcrux.svg.RenderableView: java.util.regex.Pattern regex
com.stripe.android.ui.core.elements.CountrySpec: com.stripe.android.ui.core.elements.CountrySpec$Companion Companion
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.stripe.android.model.ConsumerPaymentDetails$BillingAddress: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacKey: int version_
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Subhead
com.horcrux.svg.R$style: int Base_Animation_AppCompat_DropDownUp
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.stripe.android.financialconnections.model.DataAccessNotice: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Platform_V21_AppCompat
com.swmansion.reanimated.R$id: int center
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async saveAccountToLink
com.horcrux.svg.VirtualView: com.facebook.react.bridge.ReactContext mContext
com.horcrux.svg.R$id: int action_menu_presenter
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionStartIconStyle
com.horcrux.svg.R$attr: int roundBottomLeft
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mTurboModuleHolders
com.stripe.android.financialconnections.features.reset.ResetState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$id: int progress_circular
com.swmansion.reanimated.R$styleable: int AlertDialog_showTitle
com.horcrux.svg.SvgPackage: java.util.Map mViewManagers
com.horcrux.svg.R$attr: int actionModeFindDrawable
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.horcrux.svg.R$drawable: int abc_switch_thumb_material
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$color: int abc_tint_spinner
com.swmansion.reanimated.R$drawable: int abc_ratingbar_material
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.stripe.android.model.PaymentMethod$CardPresent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int paddingEnd
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.horcrux.svg.R$styleable: int AppCompatTheme_colorButtonNormal
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.swmansion.reanimated.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
com.swmansion.reanimated.R$attr: int buttonPanelSideLayout
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButton: android.os.Parcelable$Creator CREATOR
com.stripe.android.ui.core.elements.KlarnaCountrySpec: com.stripe.android.ui.core.elements.KlarnaCountrySpec$Companion Companion
com.stripe.android.ui.core.elements.AuBankAccountNumberSpec: com.stripe.android.ui.core.elements.AuBankAccountNumberSpec$Companion Companion
com.horcrux.svg.R$attr: int buttonBarNegativeButtonStyle
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_X
com.horcrux.svg.R$id: int scrollIndicatorUp
com.swmansion.reanimated.R$drawable: int btn_checkbox_unchecked_mtrl
com.horcrux.svg.R$attr: int drawableSize
com.swmansion.reanimated.R$styleable: int MenuItem_iconTintMode
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.horcrux.svg.R$layout: int dev_loading_view
com.swmansion.reanimated.R$styleable: int GradientColorItem_android_offset
com.stripe.android.PaymentRelayStarter$Args$ErrorArgs: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.horcrux.svg.R$dimen: int tooltip_vertical_padding
com.horcrux.svg.R$id: int centerInside
com.horcrux.svg.R$styleable: int SearchView_android_textAppearance
com.swmansion.reanimated.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.swmansion.reanimated.R$styleable: int ActionBar_icon
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.stripe.android.paymentsheet.PaymentSheet$InitializationMode$SetupIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.horcrux.svg.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.swmansion.reanimated.R$dimen: int abc_text_size_display_3_material
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.horcrux.svg.R$styleable: int SearchView_animateNavigationIcon
com.swmansion.reanimated.R$styleable: int MenuGroup_android_orderInCategory
com.horcrux.svg.R$styleable: int ActionMenuItemView_android_minWidth
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Medium_Inverse
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.swmansion.reanimated.R$attr: int buttonBarPositiveButtonStyle
com.horcrux.svg.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionEndIconStyle
com.swmansion.reanimated.R$attr: int lineHeight
com.horcrux.svg.R$attr: int panelBackground
com.swmansion.reanimated.R$attr: int colorPrimaryDark
com.swmansion.reanimated.R$styleable: int View_paddingStart
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_ttcIndex
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display3
com.facebook.react.fabric.mounting.MountItemDispatcher: int mReDispatchCounter
com.horcrux.svg.R$styleable: int[] ViewBackgroundHelper
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$attr: int fontProviderAuthority
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.util.Map mPoints
com.swmansion.reanimated.NodesManager: java.util.Set uiProps
com.horcrux.svg.SvgView: java.util.Map mDefinedMarkers
com.swmansion.reanimated.R$string: int progressbar_description
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
com.stripe.android.model.CardParams: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomStart
com.swmansion.reanimated.R$attr: int fontProviderAuthority
com.swmansion.reanimated.R$attr: int roundAsCircle
com.horcrux.svg.R$attr: int alertDialogTheme
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.horcrux.svg.R$styleable: int AppCompatTheme_controlBackground
com.swmansion.reanimated.R$color: int abc_btn_colored_borderless_text_material
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.horcrux.svg.R$attr: int indeterminateProgressStyle
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableStart
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.HmacParams: int tagSize_
com.swmansion.reanimated.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.stripe.android.model.PaymentMethod$BacsDebit: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_text_size_subhead_material
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: com.facebook.react.fabric.FabricUIManager this$0
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManagerImpl mRNCWebViewManagerImpl
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomLeft
com.google.crypto.tink.proto.AesCtrKeyFormat: int keySize_
com.horcrux.svg.R$drawable: int abc_btn_check_material_anim
com.horcrux.svg.SvgViewModule: java.lang.String NAME
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod$Companion Companion
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult$RuntimeError: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.swmansion.reanimated.R$id: int accessibility_custom_action_24
com.swmansion.reanimated.R$attr: int buttonBarNeutralButtonStyle
com.swmansion.reanimated.R$attr: int placeholderImageScaleType
com.google.crypto.tink.proto.AesCtrKeyFormat: int PARAMS_FIELD_NUMBER
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.horcrux.svg.R$drawable: int abc_list_pressed_holo_light
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: java.lang.String value
com.horcrux.svg.R$attr: int barLength
com.horcrux.svg.R$string: int abc_shareactionprovider_share_with_application
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.horcrux.svg.R$id: int text
com.swmansion.reanimated.R$dimen: int abc_button_padding_horizontal_material
com.horcrux.svg.R$color: int material_grey_600
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
com.horcrux.svg.R$attr: int progressBarImageScaleType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_retryImage
com.swmansion.reanimated.R$attr: int gapBetweenBars
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.swmansion.reanimated.R$string: int catalyst_debug_open
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int version_
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textColor
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.swmansion.reanimated.R$id: int custom
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane LINK_CONSENT
com.swmansion.reanimated.R$color: int primary_dark_material_dark
com.horcrux.svg.R$style: int Widget_AppCompat_ActionMode
com.horcrux.svg.R$styleable: int[] StateListDrawable
com.swmansion.reanimated.R$string: int catalyst_devtools_open
com.swmansion.reanimated.R$id: int listMode
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$anim: int abc_tooltip_enter
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.horcrux.svg.R$attr: int tooltipForegroundColor
com.horcrux.svg.R$id: int fragment_container_view_tag
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type UNKNOWN
com.horcrux.svg.RenderableViewManager$EllipseViewManager: java.lang.String REACT_CLASS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
com.horcrux.svg.R$layout: int abc_search_view
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int TYPE_URL_FIELD_NUMBER
com.horcrux.svg.R$attr: int shortcutMatchRequired
com.horcrux.svg.R$attr: int alpha
com.swmansion.reanimated.R$attr: int searchIcon
com.swmansion.reanimated.R$string: int catalyst_perf_monitor_stop
com.google.crypto.tink.proto.AesCmacKey: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$styleable: int AppCompatTheme_panelMenuListTheme
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomLeft
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.horcrux.svg.R$color: int material_grey_300
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.swmansion.reanimated.R$attr: int contentInsetLeft
com.swmansion.reanimated.R$attr: int allowStacking
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: boolean isStatusBarTranslucent
com.stripe.android.ui.core.elements.IbanSpec: com.stripe.android.ui.core.elements.IbanSpec$Companion Companion
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.horcrux.svg.R$id: int center
com.horcrux.svg.R$styleable: int ActionBar_logo
com.swmansion.reanimated.R$attr: int checkMarkCompat
com.swmansion.reanimated.R$color: int material_grey_50
com.stripe.android.model.PaymentMethod$SepaDebit: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.horcrux.svg.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_drawableSize
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_NON_SCALING_STROKE
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Toolbar
com.horcrux.svg.R$styleable: int AppCompatTheme_colorPrimaryDark
com.swmansion.reanimated.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.google.android.gms.wallet.wobs.TextModuleData: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int viewAspectRatio
com.horcrux.svg.R$id: int rn_redbox_loading_indicator
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView mTextRoot
com.horcrux.svg.R$styleable: int ActionBar_progressBarStyle
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
com.stripe.android.PaymentAuthConfig$Stripe3ds2Config: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int lastBaselineToBottomHeight
com.swmansion.reanimated.R$drawable: int abc_cab_background_internal_bg
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
com.stripe.android.financialconnections.model.PartnerAccountsList: com.stripe.android.financialconnections.model.PartnerAccountsList$Companion Companion
com.swmansion.reanimated.R$dimen: int highlight_alpha_material_light
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.horcrux.svg.R$style: int redboxButton
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int notification_large_icon_width
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.horcrux.svg.R$id: int search_go_btn
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.swmansion.reanimated.R$attr: int actionOverflowMenuStyle
com.swmansion.reanimated.R$drawable: int abc_dialog_material_background
com.stripe.android.paymentsheet.model.SavedSelection$Link: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int paddingTopNoTitle
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat aesCtrKeyFormat_
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$attr: int colorControlNormal
com.swmansion.reanimated.R$attr: int lStar
com.horcrux.svg.R$attr: int dialogPreferredPadding
com.horcrux.svg.R$dimen: int abc_text_size_headline_material
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Large
com.horcrux.svg.R$attr: int paddingEnd
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback mFrameCallback
com.horcrux.svg.R$dimen: int abc_star_small
com.horcrux.svg.R$style: int Widget_Compat_NotificationActionContainer
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.swmansion.reanimated.R$styleable: int ViewBackgroundHelper_android_background
com.horcrux.svg.R$style: int Platform_V25_AppCompat
com.swmansion.reanimated.R$attr: int paddingBottomNoButtons
com.swmansion.reanimated.R$attr: int colorBackgroundFloating
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason[] $VALUES
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Title
com.horcrux.svg.R$dimen: int abc_action_button_min_width_overflow_material
com.swmansion.reanimated.R$color: int primary_text_default_material_dark
com.stripe.android.financialconnections.model.Image: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_custom_action_18
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification
com.stripe.android.paymentsheet.model.PaymentSelection$New$USBankAccount$Input: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_textAppearance
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.stripe.android.financialconnections.model.OwnershipRefresh: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesGcmKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.horcrux.svg.R$attr: int isAutofillInlineSuggestionTheme
com.google.crypto.tink.proto.EncryptedKeyset: int ENCRYPTED_KEYSET_FIELD_NUMBER
com.facebook.react.fabric.LongStreamingStats: java.util.Queue minHeap
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogCornerRadius
com.horcrux.svg.R$attr: int showText
com.stripe.android.model.Source$CodeVerification: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int tickMarkTint
com.horcrux.svg.R$style: int Theme_FullScreenDialogAnimatedSlide
com.swmansion.reanimated.R$attr: int fontProviderCerts
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTheme
com.horcrux.svg.R$styleable: int[] ActivityChooserView
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
com.horcrux.svg.R$styleable: int CheckedTextView_checkMarkTint
com.horcrux.svg.R$styleable: int PopupWindow_overlapAnchor
com.swmansion.reanimated.R$id: int search_close_btn
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.swmansion.reanimated.R$styleable: int SearchView_android_focusable
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int sHolderCount
com.horcrux.svg.R$attr: int roundTopRight
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGGroup
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status UNKNOWN
com.horcrux.svg.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionStartIconStyle
com.swmansion.reanimated.R$style: int Widget_AppCompat_SearchView
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String WIDTH
com.imagepicker.ImagePickerModule: com.imagepicker.ImagePickerModuleImpl imagePickerModuleImpl
com.swmansion.reanimated.R$layout: int dev_loading_view
com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mObjBufferLen
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_TabText
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.horcrux.svg.R$attr: int thumbTintMode
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int actionModeCloseDrawable
com.swmansion.reanimated.R$dimen: int abc_text_size_small_material
com.swmansion.reanimated.R$layout: int abc_search_view
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Info
com.swmansion.reanimated.R$styleable: int SearchView_submitBackground
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode CUSTOM
com.google.crypto.tink.proto.KeyData: int keyMaterialType_
com.swmansion.reanimated.R$dimen: int compat_button_inset_vertical_material
com.swmansion.reanimated.R$id: int centerInside
com.facebook.react.fabric.FabricUIManager$5: int val$reactTag
com.horcrux.svg.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.swmansion.reanimated.NodesManager$2: com.swmansion.reanimated.NodesManager this$0
com.horcrux.svg.R$dimen: int abc_seekbar_track_progress_height_material
com.swmansion.reanimated.R$id: int screen
com.horcrux.svg.RenderableView: android.graphics.Path$FillType fillRule
com.swmansion.reanimated.R$style: int Platform_ThemeOverlay_AppCompat
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.proto.Keyset DEFAULT_INSTANCE
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.stripe.android.uicore.address.NameType: com.stripe.android.uicore.address.NameType$Companion Companion
com.stripe.android.model.WeChat: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int switch_thumb_disabled_material_light
com.swmansion.reanimated.R$style: int Base_Animation_AppCompat_DropDownUp
com.horcrux.svg.R$attr: int buttonBarPositiveButtonStyle
com.swmansion.reanimated.R$id: int accessibility_collection_item
com.swmansion.reanimated.R$attr: int contentInsetEndWithActions
com.swmansion.reanimated.R$styleable: int ActionBarLayout_android_layout_gravity
com.swmansion.reanimated.R$styleable: int Toolbar_popupTheme
com.horcrux.svg.R$dimen: int abc_control_inset_material
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow FINICITY_CONNECT_V2_FIX
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel: com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion Companion
com.stripe.android.stripe3ds2.transactions.ChallengeRequestData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] Fragment
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.swmansion.reanimated.R$attr: int tickMarkTint
com.swmansion.reanimated.R$color: int highlighted_text_material_dark
com.horcrux.svg.R$dimen: int abc_text_size_medium_material
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.swmansion.reanimated.R$id: int text
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
com.swmansion.reanimated.R$attr: int overlapAnchor
com.horcrux.svg.R$styleable: int LinearLayoutCompat_showDividers
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.horcrux.svg.R$style: int Widget_Autofill_InlineSuggestionTitle
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: boolean searchMode
com.horcrux.svg.R$styleable: int ActionBar_subtitleTextStyle
com.swmansion.reanimated.R$styleable: int AppCompatTextView_fontVariationSettings
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.horcrux.svg.VirtualView: double canvasDiagonal
com.horcrux.svg.R$styleable: int TextAppearance_textAllCaps
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.stripe.android.uicore.elements.IdentifierSpec: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int notification_action_color_filter
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat_Light
com.swmansion.reanimated.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.horcrux.svg.R$dimen: int abc_dialog_fixed_width_major
com.horcrux.svg.R$string: int abc_activitychooserview_choose_application
com.swmansion.reanimated.R$attr: int listDividerAlertDialog
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$color: int bright_foreground_material_light
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.swmansion.reanimated.R$style: int CalendarDatePickerDialog
com.swmansion.reanimated.R$styleable: int Toolbar_subtitle
com.stripe.android.model.StripeIntent$NextActionData$UpiAwaitNotification: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatSeekBar_android_thumb
com.swmansion.reanimated.R$styleable: int ActionMode_height
com.horcrux.svg.R$id: int group_divider
com.google.android.gms.internal.wallet.zzk: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_spinnerStyle
com.stripe.android.ui.core.elements.PhoneSpec: com.stripe.android.ui.core.elements.PhoneSpec$Companion Companion
com.horcrux.svg.R$styleable: int FontFamily_fontProviderQuery
com.stripe.android.ui.core.elements.SimpleTextSpec: com.stripe.android.ui.core.elements.SimpleTextSpec$Companion Companion
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.horcrux.svg.R$styleable: int ActionBar_displayOptions
com.horcrux.svg.VirtualView: java.lang.String mMask
com.stripe.android.stripe3ds2.observability.Stripe3ds2ErrorReporterConfig: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar
com.horcrux.svg.R$id: int multiply
com.horcrux.svg.R$id: int screen
com.swmansion.reanimated.R$styleable: int SearchView_android_text
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GYROSCOPE
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mEnteringViewTargetValues
com.horcrux.svg.R$styleable: int TextAppearance_android_textColor
com.stripe.android.financialconnections.model.Bullet: com.stripe.android.financialconnections.model.Bullet$Companion Companion
com.swmansion.reanimated.R$styleable: int AppCompatTextView_textLocale
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Light
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Line2
com.horcrux.svg.R$dimen: int abc_list_item_height_large_material
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_RADIUS
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: java.lang.String value
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowDy
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$drawable: int abc_dialog_material_background
com.swmansion.reanimated.R$style: int Widget_AppCompat_SearchView_ActionBar
com.swmansion.reanimated.R$id: int src_in
com.swmansion.reanimated.R$attr: int listChoiceBackgroundIndicator
com.swmansion.reanimated.R$string: int alert_description
com.swmansion.reanimated.R$style: int Theme_AppCompat
com.horcrux.svg.R$styleable: int ActionBar_contentInsetLeft
com.horcrux.svg.R$styleable: int StateListDrawable_android_constantSize
com.swmansion.reanimated.R$drawable: int abc_ic_ab_back_material
com.swmansion.reanimated.R$string: int toolbar_description
com.horcrux.svg.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.horcrux.svg.R$styleable: int SwitchCompat_android_textOn
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog_Alert
com.google.crypto.tink.proto.Keyset$Key: int status_
com.swmansion.reanimated.R$styleable: int[] StateListDrawable
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.swmansion.reanimated.R$id: int action_text
com.horcrux.svg.R$dimen: int abc_text_size_body_1_material
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.horcrux.svg.R$dimen: int abc_star_medium
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.google.crypto.tink.proto.AesCmacParams: int tagSize_
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.swmansion.reanimated.R$drawable: int abc_btn_colored_material
com.swmansion.reanimated.R$attr: int submitBackground
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _result
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
com.horcrux.svg.R$drawable: int notify_panel_notification_icon_bg
com.horcrux.svg.R$style: int Widget_Autofill_InlineSuggestionChip
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ProgressBar
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopRight
com.horcrux.svg.R$color: int primary_text_disabled_material_dark
com.swmansion.reanimated.R$string: int catalyst_open_flipper_error
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState CLOSING
com.horcrux.svg.R$id: int tag_accessibility_heading
com.horcrux.svg.R$id: int accessibility_custom_action_2
com.horcrux.svg.R$color: int button_material_dark
com.google.crypto.tink.proto.AesSivKeyFormat: int VERSION_FIELD_NUMBER
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
com.horcrux.svg.R$styleable: int[] ActionMenuItemView
com.swmansion.reanimated.R$styleable: int SearchView_queryBackground
com.horcrux.svg.RenderableView: int CAP_ROUND
com.reactnativecommunity.picker.ReactDropdownPickerManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
com.stripe.android.model.Source$Klarna: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int toolbarNavigationButtonStyle
com.swmansion.reanimated.R$style: int Theme_AppCompat_Empty
com.horcrux.svg.R$id: int blocking
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_overlayImage
com.swmansion.reanimated.R$styleable: int Spinner_android_dropDownWidth
com.swmansion.reanimated.R$id: int transition_layout_save
com.horcrux.svg.R$color: int dim_foreground_material_light
com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountType: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.swmansion.reanimated.R$string: int abc_searchview_description_search
com.horcrux.svg.R$attr: int navigationIcon
com.swmansion.reanimated.R$styleable: int FragmentContainerView_android_tag
com.swmansion.reanimated.R$styleable: int SearchView_suggestionRowLayout
com.stripe.android.financialconnections.model.GetFinancialConnectionsAcccountsParams: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat
com.swmansion.reanimated.R$styleable: int[] AppCompatSeekBar
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray fill
com.stripe.android.model.PaymentMethod$Fpx: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int textAppearanceLargePopupMenu
com.horcrux.svg.R$styleable: int MenuItem_actionViewClass
com.horcrux.svg.R$id: int home
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.google.crypto.tink.proto.RegistryConfig: int ENTRY_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow TRUELAYER_OAUTH_WEBVIEW
com.swmansion.reanimated.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.horcrux.svg.R$styleable: int SimpleDraweeView_backgroundImage
com.horcrux.svg.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory LINE_OF_CREDIT
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.facebook.react.bridge.ReactApplicationContext mContext
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.google.crypto.tink.proto.AesCtrKey: int PARAMS_FIELD_NUMBER
com.horcrux.svg.R$attr: int actionModeCutDrawable
com.google.android.gms.wallet.ShippingAddressRequirements: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int split_action_bar
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
com.horcrux.svg.R$styleable: int SearchView_useDrawerArrowDrawable
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mIsStopped
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray stroke
com.horcrux.svg.R$styleable: int ActionBar_hideOnContentScroll
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.horcrux.svg.R$style: int Widget_AppCompat_ListMenuView
com.horcrux.svg.R$color: int bright_foreground_disabled_material_light
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.swmansion.reanimated.R$styleable: int SwitchCompat_android_textOn
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.swmansion.reanimated.BuildConfig: boolean IS_INTERNAL_BUILD
com.stripe.android.financialconnections.model.Display: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.AccountHolder$Type: java.lang.String value
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display1
com.stripe.android.GooglePayJsonFactory$TransactionInfo: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacKeyFormat: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_WIDTH
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.swmansion.reanimated.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.horcrux.svg.R$dimen: int abc_action_bar_default_padding_end_material
com.stripe.android.ui.core.elements.KlarnaHeaderStaticTextSpec: com.stripe.android.ui.core.elements.KlarnaHeaderStaticTextSpec$Companion Companion
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.horcrux.svg.R$attr: int switchStyle
com.swmansion.reanimated.R$string: int abc_menu_ctrl_shortcut_label
com.swmansion.reanimated.R$drawable: int abc_ratingbar_indicator_material
com.horcrux.svg.R$attr: int toolbarStyle
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.airbnb.mvrx.Async disableNetworkingAsync
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetNativeActivityArgs: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Borderless
com.horcrux.svg.R$attr: int buttonBarNeutralButtonStyle
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityResult$Completed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.NodesManager$3: java.util.Queue val$copiedOperationsQueue
com.horcrux.svg.R$attr: int colorPrimaryDark
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.bridge.ReadableMap mCurrentLocalData
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.swmansion.reanimated.R$string: int search_menu_title
com.horcrux.svg.R$style: int Widget_AppCompat_SearchView_ActionBar
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object _affectedNode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.stripe.android.model.ConfirmSetupIntentParams: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int uniform
com.horcrux.svg.R$styleable: int ActionMode_closeItemLayout
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogTheme
com.swmansion.reanimated.R$id: int accessibility_custom_action_11
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.stripe.android.model.Source: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.stripe.android.model.StripeIntent$NextActionData$CashAppRedirect: android.os.Parcelable$Creator CREATOR
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int SwitchCompat_switchTextAppearance
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.swmansion.reanimated.R$styleable: int SwitchCompat_trackTintMode
com.swmansion.reanimated.R$dimen: int abc_text_size_menu_header_material
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Subhead
com.swmansion.reanimated.R$styleable: int ActionBar_subtitleTextStyle
com.reactnativestripesdk.StripeSdkModule: java.lang.String confirmPaymentClientSecret
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.swmansion.reanimated.R$id: int blocking
com.stripe.android.payments.paymentlauncher.PaymentLauncherContract$Args$IntentConfirmationArgs: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int drawableStartCompat
com.stripe.android.stripe3ds2.init.ui.StripeButtonCustomization: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int actualImageUri
com.horcrux.svg.R$styleable: int[] MenuView
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.reactnativepagerview.PagerViewViewManager: java.lang.String COMMAND_SET_SCROLL_ENABLED
com.stripe.android.financialconnections.model.Entry$Image: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.horcrux.svg.R$attr: int hideOnContentScroll
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundingBorderWidth
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopEnd
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeTheme
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean slowAnimationsEnabled
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.proto.AesGcmSivKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesGcmKeyFormat: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$anim: int catalyst_push_up_in
com.swmansion.reanimated.R$drawable: int abc_textfield_search_material
com.google.crypto.tink.proto.RegistryConfig: java.lang.String configName_
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.stripe.android.link.ui.ErrorMessage$Raw: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int right_side
com.swmansion.reanimated.R$attr: int drawableStartCompat
com.swmansion.reanimated.R$styleable: int ActionBar_progressBarPadding
com.horcrux.svg.R$id: int dialog_button
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.swmansion.reanimated.R$styleable: int SearchView_searchIcon
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.horcrux.svg.R$layout: int abc_screen_simple
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int HMAC_KEY_FORMAT_FIELD_NUMBER
com.horcrux.svg.R$style: int Base_Theme_AppCompat
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_CREATE
com.horcrux.svg.R$string: int abc_menu_function_shortcut_label
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.facebook.react.fabric.mounting.MountingManager: int MAX_STOPPED_SURFACE_IDS_LENGTH
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext mThemedReactContext
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel: com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion Companion
com.swmansion.reanimated.R$styleable: int View_android_theme
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
com.swmansion.reanimated.R$styleable: int AlertDialog_buttonPanelSideLayout
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_LOCATIONS
com.swmansion.reanimated.R$attr: int controlBackground
com.horcrux.svg.R$style: int Theme
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Toolbar
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.google.crypto.tink.proto.AesGcmSivKey: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$style: int Theme_ReactNative_AppCompat_Light
com.swmansion.reanimated.R$attr: int buttonTint
com.horcrux.svg.R$drawable: int abc_textfield_default_mtrl_alpha
com.google.crypto.tink.proto.AesEaxKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int STATUS_FIELD_NUMBER
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKey DEFAULT_INSTANCE
com.swmansion.reanimated.R$styleable: int Toolbar_titleTextAppearance
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async payload
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.horcrux.svg.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.google.crypto.tink.proto.AesGcmKeyFormat: int version_
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton
com.swmansion.reanimated.R$string: int summary_description
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status SUCCEEDED
com.swmansion.reanimated.R$styleable: int AppCompatTheme_editTextStyle
com.horcrux.svg.R$dimen: int abc_dialog_padding_top_material
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog
com.horcrux.svg.R$attr: int fontProviderPackage
com.swmansion.reanimated.R$attr: int actionModeCloseContentDescription
com.swmansion.reanimated.R$drawable: int abc_btn_radio_material
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.swmansion.reanimated.R$styleable: int AppCompatTheme_checkboxStyle
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE_CENTER
com.horcrux.svg.R$styleable: int AppCompatTextView_fontVariationSettings
com.horcrux.svg.R$drawable: int abc_star_half_black_48dp
com.horcrux.svg.R$color: int abc_search_url_text_pressed
com.swmansion.reanimated.R$id: int tabMode
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
com.horcrux.svg.R$attr: int tooltipText
com.horcrux.svg.R$anim: int abc_grow_fade_in_from_bottom
com.swmansion.reanimated.R$attr: int popupMenuStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.horcrux.svg.R$id: int visible_removing_fragment_view_tag
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType IN
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.swmansion.reanimated.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.stripe.android.financialconnections.presentation.WebAuthFlowState$Uninitialized: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int MenuItem_android_orderInCategory
com.horcrux.svg.R$dimen: int abc_text_size_body_2_material
com.horcrux.svg.R$attr: int collapseContentDescription
com.stripe.android.financialconnections.features.consent.ConsentViewModel: com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion Companion
com.horcrux.svg.R$styleable: int ActionBar_contentInsetEndWithActions
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer routingError
com.stripe.android.model.BankStatuses: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ProgressBar
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Small_Inverse
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog closeDialog
com.swmansion.reanimated.R$attr: int tint
com.facebook.react.uimanager.ViewManager: int mRecyclableViewsBufferSize
com.stripe.android.financialconnections.model.OwnershipRefresh: com.stripe.android.financialconnections.model.OwnershipRefresh$Companion Companion
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions[] $VALUES
com.horcrux.svg.R$attr: int drawableEndCompat
com.swmansion.reanimated.R$id: int titleDividerNoCustom
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.stripe.android.model.Customer: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonStyleSmall
com.horcrux.svg.R$styleable: int Toolbar_titleTextColor
com.stripe.android.financialconnections.model.GetFinancialConnectionsAcccountsParams: com.stripe.android.financialconnections.model.GetFinancialConnectionsAcccountsParams$Companion Companion
com.horcrux.svg.R$attr: int textLocale
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.proto.ChaCha20Poly1305Key DEFAULT_INSTANCE
com.swmansion.reanimated.R$attr: int roundTopRight
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Body1
com.swmansion.reanimated.R$dimen: int abc_control_padding_material
com.horcrux.svg.R$styleable: int SwitchCompat_trackTintMode
com.horcrux.svg.RenderableViewManager$MaskManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionButton
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.swmansion.reanimated.R$id: int transition_scene_layoutid_cache
com.horcrux.svg.R$styleable: int Fragment_android_name
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_Dialog
com.horcrux.svg.R$id: int tag_on_receive_content_listener
com.swmansion.reanimated.R$dimen: int abc_text_size_caption_material
com.stripe.android.customersheet.InternalCustomerSheetResult$Canceled: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int primary_text_default_material_dark
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat
com.horcrux.svg.R$attr: int fontProviderFetchStrategy
com.swmansion.reanimated.R$id: int normal
com.horcrux.svg.R$attr: int thickness
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mTagSetForStoppedSurface
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeStyle
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$Mode$Setup: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$interpolator: int fast_out_slow_in
com.horcrux.svg.R$attr: int fontVariationSettings
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mCommitNumber
com.horcrux.svg.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.horcrux.svg.R$style: int AlertDialog_AppCompat
com.horcrux.svg.R$style: int Theme_AppCompat_Light_DarkActionBar
com.google.android.gms.wallet.FullWallet: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int[] CheckedTextView
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor$Config$Keys: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_list_selector_holo_dark
com.horcrux.svg.R$id: int accessibility_custom_action_25
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeTheme
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_Solid
com.horcrux.svg.R$styleable: int AppCompatTheme_listMenuViewStyle
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.swmansion.reanimated.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionSubtitle
com.horcrux.svg.R$drawable: int abc_list_selector_background_transition_holo_light
com.swmansion.reanimated.R$id: int shortcut
com.swmansion.reanimated.R$layout: int abc_action_bar_title_item
com.swmansion.reanimated.R$attr: int autoSizeMinTextSize
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.swmansion.reanimated.R$style: int Base_V23_Theme_AppCompat
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EXS
com.swmansion.reanimated.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.swmansion.reanimated.R$attr: int searchViewStyle
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PC
com.swmansion.reanimated.R$id: int scrollIndicatorDown
com.horcrux.svg.R$styleable: int AppCompatTheme_radioButtonStyle
com.swmansion.reanimated.R$id: int rn_redbox_report_button
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$FinishedSpec: com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$FinishedSpec INSTANCE
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane NETWORKING_LINK_SIGNUP_PANE
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs$ForLink: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$animator: int fragment_close_enter
com.horcrux.svg.R$attr: int roundWithOverlayColor
com.horcrux.svg.SvgView: android.graphics.Canvas mCanvas
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.google.android.gms.wallet.wobs.UriData: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Widget_AppCompat_TextView
com.horcrux.svg.R$id: int action_mode_close_button
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean mShouldAnimateLayout
com.horcrux.svg.VirtualViewManager: double EPSILON
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.horcrux.svg.R$attr: int listLayout
com.horcrux.svg.R$attr: int actionBarTabStyle
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: java.lang.String value
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Platform_V25_AppCompat_Light
com.horcrux.svg.R$styleable: int MenuItem_iconTint
com.swmansion.reanimated.R$attr: int buttonStyle
com.stripe.android.link.serialization.PopupPayload$CustomerInfo: com.stripe.android.link.serialization.PopupPayload$CustomerInfo$Companion Companion
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.horcrux.svg.R$dimen: int compat_button_inset_horizontal_material
com.swmansion.reanimated.R$drawable: int abc_star_half_black_48dp
com.swmansion.reanimated.R$string: int abc_toolbar_collapse_description
com.horcrux.svg.R$drawable: int abc_btn_borderless_material
com.swmansion.reanimated.R$attr: int itemPadding
com.swmansion.reanimated.R$id: int accessibility_custom_action_2
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel: com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion Companion
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
com.swmansion.reanimated.R$id: int action_container
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.proto.AesGcmKeyFormat DEFAULT_INSTANCE
com.swmansion.reanimated.R$attr: int barLength
com.horcrux.svg.R$attr: int windowNoTitle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.google.crypto.tink.proto.KeyTypeEntry: int keyManagerVersion_
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
com.swmansion.reanimated.R$styleable: int ActionBar_height
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.swmansion.reanimated.R$id: int rn_redbox_stack
com.stripe.android.financialconnections.model.NetworkedAccount: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Animation_AppCompat_Tooltip
com.google.crypto.tink.proto.AesCmacKey: int KEY_VALUE_FIELD_NUMBER
com.horcrux.svg.R$attr: int seekBarStyle
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager viewManager
com.horcrux.svg.R$styleable: int Spinner_android_popupBackground
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.stripe.android.financialconnections.model.Balance$Type: java.lang.String value
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$Config: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Light
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Headline
com.horcrux.svg.R$attr: int voiceIcon
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status SUCCEEDED
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.swmansion.reanimated.R$styleable: int ActionMode_closeItemLayout
com.swmansion.reanimated.R$attr: int titleMarginEnd
com.horcrux.svg.R$layout: int abc_activity_chooser_view
com.horcrux.svg.R$color: int background_floating_material_light
com.horcrux.svg.R$styleable: int ActionBar_background
com.swmansion.reanimated.R$drawable: int abc_ic_voice_search_api_material
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopRight
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_barLength
com.horcrux.svg.R$styleable: int StateListDrawable_android_dither
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomStart
com.oblador.vectoricons.VectorIconsModule: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.stripe.android.model.ConfirmPaymentIntentParams$Shipping: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int CalendarDatePickerDialog
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.swmansion.reanimated.R$attr: int drawableRightCompat
com.facebook.react.fabric.FabricUIManager$5: boolean val$blockNativeResponder
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
com.swmansion.reanimated.R$id: int action_bar_title
com.horcrux.svg.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.stripe.android.financialconnections.model.ManualEntryMode: java.lang.String value
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus UNKNOWN
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderWidth
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.google.android.gms.internal.wallet.zzg: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane[] $VALUES
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.views.view.ReactViewManagerWrapper mViewManager
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.swmansion.reanimated.R$dimen: int abc_star_medium
com.google.crypto.tink.proto.KeyTypeEntry: int NEW_KEY_ALLOWED_FIELD_NUMBER
com.horcrux.svg.R$attr: int backgroundSplit
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textSize
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType MAGNETIC_FIELD
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.stripe.android.financialconnections.FinancialConnectionsSheetResult$Failed: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.Object mProps
com.google.crypto.tink.proto.KeysetInfo: int PRIMARY_KEY_ID_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int roundBottomRight
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.horcrux.svg.R$color: int abc_color_highlight_material
com.swmansion.reanimated.R$styleable: int ColorStateListItem_android_alpha
com.swmansion.reanimated.R$styleable: int SearchView_android_inputType
com.horcrux.svg.R$drawable: int notification_bg_normal_pressed
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.ReactNativeConfig mConfig
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int MenuItem_numericModifiers
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundBottomRight
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.UIManagerModule mUIManager
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow TESTMODE_OAUTH
com.swmansion.reanimated.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.swmansion.reanimated.R$dimen: int tooltip_precise_anchor_threshold
com.horcrux.svg.R$drawable: int abc_scrubber_track_mtrl_alpha
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.horcrux.svg.R$attr: int autofillInlineSuggestionTitle
com.swmansion.reanimated.R$attr: int actionModeTheme
com.horcrux.svg.R$styleable: int ActionBar_divider
com.swmansion.reanimated.R$attr: int navigationIcon
com.horcrux.svg.R$drawable: int abc_vector_test
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Title
com.horcrux.svg.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.swmansion.reanimated.NodesManager$1: com.facebook.react.bridge.ReadableArray val$commandArgs
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: java.lang.Runnable mRunnable
com.swmansion.reanimated.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.swmansion.reanimated.NodesManager: java.util.concurrent.ConcurrentLinkedQueue mEventQueue
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetStart
com.horcrux.svg.R$id: int accessibility_custom_action_13
com.swmansion.reanimated.R$attr: int navigationContentDescription
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.horcrux.svg.R$string: int image_description
com.swmansion.reanimated.R$attr: int singleChoiceItemLayout
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_retryImage
com.swmansion.reanimated.R$id: int line3
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.react.fabric.LongStreamingStats: int len
com.horcrux.svg.R$attr: int actionModeTheme
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product OPAL
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.stripe.android.model.SetupIntent$Error: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int abc_menu_alt_shortcut_label
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderFetchStrategy
com.horcrux.svg.R$style: int Theme_Catalyst_RedBox
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
com.rnmaps.maps.MapManager: java.util.Map MY_LOCATION_PRIORITY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat DEFAULT_INSTANCE
com.horcrux.svg.R$dimen: int notification_top_pad_large_text
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: java.lang.String typeUrl_
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.horcrux.svg.R$drawable: int notification_bg
com.swmansion.reanimated.R$id: int info
com.swmansion.reanimated.R$id: int view_tree_lifecycle_owner
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.horcrux.svg.R$color: int abc_hint_foreground_material_dark
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
com.horcrux.svg.R$styleable: int AppCompatTheme_seekBarStyle
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow UNKNOWN
com.horcrux.svg.R$attr: int iconTintMode
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.swmansion.reanimated.R$id: int action_mode_bar_stub
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$id: int notification_background
com.horcrux.svg.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.swmansion.reanimated.R$attr: int nestedScrollViewStyle
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.horcrux.svg.R$attr: int overlayImage
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_HEIGHT
com.horcrux.svg.R$id: int default_activity_button
com.swmansion.reanimated.R$attr: int roundingBorderPadding
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mWeakAnimationsManager
com.facebook.react.views.view.ReactViewGroup: java.lang.String mBackfaceVisibility
com.swmansion.reanimated.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Small
com.horcrux.svg.R$string: int catalyst_loading_from_url
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$Mode$Payment: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
com.stripe.android.uicore.address.FieldSchema: com.stripe.android.uicore.address.FieldSchema$Companion Companion
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGLinearGradient
com.stripe.android.financialconnections.model.InstitutionResponse: com.stripe.android.financialconnections.model.InstitutionResponse$Companion Companion
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.horcrux.svg.R$attr: int listChoiceIndicatorSingleAnimated
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextBackground
com.horcrux.svg.R$attr: int textColorAlertDialogListItem
com.horcrux.svg.R$styleable: int Toolbar_navigationContentDescription
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Large
com.horcrux.svg.R$style: int Platform_V25_AppCompat_Light
com.swmansion.reanimated.R$style: int Widget_AppCompat_SeekBar_Discrete
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.stripe.android.paymentsheet.model.PaymentSelection$New$Card: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.LabelValueRow: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_floating_window_z
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
com.horcrux.svg.R$styleable: int ActionBar_height
com.swmansion.reanimated.R$dimen: int abc_text_size_title_material
com.stripe.android.ui.core.elements.PlaceholderSpec: com.stripe.android.ui.core.elements.PlaceholderSpec$Companion Companion
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.swmansion.reanimated.R$dimen: int tooltip_precise_anchor_extra_offset
com.swmansion.reanimated.R$styleable: int CompoundButton_android_button
com.horcrux.svg.R$color: int switch_thumb_material_dark
com.stripe.android.stripe3ds2.transaction.ChallengeResult$Succeeded: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.stripe.android.view.AddPaymentMethodActivityStarter$Result$Success: android.os.Parcelable$Creator CREATOR
com.stripe.android.paymentsheet.PaymentSheet$Shapes: android.os.Parcelable$Creator CREATOR
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs: com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$Companion Companion
com.swmansion.reanimated.R$anim: int abc_popup_enter
com.swmansion.reanimated.R$styleable: int[] Spinner
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.horcrux.svg.R$string: int catalyst_debug_chrome_stop
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.swmansion.reanimated.R$dimen: int tooltip_y_offset_touch
com.stripe.android.EphemeralOperation$Customer$DetachPaymentMethod: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod UNKNOWN
com.google.android.gms.maps.model.TileOverlayOptions: android.os.Parcelable$Creator CREATOR
com.stripe.android.link.serialization.PopupPayload$PaymentInfo: com.stripe.android.link.serialization.PopupPayload$PaymentInfo$Companion Companion
com.horcrux.svg.R$attr: int actionModeSelectAllDrawable
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel: com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion Companion
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_Switch
com.swmansion.reanimated.R$integer: int config_tooltipAnimTime
com.horcrux.svg.R$styleable: int Spinner_android_entries
com.reactnativecommunity.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.stripe.android.ui.core.elements.DisplayField: com.stripe.android.ui.core.elements.DisplayField$Companion Companion
com.swmansion.reanimated.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.stripe.android.financialconnections.model.AddNewAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String mCommandId
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler mAndroidUIScheduler
com.stripe.android.stripe3ds2.transactions.ChallengeResponseData$ChallengeSelectOption: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.swmansion.reanimated.R$dimen: int highlight_alpha_material_colored
com.horcrux.svg.R$styleable: int SwitchCompat_trackTint
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.horcrux.svg.R$id: int accessibility_custom_action_31
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions$Companion Companion
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.horcrux.svg.R$styleable: int Toolbar_android_minHeight
com.reactnativecommunity.picker.ReactDialogPickerManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Inverse
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar_Indicator
com.facebook.react.views.view.ReactViewGroup: java.lang.String mOverflow
com.stripe.android.model.Stripe3ds2Fingerprint$DirectoryServerEncryption: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_inspector
com.swmansion.reanimated.R$drawable: int abc_list_divider_material
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: int mEventCategory
com.horcrux.svg.R$styleable: int ViewStubCompat_android_inflatedId
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGCircle
com.swmansion.reanimated.R$id: int accessibility_custom_action_21
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$id: int scrollView
com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult$ProtocolError: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mCommandId
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.swmansion.reanimated.R$id: int buttonPanel
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat
com.horcrux.svg.R$attr: int checkMarkCompat
com.stripe.android.paymentsheet.PaymentSheet$CustomerConfiguration: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_FLAG_MULTIPLE
com.reactnativecommunity.picker.ReactPickerManager: int FOCUS_PICKER
com.stripe.android.paymentsheet.PaymentSheetResult$Failed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int windowFixedHeightMajor
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.stripe.android.ui.core.elements.AddressSpec: com.stripe.android.ui.core.elements.AddressSpec$Companion Companion
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_EditText
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList targetKeysToTransform
com.horcrux.svg.R$id: int notification_main_column
com.swmansion.reanimated.R$attr: int background
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat_Dialog
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.horcrux.svg.R$string: int catalyst_settings
com.swmansion.reanimated.R$attr: int fontProviderFetchStrategy
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
com.horcrux.svg.R$styleable: int[] AppCompatTheme
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status UNKNOWN
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat_Dialog
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableTint
com.stripe.android.paymentsheet.PaymentSheetContractV2$Args: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.horcrux.svg.R$attr: int searchHintIcon
com.swmansion.reanimated.R$attr: int switchPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.horcrux.svg.R$color: int tooltip_background_dark
com.swmansion.reanimated.R$styleable: int[] GradientColorItem
com.swmansion.reanimated.R$drawable: int notification_template_icon_bg
com.swmansion.reanimated.R$attr: int srcCompat
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow MX_OAUTH_REDIRECT
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorAccent
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status[] $VALUES
com.horcrux.svg.R$style: int Animation_Catalyst_RedBox
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityResult$Canceled: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int[] FontFamilyFont
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResult$Cancelled: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.horcrux.svg.RenderableView: float strokeOpacity
com.horcrux.svg.R$styleable: int MenuItem_android_title
com.google.crypto.tink.proto.AesGcmKey: int version_
com.horcrux.svg.R$drawable: int abc_seekbar_tick_mark_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dialogCornerRadius
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
kotlinx.serialization.json.JsonPrimitive: kotlinx.serialization.json.JsonPrimitive$Companion Companion
com.google.crypto.tink.proto.KeyTemplate: int outputPrefixType_
com.swmansion.reanimated.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.horcrux.svg.R$attr: int colorButtonNormal
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.CardFormView cardFormView
com.horcrux.svg.R$id: int accessibility_hint
com.swmansion.reanimated.R$dimen: int abc_dialog_padding_material
com.horcrux.svg.R$styleable: int AppCompatTheme_switchStyle
com.stripe.android.view.PaymentMethodsActivityStarter$Args: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int checked
com.swmansion.reanimated.R$attr: int height
com.horcrux.svg.R$styleable: int AlertDialog_listLayout
com.horcrux.svg.R$layout: int abc_list_menu_item_radio
com.horcrux.svg.RenderableView: int CAP_SQUARE
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent currentBottomSheet
com.stripe.android.model.StripeIntent$NextActionData$RedirectToUrl: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.stripe.android.ui.core.elements.CardDetailsSectionSpec: com.stripe.android.ui.core.elements.CardDetailsSectionSpec$Companion Companion
com.swmansion.reanimated.NodesManager$1: int val$viewTag
com.swmansion.reanimated.R$color: int primary_text_default_material_light
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTintMode
com.swmansion.reanimated.R$layout: int abc_screen_simple
com.swmansion.reanimated.R$attr: int windowNoTitle
com.swmansion.reanimated.R$drawable: int redbox_top_border_background
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int MenuView_android_windowAnimationStyle
com.horcrux.svg.R$attr: int paddingBottomNoButtons
com.facebook.react.config.ReactFeatureFlags: boolean enableEarlyScheduledMountItemExecution
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.VirtualViewManager: double[] sTransformDecompositionArray
com.swmansion.reanimated.R$id: int progress_horizontal
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.swmansion.reanimated.R$style: int Widget_Compat_NotificationActionText
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableStartCompat
com.horcrux.svg.R$attr: int drawableTintMode
com.stripe.android.model.PaymentMethod$USBankAccount$USBankNetworks: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_android_windowIsFloating
com.swmansion.reanimated.R$styleable: int[] GradientColor
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product EXTERNAL_API
com.horcrux.svg.R$id: int shortcut
com.swmansion.reanimated.R$attr: int thumbTint
com.swmansion.reanimated.R$attr: int panelMenuListWidth
com.horcrux.svg.R$styleable: int FontFamily_fontProviderAuthority
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.horcrux.svg.R$styleable: int AppCompatImageView_tint
com.horcrux.svg.R$drawable: int abc_spinner_mtrl_am_alpha
com.horcrux.svg.R$attr: int searchViewStyle
com.horcrux.svg.R$color: int material_grey_900
com.horcrux.svg.R$attr: int actionMenuTextAppearance
com.horcrux.svg.R$dimen: int tooltip_corner_radius
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.horcrux.svg.SvgView: float mMinX
com.swmansion.reanimated.R$style: int Platform_AppCompat
com.stripe.android.stripe3ds2.transaction.ChallengeRequestExecutor$Config: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int buttonBarButtonStyle
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: java.lang.String previewText
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextStyle
com.horcrux.svg.R$styleable: int MenuItem_alphabeticModifiers
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResponse: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
com.swmansion.reanimated.R$attr: int buttonBarStyle
com.stripe.android.stripe3ds2.transaction.InitChallengeArgs: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int button_material_dark
com.stripe.android.stripe3ds2.transactions.ChallengeResponseData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_disabled_alpha_material_dark
com.horcrux.svg.R$id: int accessibility_custom_action_5
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_RADIUS
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
com.swmansion.reanimated.AndroidUIScheduler: java.util.concurrent.atomic.AtomicBoolean mActive
com.swmansion.reanimated.nativeProxy.SensorSetter: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$color: int abc_tint_default
com.horcrux.svg.R$attr: int actualImageResource
com.swmansion.reanimated.R$styleable: int Toolbar_collapseIcon
com.swmansion.reanimated.R$color: int abc_secondary_text_material_dark
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.horcrux.svg.R$styleable: int ActionMode_backgroundSplit
com.swmansion.reanimated.R$id: int save_overlay_view
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
com.swmansion.reanimated.R$styleable: int ActionBar_displayOptions
com.swmansion.reanimated.R$drawable: int abc_vector_test
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResponseInternal: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int bright_foreground_material_dark
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.horcrux.svg.R$attr: int actionDropDownStyle
com.horcrux.svg.R$styleable: int[] PopupWindowBackgroundState
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.stripe.android.payments.paymentlauncher.PaymentResult$Failed: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel: com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion Companion
com.horcrux.svg.R$styleable: int Toolbar_titleMargin
com.swmansion.reanimated.R$attr: int imageButtonStyle
com.swmansion.reanimated.R$string: int menuitem_description
com.swmansion.reanimated.BuildConfig: java.lang.String BUILD_TYPE
com.horcrux.svg.R$dimen: int autofill_inline_suggestion_icon_size
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
com.swmansion.reanimated.R$attr: int tooltipFrameBackground
com.swmansion.reanimated.R$attr: int listMenuViewStyle
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display2
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type CREDIT
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.swmansion.reanimated.R$dimen: int abc_action_bar_stacked_tab_max_width
com.horcrux.svg.R$styleable: int SwitchCompat_android_textOff
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: int mCustomCoalesceKey
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopEnd
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode$Companion Companion
com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.horcrux.svg.R$drawable: int notification_action_background
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.horcrux.svg.VirtualView: java.util.ArrayList elements
com.swmansion.reanimated.R$styleable: int[] CheckedTextView
com.horcrux.svg.R$layout: int abc_popup_menu_item_layout
com.horcrux.svg.R$attr: int navigationContentDescription
com.swmansion.reanimated.R$styleable: int AppCompatTextView_textAllCaps
com.stripe.android.paymentsheet.paymentdatacollection.ach.USBankAccountFormScreenState$MandateCollection: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_orientation
com.horcrux.svg.R$drawable: int abc_ic_voice_search_api_material
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarItemBackground
com.horcrux.svg.R$id: int tag_window_insets_animation_callback
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.stripe.android.paymentsheet.PaymentSheet$Appearance: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_debug_stop
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type UNKNOWN
com.swmansion.reanimated.R$id: int transition_current_scene
com.swmansion.reanimated.R$id: int decor_content_parent
com.horcrux.svg.R$style: int Base_V28_Theme_AppCompat_Light
com.swmansion.reanimated.R$attr: int navigationMode
com.horcrux.svg.R$styleable: int StateListDrawable_android_variablePadding
com.swmansion.reanimated.R$attr: int alertDialogTheme
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions BALANCES
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_weightSum
com.stripe.android.model.ConsumerSession$VerificationSession$SessionState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_hot_reloading_stop
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.R$color: int accent_material_dark
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat
com.horcrux.svg.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.stripe.android.payments.paymentlauncher.PaymentResult$Completed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_button_inset_horizontal_material
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
com.stripe.android.paymentsheet.model.PaymentSelection$GooglePay: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int TextAppearance_fontFamily
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat hmacKeyFormat_
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: int keyboardHeight
com.swmansion.reanimated.R$layout: int abc_popup_menu_item_layout
com.swmansion.reanimated.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.horcrux.svg.R$color: int abc_primary_text_material_dark
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Colored
com.horcrux.svg.R$id: int image
com.swmansion.reanimated.R$style: int DialogAnimationSlide
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbHeight
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion Companion
com.reactnativestripesdk.StripeSdkModule: java.lang.String publishableKey
com.horcrux.svg.R$id: int action_bar_title
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PT
com.swmansion.reanimated.R$drawable: int abc_action_bar_item_background_material
com.swmansion.reanimated.R$attr: int overlayImage
com.horcrux.svg.R$dimen: int notification_subtext_size
com.stripe.android.model.CardMetadata: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: float[] sRawMatrix
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.swmansion.reanimated.R$styleable: int AppCompatImageView_android_src
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
com.facebook.react.fabric.FabricSoLoader: boolean sDidInit
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.swmansion.reanimated.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.swmansion.reanimated.R$styleable: int SearchView_searchPrefixText
com.stripe.android.model.ElementsSessionParams$SetupIntentType: android.os.Parcelable$Creator CREATOR
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mCxxModuleProvider
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest manifest
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$Result$Canceled: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_dialog_fixed_height_major
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category CASH
com.swmansion.reanimated.R$styleable: int AppCompatTheme_ratingBarStyle
com.swmansion.reanimated.R$string: int abc_action_mode_done
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus PENDING
com.swmansion.reanimated.R$anim: int abc_slide_in_top
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogTheme
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable mCompletionRunnable
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_END_POINT
com.swmansion.reanimated.R$attr: int actionModeCopyDrawable
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$styleable: int[] AppCompatEmojiHelper
com.horcrux.svg.RenderableViewManager$LinearGradientManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.horcrux.svg.R$drawable: int redbox_top_border_background
com.facebook.react.turbomodule.core.TurboModulePerfLogger: boolean sIsSoLibraryLoaded
com.swmansion.reanimated.R$integer: int abc_config_activityDefaultDur
com.horcrux.svg.R$attr: int drawableBottomCompat
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.horcrux.svg.R$styleable: int AppCompatTheme_actionMenuTextColor
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopStart
com.horcrux.svg.R$drawable: int abc_edit_text_material
com.google.android.gms.wallet.zzau: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.swmansion.reanimated.R$dimen: int abc_dialog_corner_radius_material
com.horcrux.svg.R$anim: int catalyst_slide_up
com.stripe.android.GooglePayJsonFactory$BillingAddressParameters: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int abc_search_url_text_pressed
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.stripe.android.paymentsheet.paymentdatacollection.FormArguments: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.horcrux.svg.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] rotation
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeStyle
com.stripe.android.model.Source$Redirect: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _parentHandle
com.swmansion.reanimated.R$id: int special_effects_controller_view_tag
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$attr: int fontProviderFetchTimeout
com.horcrux.svg.R$attr: int displayOptions
com.stripe.android.model.PaymentMethod$Netbanking: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int GradientColor_android_endX
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$CanceledSpec: com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$CanceledSpec INSTANCE
com.horcrux.svg.R$dimen: int notification_main_column_padding_top
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.swmansion.reanimated.R$style: int AlertDialog_AppCompat
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.horcrux.svg.R$animator: int fragment_close_enter
com.swmansion.reanimated.R$styleable: int[] ActionBar
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.airbnb.mvrx.Async linkPaymentAccount
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList key_
com.stripe.android.stripe3ds2.transactions.ErrorData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager mReanimatedNativeHierarchyManager
com.horcrux.svg.R$styleable: int DrawerArrowToggle_spinBars
com.horcrux.svg.R$id: int accessibility_custom_action_1
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_dither
com.swmansion.reanimated.R$attr: int windowActionBar
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Spinner
com.swmansion.reanimated.R$attr: int alertDialogCenterButtons
com.horcrux.svg.R$id: int wrap_content
com.horcrux.svg.R$attr: int actionOverflowMenuStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.horcrux.svg.R$attr: int roundingBorderPadding
com.stripe.android.model.SourceOrder: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_selectableItemBackground
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.R$dimen: int abc_text_size_menu_material
com.horcrux.svg.R$attr: int arrowShaftLength
com.horcrux.svg.R$attr: int autoSizeTextType
com.swmansion.reanimated.R$styleable: int ViewBackgroundHelper_backgroundTint
com.google.crypto.tink.proto.AesCtrParams: int IV_SIZE_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.horcrux.svg.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.swmansion.reanimated.R$style: int Theme_ReactNative_AppCompat_Light
com.swmansion.reanimated.R$styleable: int SearchView_android_maxWidth
com.google.crypto.tink.proto.KeyTypeEntry: int TYPE_URL_FIELD_NUMBER
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: kotlin.Lazy $cachedSerializer$delegate
com.google.crypto.tink.proto.HmacParams: int hash_
com.stripe.android.financialconnections.model.CashBalance: com.stripe.android.financialconnections.model.CashBalance$Companion Companion
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.swmansion.reanimated.R$id: int fitBottomStart
com.swmansion.reanimated.R$attr: int seekBarStyle
com.swmansion.reanimated.R$id: int edit_query
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.swmansion.reanimated.R$id: int transition_transform
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.swmansion.reanimated.R$color: int bright_foreground_inverse_material_light
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int accessibility_custom_action_3
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_actualImageUri
com.swmansion.reanimated.R$color: int bright_foreground_material_light
com.swmansion.reanimated.R$attr: int windowFixedWidthMinor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions ACCOUNT_NUMBERS
com.swmansion.reanimated.R$color: int background_material_light
com.stripe.android.stripe3ds2.transaction.ChallengeAction$Cancel: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int Spinner_android_prompt
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.horcrux.svg.R$color: int abc_tint_spinner
com.horcrux.svg.R$styleable: int MenuItem_android_id
com.horcrux.svg.R$style: int Theme_AppCompat_Empty
com.horcrux.svg.R$styleable: int[] ActionMenuView
com.swmansion.reanimated.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.horcrux.svg.R$layout: int notification_action_tombstone
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.swmansion.reanimated.R$string: int catalyst_settings
com.swmansion.reanimated.R$styleable: int SearchView_android_textAppearance
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: java.lang.String value
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type[] $VALUES
com.horcrux.svg.VirtualViewManager: java.lang.String mClassName
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$styleable: int AppCompatImageView_tintMode
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_placeholderImage
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
com.stripe.android.model.wallets.Wallet$MasterpassWallet: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int action_mode_bar
com.horcrux.svg.R$attr: int actionBarSplitStyle
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: java.lang.String mEventName
com.swmansion.reanimated.R$dimen: int abc_text_size_subtitle_material_toolbar
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_Y
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
com.swmansion.reanimated.R$id: int off
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvCTM
com.horcrux.svg.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$Result$Completed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.horcrux.svg.R$id: int action_bar_root
com.horcrux.svg.R$attr: int listPreferredItemHeightLarge
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product DASHBOARD
com.horcrux.svg.R$attr: int actionModeShareDrawable
com.swmansion.reanimated.CopiedEvent: int targetTag
com.horcrux.svg.R$id: int rn_redbox_dismiss_button
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.horcrux.svg.R$dimen: int disabled_alpha_material_light
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display3
com.swmansion.reanimated.R$dimen: int abc_edit_text_inset_horizontal_material
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.ComponentFactory mComponentFactory
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mRemovedSharedViews
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageScaleType
com.swmansion.reanimated.R$string: int combobox_description
com.stripe.android.model.SetupIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int colorControlActivated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane CONSENT
com.swmansion.reanimated.R$attr: int panelMenuListTheme
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.horcrux.svg.R$string: int catalyst_sample_profiler_disable
com.horcrux.svg.R$drawable: int abc_list_selector_holo_dark
com.swmansion.reanimated.R$styleable: int ActionMenuItemView_android_minWidth
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Borderless
com.swmansion.reanimated.R$styleable: int MenuView_subMenuArrow
com.horcrux.svg.R$styleable: int AppCompatTheme_dividerHorizontal
com.swmansion.reanimated.R$attr: int drawerArrowStyle
com.horcrux.svg.R$integer: int abc_config_activityShortDur
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean firstInit
com.facebook.react.fabric.LongStreamingStats: double streamingAverage
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopLeft
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.reactnativepagerview.PagerViewViewManager: java.lang.String COMMAND_SET_PAGE
com.swmansion.reanimated.R$dimen: int abc_edit_text_inset_bottom_material
com.swmansion.reanimated.R$styleable: int SearchView_voiceIcon
com.swmansion.reanimated.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.swmansion.reanimated.R$drawable: int notification_bg
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.swmansion.reanimated.R$dimen: int abc_list_item_padding_horizontal_material
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory CREDIT_CARD
com.swmansion.reanimated.R$color: int dim_foreground_material_light
com.horcrux.svg.VirtualView: android.graphics.Region mMarkerRegion
com.stripe.android.model.StripeIntent$NextActionData$BlikAuthorize: android.os.Parcelable$Creator CREATOR
com.stripe.android.model.ListPaymentMethodsParams: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int catalyst_copy_button
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListView_Menu
com.swmansion.reanimated.R$attr: int actionDropDownStyle
com.horcrux.svg.R$styleable: int AppCompatTheme_popupWindowStyle
com.horcrux.svg.R$styleable: int SimpleDraweeView_retryImageScaleType
com.horcrux.svg.R$styleable: int MenuItem_contentDescription
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dialogTheme
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mRootViewAttached
com.swmansion.reanimated.R$dimen: int tooltip_corner_radius
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.RenderableView: java.util.ArrayList mLastMergedList
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonStyleSmall
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarSize
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.stripe.android.financialconnections.model.FinancialConnectionsSession: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Companion Companion
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.horcrux.svg.R$anim: int abc_tooltip_enter
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorControlActivated
com.horcrux.svg.R$string: int state_mixed_description
com.horcrux.svg.R$styleable: int[] TextAppearance
com.swmansion.reanimated.R$id: int action_image
com.stripe.android.model.ConsumerPaymentDetails$BankAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_INSERT
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionChip
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.stripe.android.paymentsheet.model.SavedSelection$GooglePay: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus$Companion Companion
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: com.facebook.react.bridge.ReadableArray mCommandArgs
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
com.horcrux.svg.R$id: int none
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGDefs
com.horcrux.svg.R$dimen: int abc_action_bar_default_height_material
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
com.swmansion.reanimated.R$style: int Widget_Compat_NotificationActionContainer
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Medium
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer accountError
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE_DELETE_TREE
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
com.horcrux.svg.R$styleable: int MenuItem_iconTintMode
com.horcrux.svg.R$drawable: int btn_radio_on_mtrl
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.horcrux.svg.R$style: int Platform_AppCompat_Light
com.horcrux.svg.R$dimen: int abc_alert_dialog_button_dimen
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.stripe.android.financialconnections.model.FinancialConnectionsAccountList: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.swmansion.reanimated.R$styleable: int MenuItem_actionLayout
com.swmansion.reanimated.R$attr: int viewInflaterClass
com.swmansion.reanimated.R$id: int accessibility_links
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.horcrux.svg.R$id: int rn_redbox_stack
com.horcrux.svg.R$drawable: int abc_seekbar_thumb_material
com.swmansion.reanimated.R$id: int checked
com.horcrux.svg.R$id: int search_badge
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorError
com.horcrux.svg.R$id: int async
com.swmansion.reanimated.R$styleable: int[] AnimatedStateListDrawableCompat
com.stripe.android.googlepaylauncher.GooglePayLauncher$Result$Failed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundAsCircle
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrKey aesCtrKey_
com.horcrux.svg.R$id: int accessibility_custom_action_8
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int AppCompatTheme_android_windowIsFloating
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.reactnativestripesdk.StripeSdkModule: java.lang.String urlScheme
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.PaymentSheetFragment paymentSheetFragment
com.stripe.android.cards.Bin: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int alertDialogStyle
com.horcrux.svg.R$styleable: int MenuItem_android_checkable
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.stripe.android.model.PaymentMethod$Sofort: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int androidx_core_secondary_text_default_material_light
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Subhead
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextColor
com.horcrux.svg.R$style: int Widget_Autofill
com.horcrux.svg.R$styleable: int AppCompatImageView_android_src
com.stripe.android.financialconnections.model.Cta: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int bright_foreground_inverse_material_dark
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.swmansion.reanimated.R$attr: int defaultQueryHint
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PADDING
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes[] $VALUES
com.swmansion.reanimated.R$dimen: int abc_seekbar_track_progress_height_material
com.swmansion.reanimated.R$styleable: int MenuGroup_android_menuCategory
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
com.google.android.gms.wallet.wobs.LabelValue: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCmacKey: int PARAMS_FIELD_NUMBER
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetRight
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane$Companion Companion
com.horcrux.svg.R$styleable: int AppCompatTheme_spinnerStyle
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.swmansion.reanimated.R$drawable: int abc_ic_search_api_material
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButtonShape: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] AnimatedStateListDrawableItem
com.horcrux.svg.R$dimen: int abc_dialog_fixed_width_minor
com.swmansion.reanimated.R$styleable: int AppCompatTheme_panelBackground
com.horcrux.svg.R$id: int textSpacerNoButtons
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int keySize_
com.horcrux.svg.R$dimen: int tooltip_y_offset_touch
com.swmansion.reanimated.R$styleable: int Toolbar_logoDescription
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.horcrux.svg.R$drawable: int notification_template_icon_bg
com.horcrux.svg.R$attr: int controlBackground
com.horcrux.svg.R$styleable: int MenuItem_android_enabled
com.horcrux.svg.R$styleable: int ActivityChooserView_initialActivityCount
com.swmansion.reanimated.R$attr: int closeItemLayout
com.swmansion.reanimated.R$attr: int queryPatterns
com.horcrux.svg.R$dimen: int notification_right_icon_size
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.PaymentLauncherFragment paymentLauncherFragment
com.horcrux.svg.VirtualView: int CLIP_RULE_EVENODD
com.stripe.android.stripe3ds2.transaction.ChallengeResult$RuntimeError: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int italic
com.swmansion.reanimated.R$styleable: int AppCompatTheme_popupWindowStyle
com.horcrux.svg.R$attr: int menu
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingLayoutStats
com.stripe.android.paymentsheet.addresselement.AddressDetails: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_action_bar_content_inset_material
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
com.horcrux.svg.R$attr: int spinnerDropDownItemStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat DEFAULT_INSTANCE
com.horcrux.svg.R$styleable: int Toolbar_subtitle
com.horcrux.svg.R$attr: int alphabeticModifiers
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.CustomerSheetFragment customerSheetFragment
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.stripe.android.financialconnections.model.AddNewAccount: com.stripe.android.financialconnections.model.AddNewAccount$Companion Companion
com.swmansion.reanimated.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$drawable: int abc_star_black_48dp
com.horcrux.svg.VirtualView: android.graphics.RectF mMarkerBounds
com.swmansion.reanimated.R$id: int radio
com.horcrux.svg.R$dimen: int abc_star_big
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.reactnativestripesdk.StripeSdkModule: int eventListenerCount
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_text_size_body_1_material
com.swmansion.reanimated.R$color: int secondary_text_default_material_light
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingStart
com.horcrux.svg.R$attr: int expandActivityOverflowButtonDrawable
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_progressBarImage
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Widget_AppCompat_ButtonBar
com.horcrux.svg.R$styleable: int SearchView_android_inputType
com.horcrux.svg.R$attr: int trackTint
com.horcrux.svg.R$color: int abc_background_cache_hint_selector_material_light
com.horcrux.svg.R$styleable: int[] GradientColorItem
com.google.crypto.tink.proto.EncryptedKeyset: int KEYSET_INFO_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int SearchView_iconifiedByDefault
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.swmansion.reanimated.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.stripe.android.stripe3ds2.transaction.ChallengeResult$ProtocolError: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.horcrux.svg.R$dimen: int notification_media_narrow_margin
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double lastRead
com.horcrux.svg.R$id: int add
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.google.android.gms.wallet.CardRequirements: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Animation_AppCompat_DropDownUp
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_USE_ANGLE
com.horcrux.svg.R$attr: int multiChoiceItemLayout
com.swmansion.reanimated.R$string: int abc_prepend_shortcut_label
com.stripe.android.model.PaymentMethod$BillingDetails: android.os.Parcelable$Creator CREATOR
com.stripe.android.paymentsheet.model.PaymentSelection$New$GenericPaymentMethod: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.zzaj: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int list_item
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableTop
com.swmansion.reanimated.R$attr: int showTitle
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] $VALUES
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.stripe.android.model.DeferredIntentParams: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int background_floating_material_dark
com.google.crypto.tink.proto.AesCmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.stripe.android.financialconnections.model.FinancialConnectionsAccountList: com.stripe.android.financialconnections.model.FinancialConnectionsAccountList$Companion Companion
com.google.android.gms.internal.wallet.zzi: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int roundingBorderWidth
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowDy
com.swmansion.reanimated.R$drawable: int tooltip_frame_dark
com.swmansion.reanimated.R$attr: int fontWeight
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState UNKNOWN
com.stripe.android.model.Stripe3ds2AuthParams: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.horcrux.svg.R$attr: int actionViewClass
com.horcrux.svg.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.horcrux.svg.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.stripe.android.financialconnections.model.BalanceRefresh: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int catalyst_debug_stop
com.google.crypto.tink.proto.AesCtrKey: int version_
com.horcrux.svg.RenderableViewManager$RadialGradientManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$color: int bright_foreground_disabled_material_dark
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionMode
com.swmansion.reanimated.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.swmansion.reanimated.R$styleable: int[] AppCompatTextHelper
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.oblador.vectoricons.VectorIconsModule: java.util.Map sTypefaceCache
com.horcrux.svg.R$id: int notification_background
com.swmansion.reanimated.R$styleable: int[] ActionMode
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionParent
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
com.swmansion.reanimated.R$id: int up
com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration$FieldConfiguration: android.os.Parcelable$Creator CREATOR
com.stripe.android.PaymentRelayStarter$Args$SourceArgs: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.horcrux.svg.R$styleable: int Toolbar_collapseIcon
com.horcrux.svg.R$styleable: int Toolbar_buttonGravity
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlNormal
com.swmansion.reanimated.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableRightCompat
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.swmansion.reanimated.R$id: int fragment_container_view_tag
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.horcrux.svg.R$attr: int backgroundTintMode
com.swmansion.reanimated.R$dimen: int abc_text_size_title_material_toolbar
com.swmansion.reanimated.R$integer: int cancel_button_image_alpha
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory OTHER
com.swmansion.reanimated.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Large
com.stripe.android.paymentsheet.paymentdatacollection.ach.USBankAccountFormScreenState$BillingDetailsCollection: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$animator: int fragment_open_exit
com.swmansion.reanimated.R$styleable: int GradientColor_android_startX
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_X
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display3
com.swmansion.reanimated.R$style: int Base_V28_Theme_AppCompat
com.horcrux.svg.R$attr: int iconTint
com.google.crypto.tink.proto.KeyTypeEntry: int KEY_MANAGER_VERSION_FIELD_NUMBER
com.facebook.react.config.ReactFeatureFlags: boolean useOverflowInset
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.swmansion.reanimated.R$attr: int progressBarAutoRotateInterval
com.swmansion.reanimated.R$dimen: int compat_control_corner_material
com.swmansion.reanimated.NodesManager$4: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.stripe.android.model.Stripe3ds2AuthResult: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SearchView_closeIcon
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.KeyTypeEntry: int CATALOGUE_NAME_FIELD_NUMBER
com.swmansion.reanimated.R$id: int rn_redbox_loading_indicator
com.swmansion.reanimated.R$id: int select_dialog_listview
com.swmansion.reanimated.R$attr: int actionModeCloseButtonStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.swmansion.reanimated.layoutReanimation.Snapshot: int originYByParent
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.proto.AesCtrParams DEFAULT_INSTANCE
com.horcrux.svg.R$styleable: int Toolbar_contentInsetStart
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithProgress
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
com.google.crypto.tink.proto.KmsAeadKey: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTintMode
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupWindow
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.stripe.android.financialconnections.model.BankAccount: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int editTextBackground
com.horcrux.svg.R$string: int abc_toolbar_collapse_description
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.horcrux.svg.R$color: int switch_thumb_normal_material_light
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Caption
com.swmansion.reanimated.R$id: int action_bar_root
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.swmansion.reanimated.R$dimen: int abc_button_padding_vertical_material
com.swmansion.reanimated.R$id: int tag_accessibility_actions
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.google.android.gms.wallet.wobs.CommonWalletObject: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SearchView
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.horcrux.svg.R$layout: int notification_template_part_time
com.swmansion.reanimated.R$dimen: int tooltip_y_offset_non_touch
com.swmansion.reanimated.R$dimen: int tooltip_vertical_padding
com.swmansion.reanimated.R$style: int Animation_Catalyst_LogBox
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.reactnativecommunity.checkbox.ReactCheckBoxManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderCerts
com.google.crypto.tink.proto.Keyset: int PRIMARY_KEY_ID_FIELD_NUMBER
com.horcrux.svg.R$styleable: int Toolbar_logoDescription
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.stripe.android.ui.core.elements.MandateTextSpec: com.stripe.android.ui.core.elements.MandateTextSpec$Companion Companion
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.ViewGroup parent
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.horcrux.svg.R$dimen: int compat_control_corner_material
com.facebook.react.animated.EventAnimationDriver: int mViewTag
com.horcrux.svg.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.swmansion.reanimated.R$style: int Base_AlertDialog_AppCompat_Light
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization: android.os.Parcelable$Creator CREATOR
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_START_POINT
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.stripe.android.ui.core.elements.DropdownItemSpec: com.stripe.android.ui.core.elements.DropdownItemSpec$Companion Companion
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionMenuTextColor
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.swmansion.reanimated.R$layout: int notification_template_part_time
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.proto.AesSivKeyFormat DEFAULT_INSTANCE
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int accessibility_custom_action_24
com.horcrux.svg.R$attr: int actionBarItemBackground
com.swmansion.reanimated.R$color: int switch_thumb_material_dark
com.swmansion.reanimated.R$string: int link_description
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.horcrux.svg.R$attr: int contentInsetStartWithNavigation
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Companion Companion
com.stripe.android.paymentsheet.state.GooglePayState$NotAvailable: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int notification_right_side_padding_top
com.swmansion.reanimated.R$styleable: int ActionBar_elevation
com.horcrux.svg.R$id: int fitStart
com.horcrux.svg.R$attr: int maxButtonHeight
com.swmansion.reanimated.R$color: int material_grey_900
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.swmansion.reanimated.R$style: int AlertDialog_AppCompat_Light
com.swmansion.reanimated.R$string: int catalyst_reload_button
com.swmansion.reanimated.R$styleable: int[] ViewBackgroundHelper
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow TRUELAYER_OAUTH_HANDOFF
com.swmansion.reanimated.R$animator: int fragment_fade_enter
kotlinx.serialization.json.JsonArray: kotlinx.serialization.json.JsonArray$Companion Companion
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.google.crypto.tink.proto.AesSivKeyFormat: int version_
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane INSTITUTION_PICKER
com.horcrux.svg.R$attr: int listChoiceBackgroundIndicator
com.horcrux.svg.R$color: int primary_text_disabled_material_light
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product PAYMENT_FLOWS
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior SILENT_SUCCESS
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.horcrux.svg.R$styleable: int AlertDialog_buttonIconDimen
com.horcrux.svg.R$dimen: int abc_text_size_large_material
com.swmansion.reanimated.R$layout: int abc_list_menu_item_checkbox
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.horcrux.svg.R$styleable: int Fragment_android_tag
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KeyTemplate dekTemplate_
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$attr: int radioButtonStyle
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: java.lang.String value
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.stripe.android.paymentsheet.PaymentSheet$BillingDetails: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_list_divider_mtrl_alpha
com.swmansion.reanimated.R$attr: int actionBarTheme
com.swmansion.reanimated.R$drawable: int abc_list_selector_disabled_holo_dark
com.swmansion.reanimated.R$dimen: int hint_pressed_alpha_material_light
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status CANCELED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableItem
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGRect
com.swmansion.reanimated.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.stripe.android.financialconnections.model.TextUpdate: com.stripe.android.financialconnections.model.TextUpdate$Companion Companion
com.horcrux.svg.R$attr: int actualImageScaleType
com.horcrux.svg.R$animator: int fragment_fade_exit
com.horcrux.svg.R$attr: int colorSwitchThumbNormal
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int autoSizePresetSizes
com.swmansion.reanimated.R$id: int transition_position
com.facebook.react.bridge.Inspector$Page: int mId
com.horcrux.svg.R$string: int catalyst_heap_capture
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.airbnb.mvrx.Async selectNetworkedAccountAsync
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.swmansion.reanimated.R$attr: int buttonCompat
com.swmansion.reanimated.R$attr: int checkboxStyle
com.swmansion.reanimated.R$style: int Theme_FullScreenDialogAnimatedFade
com.google.android.gms.wallet.PaymentData: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button
com.swmansion.reanimated.R$style: int SpinnerDatePickerDialog
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int mNumRetries
com.reactcommunity.rndatetimepicker.DatePickerModule: java.lang.String NAME
com.stripe.android.paymentsheet.PaymentSheet$Colors: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async resendOtp
com.swmansion.reanimated.R$dimen: int abc_dialog_min_width_major
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.horcrux.svg.R$color: int primary_dark_material_light
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableStart
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Headline
com.swmansion.reanimated.R$styleable: int GradientColor_android_centerColor
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mEventType
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.horcrux.svg.R$attr: int titleTextColor
com.horcrux.svg.R$string: int catalyst_change_bundle_location
com.stripe.android.model.StripeIntent$NextActionData$VerifyWithMicrodeposits: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] Capability
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status UNKNOWN
com.horcrux.svg.R$drawable: int notification_bg_low
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int SearchView_headerLayout
com.horcrux.svg.R$styleable: int SearchView_searchHintIcon
com.google.crypto.tink.proto.HmacParams: int HASH_FIELD_NUMBER
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacParams params_
com.horcrux.svg.RenderableView: float strokeDashoffset
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean mInitialized
com.swmansion.reanimated.R$attr: int toolbarNavigationButtonStyle
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int contentInsetStart
com.horcrux.svg.R$attr: int buttonStyle
com.stripe.android.ui.core.elements.AffirmTextSpec: com.stripe.android.ui.core.elements.AffirmTextSpec$Companion Companion
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.horcrux.svg.R$string: int catalyst_perf_monitor
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.horcrux.svg.R$style: int CalendarDatePickerStyle
com.swmansion.reanimated.R$attr: int textAppearanceListItemSmall
com.swmansion.reanimated.R$layout: int abc_list_menu_item_layout
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.swmansion.reanimated.R$attr: int actionModeWebSearchDrawable
com.horcrux.svg.R$string: int abc_menu_ctrl_shortcut_label
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.swmansion.reanimated.R$dimen: int hint_pressed_alpha_material_dark
com.swmansion.reanimated.R$anim: int catalyst_push_up_out
com.horcrux.svg.R$style: int Base_V26_Theme_AppCompat_Light
com.swmansion.reanimated.R$styleable: int AppCompatTheme_panelMenuListWidth
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.horcrux.svg.R$id: int action_container
com.horcrux.svg.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.swmansion.reanimated.R$string: int catalyst_heap_capture
com.horcrux.svg.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.swmansion.reanimated.R$dimen: int abc_dialog_min_width_minor
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_COLORS
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.swmansion.reanimated.R$string: int abc_activity_chooser_view_see_all
com.swmansion.reanimated.R$string: int image_description
com.swmansion.reanimated.R$layout: int redbox_item_title
com.horcrux.svg.R$color: int abc_primary_text_disable_only_material_dark
com.swmansion.reanimated.R$attr: int drawableEndCompat
com.swmansion.reanimated.R$styleable: int RecycleListView_paddingTopNoTitle
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.horcrux.svg.R$id: int accessibility_custom_action_7
com.swmansion.reanimated.R$styleable: int ButtonBarLayout_allowStacking
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TRANSFORM_MATRIX
com.horcrux.svg.R$styleable: int CheckedTextView_checkMarkTintMode
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int mModuleId
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.horcrux.svg.R$color: int abc_search_url_text_selected
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.proto.KeysetInfo$KeyInfo DEFAULT_INSTANCE
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageUri
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.rnmaps.maps.MapModule: java.lang.String SNAPSHOT_RESULT_FILE
com.swmansion.reanimated.R$color: int catalyst_logbox_background
com.google.android.gms.maps.model.Tile: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int FontFamilyFont_font
com.horcrux.svg.R$styleable: int SearchView_searchIcon
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod UNKNOWN
com.swmansion.reanimated.R$attr: int roundBottomLeft
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener reanimatedKeyboardEventListener
com.swmansion.reanimated.R$color: int background_floating_material_light
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Caption
com.swmansion.reanimated.R$styleable: int RecycleListView_paddingBottomNoButtons
com.horcrux.svg.R$color: int material_blue_grey_950
com.swmansion.reanimated.R$styleable: int FontFamilyFont_ttcIndex
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.reactnativecommunity.picker.ReactPickerManager: com.facebook.react.bridge.ReadableArray EMPTY_ARRAY
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableCompat
com.swmansion.reanimated.R$dimen: int compat_button_inset_horizontal_material
com.horcrux.svg.R$styleable: int ButtonBarLayout_allowStacking
com.swmansion.reanimated.R$styleable: int AppCompatTheme_radioButtonStyle
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState OPEN
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.swmansion.reanimated.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.horcrux.svg.R$id: int alertTitle
com.facebook.react.fabric.LongStreamingStats: java.util.Queue maxHeap
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButtonTypography: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Widget_AppCompat_SeekBar_Discrete
com.horcrux.svg.R$color: int abc_hint_foreground_material_light
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.horcrux.svg.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.swmansion.reanimated.R$attr: int titleTextColor
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.swmansion.reanimated.R$style: int Widget_AppCompat_ImageButton
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.horcrux.svg.R$id: int spacer
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_backgroundImage
com.swmansion.reanimated.R$id: int view_tree_saved_state_registry_owner
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityResult$Failed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_failureImage
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.horcrux.svg.R$style: int Base_V26_Theme_AppCompat
com.horcrux.svg.VirtualView: android.graphics.RectF mClipBounds
com.horcrux.svg.R$styleable: int ActionBar_popupTheme
com.swmansion.reanimated.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.swmansion.reanimated.R$drawable: int abc_text_select_handle_left_mtrl
com.swmansion.reanimated.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.horcrux.svg.R$styleable: int StateListDrawableItem_android_drawable
com.stripe.android.payments.paymentlauncher.PaymentResult$Canceled: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_custom_action_1
com.horcrux.svg.R$color: int abc_background_cache_hint_selector_material_dark
com.horcrux.svg.R$id: int rn_redbox_reload_button
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_width_minor
com.swmansion.reanimated.R$id: int search_voice_btn
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
com.stripe.android.link.LinkActivityResult$Canceled: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Title
com.swmansion.reanimated.R$styleable: int[] FontFamilyFont
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.google.android.gms.wallet.PaymentMethodToken: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_action_button_min_width_overflow_material
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomRight
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.swmansion.reanimated.R$dimen: int abc_switch_padding
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
com.horcrux.svg.R$attr: int listDividerAlertDialog
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Menu
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.stripe.android.googlepaylauncher.GooglePayLauncher$Config: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.swmansion.reanimated.R$attr: int actionBarDivider
com.horcrux.svg.R$styleable: int TextAppearance_android_textFontWeight
com.swmansion.reanimated.R$color: int abc_primary_text_disable_only_material_light
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGText
com.horcrux.svg.R$id: int view_tree_view_model_store_owner
com.stripe.android.model.Stripe3ds2Fingerprint: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.KeysetInfo: int primaryKeyId_
com.horcrux.svg.R$attr: int fontStyle
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_font
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
com.swmansion.reanimated.AndroidUIScheduler: java.lang.Runnable mUIThreadRunnable
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow FINICITY_CONNECT_V2_OAUTH
com.horcrux.svg.R$styleable: int SearchView_suggestionRowLayout
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderPadding
com.swmansion.reanimated.R$string: int abc_search_hint
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int mSurfaceId
com.horcrux.svg.R$id: int accessibility_custom_action_30
com.swmansion.reanimated.R$styleable: int SearchView_android_imeOptions
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory SAVINGS
com.swmansion.reanimated.R$drawable: int abc_ratingbar_small_material
kotlin.coroutines.SafeContinuation: java.lang.Object result
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod LINK
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
com.horcrux.svg.R$drawable: int notification_bg_normal
com.stripe.android.model.ConsumerSessionLookup: com.stripe.android.model.ConsumerSessionLookup$Companion Companion
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display2
com.horcrux.svg.R$styleable: int MenuView_android_verticalDivider
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Display2
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] orientation
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.airbnb.mvrx.Async confirmVerification
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
com.swmansion.reanimated.R$attr: int multiChoiceItemLayout
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior USER_ERROR
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.CollectBankAccountLauncherFragment collectBankAccountLauncherFragment
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect viewEffect
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionSubtitle
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.swmansion.reanimated.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.horcrux.svg.R$styleable: int FontFamilyFont_fontWeight
com.stripe.android.financialconnections.model.Balance: com.stripe.android.financialconnections.model.Balance$Companion Companion
com.horcrux.svg.R$styleable: int AlertDialog_multiChoiceItemLayout
com.horcrux.svg.R$color: int material_blue_grey_900
com.stripe.android.financialconnections.model.ManualEntryMode: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.swmansion.reanimated.R$styleable: int FontFamilyFont_fontWeight
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.Long firstUptime
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType UNKNOWN
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.stripe.android.core.AppInfo: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListMenuView
com.swmansion.reanimated.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.swmansion.reanimated.R$styleable: int ActionBar_progressBarStyle
com.swmansion.reanimated.R$attr: int icon
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginTop
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvMatrix
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mCallbacks
com.swmansion.reanimated.R$dimen: int abc_dialog_list_padding_top_no_title
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.horcrux.svg.R$color: int abc_secondary_text_material_light
com.horcrux.svg.R$id: int activity_chooser_view_content
com.horcrux.svg.R$styleable: int MenuItem_actionLayout
com.horcrux.svg.R$drawable: int abc_ic_ab_back_material
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification
com.horcrux.svg.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dialog
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.google.crypto.tink.proto.Keyset: int primaryKeyId_
com.horcrux.svg.R$styleable: int MenuItem_tooltipText
com.horcrux.svg.VirtualView: android.graphics.Path mClipRegionPath
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionTitle
com.stripe.android.core.model.Country: com.stripe.android.core.model.Country$Companion Companion
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.horcrux.svg.R$styleable: int View_android_focusable
com.google.crypto.tink.proto.AesEaxParams: int IV_SIZE_FIELD_NUMBER
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeBackground
com.horcrux.svg.R$color: int background_material_dark
com.swmansion.reanimated.R$attr: int thumbTintMode
com.stripe.android.paymentsheet.paymentdatacollection.ach.USBankAccountFormScreenState$VerifyWithMicrodeposits: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.swmansion.reanimated.R$id: int scrollIndicatorUp
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionButton_Overflow
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product CAPITAL_HOSTED
com.stripe.android.model.Stripe3ds2AuthResult$MessageExtension: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int SearchView_android_maxWidth
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
com.horcrux.svg.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.horcrux.svg.R$id: int search_close_btn
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMarkTint
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.airbnb.mvrx.Async authenticationStatus
com.swmansion.reanimated.R$attr: int listChoiceIndicatorSingleAnimated
com.horcrux.svg.R$dimen: int abc_text_size_menu_material
com.swmansion.reanimated.R$drawable: int abc_text_cursor_material
com.horcrux.svg.R$styleable: int AppCompatTheme_actionDropDownStyle
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundAsCircle
com.google.crypto.tink.proto.AesCtrKey: int VERSION_FIELD_NUMBER
kotlinx.coroutines.sync.MutexImpl$LockWaiter: int isTaken
com.dropShadow.DropShadowModule: java.lang.String REACT_CLASS
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$layout: int abc_popup_menu_header_item_layout
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Large_Inverse
com.horcrux.svg.R$styleable: int FragmentContainerView_android_tag
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.StripeSdkModule$Companion Companion
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.swmansion.reanimated.R$attr: int actionBarStyle
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product LCPM
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int HMAC_KEY_FIELD_NUMBER
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String typeUrl_
com.swmansion.reanimated.R$id: int accessibility_custom_action_9
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.horcrux.svg.R$styleable: int ActionBar_customNavigationLayout
com.swmansion.reanimated.R$drawable: int abc_cab_background_top_material
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.horcrux.svg.R$color: int material_deep_teal_500
com.horcrux.svg.R$style: int Platform_V21_AppCompat
com.swmansion.reanimated.R$id: int alertTitle
com.horcrux.svg.R$color: int abc_decor_view_status_guard_light
com.swmansion.reanimated.R$string: int catalyst_debug_chrome
com.horcrux.svg.R$dimen: int abc_dropdownitem_icon_width
com.google.android.gms.maps.model.StampStyle: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int color
com.swmansion.reanimated.R$attr: int checkMarkTint
com.swmansion.reanimated.R$anim: int catalyst_fade_in
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async payload
com.swmansion.reanimated.R$string: int catalyst_settings_title
com.horcrux.svg.R$styleable: int FontFamilyFont_android_font
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.swmansion.reanimated.R$id: int forever
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int tooltip_frame_light
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String HEIGHT
com.swmansion.reanimated.R$attr: int roundBottomEnd
com.swmansion.reanimated.R$id: int title_template
com.horcrux.svg.R$drawable: int abc_btn_default_mtrl_shape
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_constantSize
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textFontWeight
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxKey DEFAULT_INSTANCE
com.swmansion.reanimated.R$attr: int preserveIconSpacing
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Large
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.horcrux.svg.R$id: int rn_redbox_line_separator
com.swmansion.reanimated.R$dimen: int abc_alert_dialog_button_dimen
com.horcrux.svg.R$dimen: int compat_button_inset_vertical_material
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.proto.AesGcmKey DEFAULT_INSTANCE
com.horcrux.svg.R$attr: int homeAsUpIndicator
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SearchView
com.horcrux.svg.R$attr: int showTitle
com.horcrux.svg.R$styleable: int SearchView_queryHint
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutDeleteAnimation
com.google.crypto.tink.proto.AesCtrKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.stripe.android.financialconnections.model.DataAccessNoticeBody: com.stripe.android.financialconnections.model.DataAccessNoticeBody$Companion Companion
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.EncryptedKeyset DEFAULT_INSTANCE
com.horcrux.svg.R$styleable: int StateListDrawable_android_enterFadeDuration
com.horcrux.svg.R$attr: int switchMinWidth
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.swmansion.reanimated.R$attr: int titleTextAppearance
com.swmansion.reanimated.R$styleable: int GradientColor_android_centerY
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.horcrux.svg.R$styleable: int AppCompatTheme_windowNoTitle
com.horcrux.svg.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.swmansion.reanimated.R$id: int activity_chooser_view_content
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.stripe.android.model.PaymentMethodCreateParams$CashAppPay: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
com.swmansion.reanimated.R$attr: int roundTopStart
com.horcrux.svg.R$attr: int preserveIconSpacing
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow WELLS_FARGO
com.swmansion.reanimated.R$dimen: int abc_select_dialog_padding_start_material
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.presentation.WebAuthFlowState$Canceled: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int view_tag_native_id
com.swmansion.reanimated.R$attr: int listPreferredItemHeight
com.horcrux.svg.R$styleable: int GradientColor_android_tileMode
com.horcrux.svg.R$styleable: int ActionBar_homeAsUpIndicator
com.swmansion.reanimated.R$dimen: int abc_list_item_height_small_material
com.horcrux.svg.R$attr: int fadeDuration
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions UNKNOWN
com.reactnativestripesdk.StripeSdkModule: com.stripe.android.Stripe stripe
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.horcrux.svg.R$id: int icon
com.google.crypto.tink.proto.AesSivKeyFormat: int keySize_
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState OPENING
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_tickMark
com.swmansion.reanimated.R$attr: int titleMargins
com.horcrux.svg.R$string: int timer_description
com.swmansion.reanimated.R$id: int search_src_text
com.swmansion.reanimated.R$attr: int backgroundTintMode
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.swmansion.reanimated.R$attr: int trackTintMode
com.swmansion.reanimated.R$styleable: int[] MenuGroup
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.airbnb.mvrx.Async linkPaymentAccount
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow FINICITY_CONNECT_V2_LITE
com.swmansion.reanimated.R$style: int Base_AlertDialog_AppCompat
com.rnmaps.maps.MapManager: com.facebook.react.bridge.ReactApplicationContext appContext
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int outputPrefixType_
com.swmansion.reanimated.R$attr: int colorSwitchThumbNormal
com.horcrux.svg.R$string: int catalyst_sample_profiler_enable
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundedCornerRadius
com.stripe.android.model.BankAccount: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.horcrux.svg.R$id: int autofill_inline_suggestion_end_icon
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$BillingAddressConfig: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int switch_thumb_disabled_material_dark
com.horcrux.svg.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.swmansion.reanimated.R$attr: int trackTint
com.horcrux.svg.R$drawable: int abc_cab_background_top_mtrl_alpha
com.horcrux.svg.R$style: int Widget_AppCompat_DrawerArrowToggle
com.swmansion.reanimated.R$dimen: int abc_action_bar_stacked_max_height
com.swmansion.reanimated.R$color: int bright_foreground_disabled_material_light
com.horcrux.svg.R$drawable: int notification_tile_bg
com.swmansion.reanimated.R$string: int catalyst_sample_profiler_disable
com.horcrux.svg.R$styleable: int[] StateListDrawableItem
com.stripe.android.ui.core.elements.BlikSpec: com.stripe.android.ui.core.elements.BlikSpec$Companion Companion
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderAuthority
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback mRemoveDeleteTreeUIFrameCallback
com.swmansion.reanimated.R$style: int Theme
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map val$reactModuleInfoMap
com.google.crypto.tink.proto.KeyData: java.lang.String typeUrl_
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.horcrux.svg.R$styleable: int[] ListPopupWindow
com.swmansion.reanimated.R$id: int textSpacerNoTitle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Small
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_Borderless
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
com.stripe.android.model.SourceOrderParams: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.ConsentPane: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int fitEnd
com.horcrux.svg.R$string: int state_expanded_description
com.swmansion.reanimated.R$layout: int support_simple_spinner_dropdown_item
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$attr: int ratingBarStyleIndicator
com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec: com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec$Companion Companion
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.util.HashMap sensors
com.stripe.android.model.ElementsSession: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int rn_redbox_line_separator
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.swmansion.reanimated.R$drawable: int abc_list_longpressed_holo
com.swmansion.reanimated.R$id: int search_bar
com.horcrux.svg.R$attr: int buttonStyleSmall
com.swmansion.reanimated.R$attr: int displayOptions
com.horcrux.svg.R$dimen: int abc_search_view_preferred_width
com.swmansion.reanimated.R$styleable: int MenuItem_android_checked
com.horcrux.svg.R$drawable: int abc_list_selector_disabled_holo_dark
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int mReactTag
com.horcrux.svg.R$attr: int arrowHeadLength
com.horcrux.svg.R$color: int notification_icon_bg_color
com.horcrux.svg.R$styleable: int SwitchCompat_showText
com.horcrux.svg.R$color: int switch_thumb_normal_material_dark
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Menu
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.swmansion.reanimated.R$color: int abc_search_url_text_normal
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
com.horcrux.svg.R$dimen: int abc_cascading_menus_min_smallest_width
com.reactnativepagerview.PagerViewViewManager: java.lang.String COMMAND_SET_PAGE_WITHOUT_ANIMATION
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.AwaitAll: int notCompletedCount
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionStartIconStyle
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowColor
com.swmansion.reanimated.R$color: int notification_action_color_filter
com.horcrux.svg.R$animator: int fragment_open_enter
com.swmansion.reanimated.R$styleable: int Capability_shortcutMatchRequired
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status DISCONNECTED
com.horcrux.svg.R$id: int accessibility_custom_action_17
com.swmansion.reanimated.R$id: int none
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.horcrux.svg.R$attr: int titleMarginEnd
com.facebook.react.views.view.ReactViewGroup: android.graphics.Path mPath
com.horcrux.svg.R$id: int select_dialog_listview
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mViewTagsToHide
com.facebook.react.fabric.mounting.MountItemDispatcher: long mRunStartTime
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.horcrux.svg.R$styleable: int ViewStubCompat_android_layout
com.horcrux.svg.R$dimen: int notification_content_margin_start
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_spinBars
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGClipPath
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.Object mCurrentProps
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.horcrux.svg.R$styleable: int SimpleDraweeView_fadeDuration
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKeyFormat params_
com.horcrux.svg.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.horcrux.svg.R$styleable: int[] SwitchCompat
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.horcrux.svg.R$id: int fitCenter
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorListener listener
com.horcrux.svg.R$styleable: int Spinner_android_dropDownWidth
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.swmansion.reanimated.R$styleable: int[] MenuItem
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGLine
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
com.swmansion.reanimated.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap cleanerCallback
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsTryingToCreate
com.swmansion.reanimated.R$id: int tag_accessibility_heading
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.horcrux.svg.R$anim: int abc_slide_out_bottom
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.stripe.android.stripe3ds2.views.ChallengeViewArgs: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$layout: int autofill_inline_suggestion
com.swmansion.reanimated.R$attr: int progressBarStyle
com.horcrux.svg.R$styleable: int[] AppCompatSeekBar
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.swmansion.reanimated.R$attr: int actionModeFindDrawable
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
com.swmansion.reanimated.R$styleable: int[] PopupWindow
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String accountConfirm
com.horcrux.svg.R$attr: int actionBarSize
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.stripe.android.model.PaymentMethodCreateParams$BacsDebit: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.horcrux.svg.R$attr: int itemPadding
com.google.android.gms.wallet.wobs.LoyaltyPoints: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int highlighted_text_material_light
com.swmansion.reanimated.R$color: int notification_icon_bg_color
com.horcrux.svg.R$style: int Base_AlertDialog_AppCompat_Light
com.swmansion.reanimated.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap mTagToViewState
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane LINK_ACCOUNT_PICKER
com.stripe.android.model.PaymentMethodCreateParams$Netbanking: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_SeekBar
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorType sensorType
com.swmansion.reanimated.R$styleable: int Toolbar_titleMargin
com.horcrux.svg.R$color: int highlighted_text_material_dark
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long mCommitNumber
com.horcrux.svg.R$attr: int dialogCornerRadius
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResultInternal$Cancelled: android.os.Parcelable$Creator CREATOR
com.stripe.android.GooglePayJsonFactory$ShippingAddressParameters: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int divider
com.swmansion.reanimated.R$attr: int editTextStyle
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableRightCompat
com.swmansion.reanimated.R$styleable: int AlertDialog_listLayout
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.stripe.android.model.PaymentMethod$USBankAccount: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int title
com.horcrux.svg.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.horcrux.svg.R$attr: int listPreferredItemHeight
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.swmansion.reanimated.R$attr: int collapseIcon
com.horcrux.svg.R$id: int accessibility_state
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_PopupMenu
com.horcrux.svg.R$attr: int checkboxStyle
com.swmansion.reanimated.R$drawable: int notification_bg_low
com.swmansion.reanimated.R$attr: int textAppearancePopupMenuHeader
com.horcrux.svg.R$drawable: int abc_list_pressed_holo_dark
com.swmansion.reanimated.R$style: int Theme_AppCompat_NoActionBar
com.swmansion.reanimated.R$color: int abc_primary_text_material_light
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.stripe.android.model.Address: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
com.swmansion.reanimated.R$styleable: int ActionBar_indeterminateProgressStyle
com.horcrux.svg.VirtualViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.stripe.android.model.PaymentMethodCreateParams$Sofort: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.ReaCompatibility compatibility
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async selectInstitution
com.stripe.android.customersheet.InternalCustomerSheetResult$Selected: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.proto.KeyTemplate DEFAULT_INSTANCE
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: int mReactTag
com.horcrux.svg.R$layout: int fps_view
com.swmansion.reanimated.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.swmansion.reanimated.R$style: int Theme_AppCompat_Dialog
com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int checkedTextViewStyle
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.horcrux.svg.VirtualView: java.lang.String mDisplay
com.swmansion.reanimated.R$id: int tag_on_receive_content_mime_types
com.horcrux.svg.R$styleable: int ActionMode_background
com.horcrux.svg.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.horcrux.svg.R$attr: int fontProviderCerts
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long mMaxAnimationDuration
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_HIDDEN
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.horcrux.svg.R$attr: int backgroundImage
com.swmansion.reanimated.NodesManager$3: boolean val$trySynchronously
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.horcrux.svg.R$drawable: int abc_btn_colored_material
com.swmansion.reanimated.R$styleable: int Fragment_android_tag
com.swmansion.reanimated.R$attr: int actionModeBackground
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_isAutofillInlineSuggestionTheme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.reactcommunity.rndatetimepicker.TimePickerModule: java.lang.String NAME
com.horcrux.svg.R$dimen: int abc_text_size_menu_header_material
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingTransactionEndStats
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.horcrux.svg.R$layout: int abc_alert_dialog_material
com.horcrux.svg.R$color: int abc_btn_colored_text_material
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane ACCOUNT_PICKER
com.swmansion.reanimated.R$attr: int fadeDuration
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
com.swmansion.reanimated.R$styleable: int AppCompatImageView_tint
com.stripe.android.ui.core.elements.SaveForFutureUseSpec: com.stripe.android.ui.core.elements.SaveForFutureUseSpec$Companion Companion
com.stripe.android.financialconnections.FinancialConnectionsSheetResult$Canceled: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int notification_main_column
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.horcrux.svg.R$styleable: int PopupWindow_android_popupAnimationStyle
com.horcrux.svg.R$style: int Theme_AppCompat_DialogWhenLarge
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat
com.horcrux.svg.R$string: int abc_menu_alt_shortcut_label
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes$Companion Companion
com.horcrux.svg.R$id: int radio
com.horcrux.svg.R$styleable: int GradientColor_android_startX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.horcrux.svg.VirtualView: com.horcrux.svg.GlyphContext glyphContext
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.stripe.android.model.PaymentMethodCreateParams$SepaDebit: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button
com.horcrux.svg.R$styleable: int View_paddingEnd
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowNoTitle
com.horcrux.svg.R$styleable: int Capability_shortcutMatchRequired
com.horcrux.svg.R$string: int progressbar_description
com.swmansion.reanimated.R$color: int abc_decor_view_status_guard_light
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category CREDIT
com.swmansion.reanimated.R$color: int tooltip_background_dark
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mErroneouslyReaddedReactTags
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.horcrux.svg.R$attr: int fontProviderSystemFontFamily
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int catalyst_inspector_stop
com.swmansion.reanimated.R$styleable: int AppCompatTheme_popupMenuStyle
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_PopupMenu
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$id: int checkbox
com.horcrux.svg.R$color: int dim_foreground_disabled_material_dark
com.stripe.android.financialconnections.model.LegalDetailsBody: com.stripe.android.financialconnections.model.LegalDetailsBody$Companion Companion
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState state
com.swmansion.reanimated.R$attr: int contentInsetRight
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.stripe.android.ui.core.elements.StaticTextSpec: com.stripe.android.ui.core.elements.StaticTextSpec$Companion Companion
com.swmansion.reanimated.R$attr: int actionMenuTextAppearance
com.horcrux.svg.R$attr: int actionModeStyle
com.horcrux.svg.R$style: int Widget_AppCompat_PopupWindow
com.swmansion.reanimated.R$attr: int actionModeCutDrawable
com.swmansion.reanimated.R$dimen: int abc_dropdownitem_text_padding_right
com.swmansion.reanimated.R$styleable: int MenuView_preserveIconSpacing
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.swmansion.reanimated.R$id: int parent_matrix
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions OWNERSHIP
com.horcrux.svg.R$styleable: int[] Autofill_InlineSuggestion
com.horcrux.svg.R$color: int primary_dark_material_dark
com.google.android.gms.wallet.zza: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionButton
com.swmansion.reanimated.R$styleable: int[] ButtonBarLayout
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$attr: int paddingStart
com.swmansion.reanimated.R$dimen: int tooltip_horizontal_padding
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.GuardedFrameCallback mChoreographerCallback
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_Dialog
com.swmansion.reanimated.R$attr: int subtitleTextAppearance
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.horcrux.svg.SvgView: float mMinY
com.horcrux.svg.R$drawable: int abc_ic_search_api_material
com.google.crypto.tink.proto.AesSivKey: int version_
com.swmansion.reanimated.R$drawable: int abc_popup_background_mtrl_mult
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_end_icon
com.horcrux.svg.R$attr: int progressBarStyle
androidx.compose.foundation.lazy.layout.DefaultLazyKey: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.proto.AesEaxParams DEFAULT_INSTANCE
com.horcrux.svg.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.stripe.android.paymentsheet.addresselement.AddressLauncher$Configuration: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status PENDING
com.stripe.android.paymentsheet.PaymentSheet$Typography: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.swmansion.reanimated.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.stripe.android.financialconnections.model.OauthPrepane: com.stripe.android.financialconnections.model.OauthPrepane$Companion Companion
com.swmansion.reanimated.R$id: int accessibility_custom_action_6
com.horcrux.svg.R$attr: int closeItemLayout
com.swmansion.reanimated.R$styleable: int ActionBar_titleTextStyle
com.swmansion.reanimated.R$attr: int dropDownListViewStyle
com.horcrux.svg.R$styleable: int Toolbar_menu
com.stripe.android.paymentsheet.addresselement.AddressLauncherResult$Succeeded: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: double M_SQRT1_2l
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.horcrux.svg.R$id: int autofill_inline_suggestion_subtitle
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_android_background
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product BILLPAY
com.horcrux.svg.R$attr: int windowFixedHeightMinor
com.horcrux.svg.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.horcrux.svg.R$string: int abc_capital_on
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.horcrux.svg.R$id: int tabMode
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
com.swmansion.reanimated.R$color: int button_material_light
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean initOk
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.horcrux.svg.R$dimen: int abc_dialog_title_divider_material
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.stripe.android.model.AccountRange: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$layout: int autofill_inline_suggestion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.swmansion.reanimated.AndroidUIScheduler$1: com.swmansion.reanimated.AndroidUIScheduler this$0
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabStyle
com.swmansion.reanimated.R$id: int expanded_menu
com.swmansion.reanimated.R$style: int Widget_AppCompat_ProgressBar
com.swmansion.reanimated.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.google.crypto.tink.proto.KeyData: int KEY_MATERIAL_TYPE_FIELD_NUMBER
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Light
com.swmansion.reanimated.R$attr: int listPreferredItemHeightLarge
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc: java.lang.Object _originalNext
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_HEIGHT
com.horcrux.svg.R$color: int abc_btn_colored_borderless_text_material
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_Dark
com.facebook.react.fabric.FabricUIManager$5: int val$surfaceId
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.stripe.android.paymentsheet.addresselement.AddressElementActivityContract$Args: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.Keyset$Key: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int[] StateListDrawableItem
com.horcrux.svg.R$dimen: int abc_action_button_min_width_material
com.horcrux.svg.R$attr: int splitTrack
com.horcrux.svg.R$styleable: int AppCompatTheme_checkboxStyle
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane RESET
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Caption
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SeekBar
com.swmansion.reanimated.R$attr: int windowMinWidthMajor
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.horcrux.svg.R$string: int catalyst_open_flipper_error
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableItem_android_id
com.swmansion.reanimated.R$attr: int fontStyle
com.google.crypto.tink.proto.AesCtrKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.horcrux.svg.R$drawable: int abc_ratingbar_indicator_material
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.horcrux.svg.R$id: int notification_main_column_container
com.horcrux.svg.R$drawable: int abc_list_selector_holo_light
com.swmansion.reanimated.sensor.ReanimatedSensor: int interval
com.swmansion.reanimated.R$color: int dim_foreground_material_dark
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.Keyset$Key DEFAULT_INSTANCE
com.horcrux.svg.R$style: int Widget_AppCompat_Light_PopupMenu
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_TextView
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionEndIconStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.swmansion.reanimated.R$id: int dialog_button
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
com.swmansion.reanimated.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.horcrux.svg.R$attr: int subtitleTextColor
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect viewEffect
com.horcrux.svg.R$drawable: int notification_icon_background
com.horcrux.svg.R$attr: int showDividers
com.swmansion.reanimated.R$string: int abc_searchview_description_submit
com.horcrux.svg.R$id: int actions
com.stripe.android.financialconnections.model.NetworkingLinkSignupBody: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.TransactionInfo: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.FinancialConnectionsSheetForTokenResult$Failed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int dividerVertical
com.horcrux.svg.R$styleable: int MenuGroup_android_menuCategory
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.Snapshot: float[] identityMatrix
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product STRIPE_CARD
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomEnd
com.swmansion.reanimated.R$attr: int windowFixedWidthMajor
com.horcrux.svg.R$style: int DialogAnimationFade
com.swmansion.reanimated.R$dimen: int abc_list_item_height_material
com.horcrux.svg.RenderableViewManager$ImageViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$id: int action_divider
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.stripe.android.model.ConsumerSessionLookup: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$color: int accent_material_light
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$RedirectNextActionSpec: com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$RedirectNextActionSpec$Companion Companion
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableBottomCompat
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Title
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat DEFAULT_INSTANCE
com.horcrux.svg.R$attr: int ratingBarStyleSmall
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.horcrux.svg.R$id: int accessibility_custom_action_9
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mIntBufferLen
com.swmansion.reanimated.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListView_DropDown
com.swmansion.reanimated.R$style: int Widget_AppCompat_RatingBar
com.stripe.android.ui.core.CardBillingDetailsCollectionConfiguration: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.horcrux.svg.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.horcrux.svg.R$attr: int textAppearanceSmallPopupMenu
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.swmansion.reanimated.R$drawable: int abc_list_selector_holo_light
com.horcrux.svg.R$styleable: int DrawerArrowToggle_thickness
com.swmansion.reanimated.R$attr: int arrowHeadLength
com.swmansion.reanimated.R$id: int src_over
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableLeftCompat
com.horcrux.svg.R$styleable: int CheckedTextView_checkMarkCompat
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.stripe.android.financialconnections.features.success.SuccessState: com.airbnb.mvrx.Async payload
com.swmansion.reanimated.R$dimen: int abc_text_size_button_material
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.swmansion.reanimated.R$attr: int theme
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.swmansion.reanimated.R$string: int abc_menu_enter_shortcut_label
com.swmansion.reanimated.R$layout: int abc_alert_dialog_title_material
com.horcrux.svg.R$styleable: int Toolbar_titleMarginStart
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.rnmaps.maps.MapManager: java.util.Map MAP_TYPES
com.horcrux.svg.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration configuration
com.stripe.android.financialconnections.model.NetworkedAccount: com.stripe.android.financialconnections.model.NetworkedAccount$Companion Companion
com.swmansion.reanimated.R$attr: int hideOnContentScroll
com.swmansion.reanimated.R$styleable: int[] PopupWindowBackgroundState
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow MX_OAUTH
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.horcrux.svg.R$id: int icon_group
com.swmansion.reanimated.R$styleable: int MenuItem_android_checkable
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: kotlin.Lazy $cachedSerializer$delegate
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.proto.KmsAeadKeyFormat DEFAULT_INSTANCE
com.horcrux.svg.R$id: int parentPanel
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Button
com.google.crypto.tink.proto.AesEaxKey: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog
com.swmansion.reanimated.R$id: int accessibility_hint
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status[] $VALUES
com.horcrux.svg.R$styleable: int ActionBar_icon
com.reactnativestripesdk.StripeSdkModule: com.facebook.react.bridge.Promise createPlatformPayPaymentMethodPromise
com.horcrux.svg.R$styleable: int View_paddingStart
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.horcrux.svg.R$style: int Theme_AppCompat_CompactMenu
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$attr: int autoSizeStepGranularity
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy mNativeProxy
com.swmansion.reanimated.R$string: int catalyst_debug_error
com.google.crypto.tink.proto.AesGcmSivKey: int KEY_VALUE_FIELD_NUMBER
com.horcrux.svg.R$styleable: int SwitchCompat_track
com.swmansion.reanimated.R$styleable: int SearchView_autoShowKeyboard
com.swmansion.reanimated.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.horcrux.svg.VirtualView: android.graphics.RectF mStrokeBounds
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListMenuView
com.swmansion.reanimated.R$attr: int switchTextAppearance
com.stripe.android.financialconnections.model.ConsentPane: com.stripe.android.financialconnections.model.ConsentPane$Companion Companion
com.stripe.android.model.wallets.Wallet$VisaCheckoutWallet: android.os.Parcelable$Creator CREATOR
com.stripe.android.model.SourceOrder$Item: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.swmansion.reanimated.R$color: int material_blue_grey_950
com.stripe.android.model.GooglePayResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.rnmaps.maps.MapCircleManager: android.util.DisplayMetrics metrics
com.horcrux.svg.R$attr: int roundBottomRight
com.swmansion.reanimated.R$attr: int failureImage
com.swmansion.reanimated.R$attr: int commitIcon
com.horcrux.svg.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTint
com.horcrux.svg.R$attr: int singleChoiceItemLayout
com.horcrux.svg.R$styleable: int MenuItem_android_menuCategory
com.swmansion.reanimated.R$styleable: int ColorStateListItem_android_lStar
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopLeft
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SeekBar
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.horcrux.svg.R$id: int unchecked
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowRadius
com.horcrux.svg.R$attr: int background
com.horcrux.svg.R$styleable: int SwitchCompat_switchTextAppearance
com.swmansion.reanimated.R$attr: int buttonTintMode
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.reanimated.R$styleable: int TextAppearance_textAllCaps
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.stripe.android.financialconnections.model.Body: com.stripe.android.financialconnections.model.Body$Companion Companion
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundedCornerRadius
com.horcrux.svg.R$dimen: int notification_large_icon_height
com.google.crypto.tink.proto.KmsAeadKeyFormat: int KEY_URI_FIELD_NUMBER
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
com.google.android.gms.maps.model.StrokeStyle: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$layout: int notification_template_custom_big
com.horcrux.svg.R$dimen: int notification_small_icon_background_padding
com.swmansion.reanimated.R$layout: int fps_view
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.horcrux.svg.R$style: int Widget_AppCompat_Toolbar
com.horcrux.svg.R$dimen: int abc_edit_text_inset_horizontal_material
com.swmansion.reanimated.R$id: int accessibility_custom_action_17
com.swmansion.reanimated.R$attr: int actionProviderClass
com.google.crypto.tink.proto.AesEaxKeyFormat: int keySize_
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int mSurfaceId
com.swmansion.reanimated.R$string: int rn_tab_description
com.horcrux.svg.R$dimen: int notification_action_icon_size
com.swmansion.reanimated.R$id: int contentPanel
com.swmansion.reanimated.R$styleable: int Toolbar_subtitleTextAppearance
com.swmansion.reanimated.R$color: int abc_search_url_text
com.swmansion.reanimated.R$dimen: int abc_action_bar_content_inset_with_nav
com.horcrux.svg.R$drawable: int abc_list_selector_background_transition_holo_dark
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.stripe.android.financialconnections.FinancialConnectionsSheetResult$Completed: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.button.zzc: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.KeysetInfo keysetInfo_
com.swmansion.reanimated.R$string: int imagebutton_description
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.horcrux.svg.R$id: int accessibility_custom_action_21
com.swmansion.reanimated.R$dimen: int hint_alpha_material_dark
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength[] strokeDasharray
com.horcrux.svg.R$styleable: int[] FontFamily
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.facebook.react.fabric.GuardedFrameCallback: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.stripe.android.financialconnections.presentation.WebAuthFlowState$Failed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int actionBarPopupTheme
com.horcrux.svg.R$styleable: int[] SearchView
com.swmansion.reanimated.R$attr: int progressBarPadding
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int ActionMode_titleTextStyle
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarDivider
com.swmansion.reanimated.R$styleable: int TextAppearance_android_shadowDx
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.horcrux.svg.RenderableView: java.util.ArrayList mAttributeList
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTextPadding
com.horcrux.svg.R$anim: int abc_popup_exit
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_SearchView
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.horcrux.svg.VirtualView: android.graphics.Region mClipRegion
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_ActionBar
com.stripe.android.ui.core.elements.KeyboardType: com.stripe.android.ui.core.elements.KeyboardType$Companion Companion
com.swmansion.reanimated.R$string: int catalyst_debug_connecting
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Borderless
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category[] $VALUES
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_DayNight
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.horcrux.svg.R$attr: int elevation
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int VERSION_FIELD_NUMBER
com.horcrux.svg.R$string: int catalyst_perf_monitor_stop
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.swmansion.reanimated.R$attr: int measureWithLargestChild
com.swmansion.reanimated.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.horcrux.svg.R$attr: int queryPatterns
com.google.android.gms.location.LastLocationRequest: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.swmansion.reanimated.layoutReanimation.Snapshot: int originY
com.swmansion.reanimated.R$color: int primary_material_dark
com.swmansion.reanimated.R$dimen: int abc_action_bar_overflow_padding_start_material
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane NETWORKING_LINK_LOGIN_WARMUP
com.swmansion.reanimated.R$string: int state_expanded_description
com.stripe.android.model.StripeIntent$NextActionData$SdkData$Use3DS2$DirectoryServerEncryption: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status FAILED
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ACCELEROMETER
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundAsCircle
com.horcrux.svg.R$color: int primary_material_light
com.swmansion.reanimated.R$id: int save_non_transition_alpha
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes LINK
com.swmansion.reanimated.R$attr: int iconifiedByDefault
com.horcrux.svg.R$id: int action_bar_activity_content
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes US_BANK_ACCOUNT
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.horcrux.svg.VirtualView: android.graphics.Path mMarkerPath
com.swmansion.reanimated.R$attr: int drawableLeftCompat
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.proto.RegistryConfig DEFAULT_INSTANCE
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGMarker
com.horcrux.svg.R$styleable: int GradientColor_android_startY
com.horcrux.svg.R$dimen: int abc_list_item_height_small_material
com.horcrux.svg.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacParams: int TAG_SIZE_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int subtitle
com.stripe.android.financialconnections.model.Entry$Image: com.stripe.android.financialconnections.model.Entry$Image$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_android_gravity
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_TabView
com.swmansion.reanimated.R$id: int action_bar_container
com.swmansion.reanimated.R$dimen: int compat_button_padding_horizontal_material
com.stripe.android.networking.FraudDetectionData: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int abc_control_padding_material
com.swmansion.reanimated.R$drawable: int abc_list_selector_disabled_holo_light
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.horcrux.svg.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.horcrux.svg.R$string: int catalyst_reload
com.swmansion.reanimated.R$styleable: int SwitchCompat_splitTrack
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int nextSensorId
com.swmansion.reanimated.R$drawable: int abc_btn_radio_material_anim
kotlinx.coroutines.CompletedExceptionally: int _handled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.horcrux.svg.R$id: int listMode
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundingBorderColor
com.horcrux.svg.R$layout: int select_dialog_multichoice_material
com.horcrux.svg.R$attr: int autoSizeStepGranularity
com.swmansion.reanimated.R$color: int switch_thumb_normal_material_light
com.swmansion.reanimated.BuildConfig: int REACT_NATIVE_MINOR_VERSION
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResultInternal$Failed: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxParams params_
com.horcrux.svg.R$attr: int actionModeSplitBackground
com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountHolderType: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int src_atop
com.horcrux.svg.R$dimen: int hint_pressed_alpha_material_light
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.swmansion.reanimated.R$drawable: int abc_spinner_textfield_background_material
com.swmansion.reanimated.R$attr: int drawableSize
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat
com.horcrux.svg.R$attr: int autofillInlineSuggestionChip
com.swmansion.reanimated.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
com.swmansion.reanimated.R$styleable: int TextAppearance_android_typeface
com.horcrux.svg.R$color: int background_material_light
com.google.crypto.tink.proto.Keyset$Key: int KEY_ID_FIELD_NUMBER
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.R$dimen: int abc_search_view_preferred_height
com.horcrux.svg.R$styleable: int SearchView_android_text
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.horcrux.svg.R$id: int tag_screen_reader_focusable
com.rnmaps.maps.MapPolygonManager: android.util.DisplayMetrics metrics
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.horcrux.svg.R$string: int combobox_description
com.horcrux.svg.R$style: int Base_V23_Theme_AppCompat_Light
com.swmansion.reanimated.R$styleable: int Fragment_android_id
com.horcrux.svg.R$style: int Widget_Autofill_InlineSuggestionSubtitle
com.stripe.android.model.PaymentMethod$Card: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int actionLayout
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect viewEffect
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.swmansion.reanimated.R$attr: int isLightTheme
com.swmansion.reanimated.R$layout: int redbox_item_frame
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.swmansion.reanimated.R$styleable: int AlertDialog_multiChoiceItemLayout
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$attr: int titleTextStyle
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$attr: int colorControlHighlight
com.swmansion.reanimated.R$styleable: int ColorStateListItem_lStar
com.swmansion.reanimated.BuildConfig: java.lang.String REANIMATED_VERSION_JAVA
com.horcrux.svg.R$dimen: int abc_button_padding_vertical_material
com.horcrux.svg.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: boolean mIsLayoutable
com.horcrux.svg.R$dimen: int abc_control_corner_material
com.horcrux.svg.R$id: int action_menu_divider
androidx.core.view.WindowInsetsAnimationCompat$Callback: android.view.WindowInsets mDispachedInsets
com.horcrux.svg.R$string: int toolbar_description
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
com.swmansion.reanimated.R$style: int Theme_AppCompat_Light_NoActionBar
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener mItemDispatchListener
com.swmansion.reanimated.R$id: int accessibility_custom_action_12
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.swmansion.reanimated.R$color: int abc_tint_seek_thumb
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow$Companion Companion
com.swmansion.reanimated.Utils: boolean isChromeDebugger
com.swmansion.reanimated.CopiedEvent: java.lang.String eventName
com.stripe.android.ui.core.elements.BsbSpec: com.stripe.android.ui.core.elements.BsbSpec$Companion Companion
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: java.lang.String kekUri_
com.swmansion.reanimated.R$drawable: int abc_seekbar_tick_mark_material
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionDropDownStyle
com.swmansion.reanimated.ReanimatedModule$1: com.swmansion.reanimated.ReanimatedModule this$0
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$attr: int listPreferredItemPaddingEnd
com.horcrux.svg.R$layout: int abc_list_menu_item_icon
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String TAG
com.swmansion.reanimated.R$color: int foreground_material_dark
com.horcrux.svg.SvgView: java.util.Map mDefinedBrushes
com.swmansion.reanimated.R$style: int Theme_AppCompat_DayNight
com.swmansion.reanimated.R$dimen: int notification_media_narrow_margin
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableBottomCompat
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
com.swmansion.reanimated.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.rnmaps.maps.MapManager: com.rnmaps.maps.MapMarkerManager markerManager
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.common.GestureHandlerStateManager gestureHandlerStateManager
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_backgroundTint
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.stripe.android.financialconnections.model.Image: com.stripe.android.financialconnections.model.Image$Companion Companion
com.horcrux.svg.R$attr: int logoDescription
com.swmansion.reanimated.R$styleable: int MenuItem_android_visible
com.swmansion.reanimated.R$layout: int abc_screen_toolbar
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.swmansion.reanimated.R$attr: int colorPrimary
com.horcrux.svg.R$layout: int abc_expanded_menu_layout
com.horcrux.svg.RenderableViewManager$MarkerManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTopCompat
com.horcrux.svg.R$attr: int initialActivityCount
com.horcrux.svg.R$string: int catalyst_dismiss_button
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.horcrux.svg.R$styleable: int[] MenuItem
com.horcrux.svg.R$drawable: int abc_control_background_material
com.swmansion.reanimated.R$styleable: int ActionBar_subtitle
com.stripe.android.model.PaymentMethodOptionsParams$Card: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int fitXY
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion Companion
com.reactnativestripesdk.CardFieldViewManager: com.facebook.react.uimanager.ThemedReactContext reactContextRef
com.horcrux.svg.R$attr: int textAppearancePopupMenuHeader
com.horcrux.svg.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.stripe.android.core.model.Country: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Inverse
com.swmansion.reanimated.R$styleable: int FontFamilyFont_android_fontStyle
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabView
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int imageButtonStyle
com.horcrux.svg.R$styleable: int Toolbar_maxButtonHeight
com.swmansion.reanimated.R$color: int switch_thumb_material_light
com.horcrux.svg.SvgView: android.graphics.Bitmap mBitmap
com.swmansion.reanimated.R$layout: int abc_alert_dialog_button_bar_material
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int version_
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_disabled_alpha_material_light
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean mInDispatch
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _state
com.stripe.android.financialconnections.features.consent.ConsentState: com.airbnb.mvrx.Async acceptConsent
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Companion Companion
com.stripe.android.stripe3ds2.transaction.ChallengeAction$NativeForm: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_toolbarStyle
com.swmansion.reanimated.R$id: int accessibility_custom_action_13
com.swmansion.reanimated.R$styleable: int AppCompatTheme_dividerHorizontal
com.swmansion.reanimated.R$color: int abc_tint_edittext
com.horcrux.svg.R$styleable: int StateListDrawable_android_exitFadeDuration
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.horcrux.svg.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.WebAuthFlowState webAuthFlow
com.swmansion.reanimated.R$attr: int roundWithOverlayColor
com.horcrux.svg.R$dimen: int abc_action_bar_elevation_material
com.horcrux.svg.R$attr: int roundTopEnd
com.horcrux.svg.R$dimen: int abc_text_size_caption_material
com.swmansion.reanimated.R$styleable: int FragmentContainerView_android_name
com.swmansion.reanimated.R$color: int material_grey_300
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.swmansion.reanimated.R$drawable: int tooltip_frame_light
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.horcrux.svg.R$style: int Widget_AppCompat_PopupMenu
com.stripe.android.view.BecsDebitBanks$Bank: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.swmansion.reanimated.R$drawable: int notification_bg_normal_pressed
com.horcrux.svg.R$attr: int actionModePasteDrawable
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
com.horcrux.svg.R$attr: int textAppearanceListItemSmall
com.horcrux.svg.R$styleable: int TextAppearance_android_textColorHint
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingCommitStats
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.rnmaps.maps.MapManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int paddingTopNoTitle
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.stripe.android.financialconnections.model.DataAccessNoticeBody: android.os.Parcelable$Creator CREATOR
com.stripe.android.googlepaylauncher.GooglePayLauncherContract$PaymentIntentArgs: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int compat_button_padding_vertical_material
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
com.horcrux.svg.R$styleable: int[] Spinner
com.swmansion.reanimated.R$styleable: int MenuItem_android_numericShortcut
com.horcrux.svg.R$dimen: int highlight_alpha_material_colored
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.react.fabric.CppComponentRegistry: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner_Underlined
com.swmansion.reanimated.R$id: int accessibility_custom_action_26
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Companion Companion
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.CopyOnWriteArrayList mStoppedSurfaceIds
com.swmansion.reanimated.R$styleable: int Toolbar_navigationIcon
com.horcrux.svg.R$styleable: int SearchView_searchPrefixText
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonStyle
com.horcrux.svg.R$drawable: int abc_ic_menu_overflow_material
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int closeIcon
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarTabStyle
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.horcrux.svg.RenderableViewManager$TextPathViewManager: java.lang.String REACT_CLASS
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int AES_CTR_KEY_FIELD_NUMBER
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow MX_OAUTH_APP2APP
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.BuildConfig: int EXOPACKAGE_FLAGS
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.swmansion.reanimated.R$attr: int actionBarSize
com.horcrux.svg.R$styleable: int[] GradientColor
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.horcrux.svg.R$attr: int checkMarkTint
com.swmansion.reanimated.R$id: int submenuarrow
com.horcrux.svg.R$layout: int abc_alert_dialog_button_bar_material
com.horcrux.svg.R$attr: int isLightTheme
com.swmansion.reanimated.R$id: int tag_state_description
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog
com.swmansion.reanimated.R$attr: int windowFixedHeightMinor
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory[] $VALUES
com.horcrux.svg.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.horcrux.svg.R$style: int Widget_Autofill_InlineSuggestionEndIconStyle
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetLeft
com.swmansion.reanimated.R$id: int accessibility_collection
com.stripe.android.model.ConfirmPaymentIntentParams: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int hint_pressed_alpha_material_dark
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetEnd
com.horcrux.svg.R$attr: int failureImageScaleType
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitectureSoftExceptions
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.swmansion.reanimated.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.horcrux.svg.R$styleable: int[] MenuGroup
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.swmansion.reanimated.R$styleable: int AlertDialog_android_layout
com.google.android.gms.location.zzac: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.reactnativepagerview.PagerViewViewManager: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.swmansion.reanimated.R$color: int error_color_material_light
com.horcrux.svg.R$styleable: int Toolbar_titleMargins
com.swmansion.reanimated.R$styleable: int[] AppCompatTheme
com.swmansion.reanimated.NodesManager: java.util.Queue mOperationsInBatch
com.stripe.android.ui.core.elements.TranslationId: com.stripe.android.ui.core.elements.TranslationId$Companion Companion
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory$Companion Companion
com.horcrux.svg.R$styleable: int[] AlertDialog
com.horcrux.svg.R$styleable: int FontFamilyFont_fontStyle
com.stripe.android.stripe3ds2.transaction.ChallengeParameters: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int abc_menu_space_shortcut_label
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.facebook.react.fabric.events.EventBeatManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.stripe.android.financialconnections.model.FinancialConnectionsAccount: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.BuildConfig: boolean DEBUG
com.swmansion.reanimated.R$layout: int abc_screen_simple_overlay_action_mode
com.swmansion.reanimated.R$style: int Theme_Catalyst
com.horcrux.svg.R$styleable: int SimpleDraweeView_placeholderImageScaleType
com.swmansion.reanimated.R$attr: int drawableBottomCompat
com.swmansion.reanimated.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.horcrux.svg.R$dimen: int compat_button_padding_horizontal_material
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.horcrux.svg.R$styleable: int AppCompatTextView_textAllCaps
com.horcrux.svg.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.swmansion.reanimated.R$styleable: int[] DrawerArrowToggle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.swmansion.reanimated.NodesManager: double lastFrameTimeMs
com.swmansion.reanimated.R$styleable: int SearchView_defaultQueryHint
com.stripe.android.model.PaymentIntent$Error: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
com.horcrux.svg.R$style: int Animation_AppCompat_Dialog
com.swmansion.reanimated.R$string: int abc_searchview_description_clear
com.horcrux.svg.R$styleable: int CompoundButton_buttonTint
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.events.RCTEventEmitter mCustomEventHandler
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_LAYOUT
com.swmansion.reanimated.R$color: int androidx_core_secondary_text_default_material_light
com.azendoo.reactnativesnackbar.SnackbarModule: java.lang.String REACT_NAME
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.horcrux.svg.R$id: int accessibility_custom_action_4
com.swmansion.reanimated.R$style: int CalendarDatePickerStyle
com.stripe.android.financialconnections.model.Balance: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.swmansion.reanimated.R$string: int catalyst_loading_from_url
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.fabric.FabricUIManager$5: int val$initialReactTag
com.stripe.android.financialconnections.model.MixedOAuthParams: com.stripe.android.financialconnections.model.MixedOAuthParams$Companion Companion
com.swmansion.reanimated.R$string: int abc_shareactionprovider_share_with
com.swmansion.reanimated.R$dimen: int tooltip_margin
com.swmansion.reanimated.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$attr: int buttonBarButtonStyle
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow TRUELAYER_OAUTH
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect viewEffect
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mViewCommandMountItems
com.horcrux.svg.R$string: int abc_action_bar_home_description
com.swmansion.reanimated.R$styleable: int MenuItem_android_alphabeticShortcut
com.swmansion.reanimated.R$styleable: int AppCompatTheme_toolbarStyle
com.horcrux.svg.R$layout: int redbox_item_title
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_textAppearance
com.horcrux.svg.R$id: int pointer_events
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: java.lang.String value
com.dropShadow.DropShadowModule: com.dropShadow.DropShadowListener imageListener
com.horcrux.svg.RenderableView: int CAP_BUTT
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: com.airbnb.mvrx.Async completeSession
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Headline
com.swmansion.reanimated.R$styleable: int[] MenuView
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.swmansion.reanimated.R$id: int react_test_id
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableEndCompat
com.stripe.android.model.MandateDataParams$Type$Online: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int MenuView_android_horizontalDivider
com.swmansion.reanimated.R$attr: int fontFamily
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: boolean mIsRoot
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorPrimaryDark
com.swmansion.reanimated.R$color: int androidx_core_ripple_material_light
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.swmansion.reanimated.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.swmansion.reanimated.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.swmansion.reanimated.R$style: int Theme_AppCompat_DialogWhenLarge
com.horcrux.svg.R$attr: int actionModeWebSearchDrawable
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int MenuItem_android_icon
com.horcrux.svg.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.horcrux.svg.R$dimen: int abc_alert_dialog_button_bar_height
com.horcrux.svg.R$drawable: int btn_checkbox_unchecked_mtrl
com.swmansion.reanimated.R$id: int action_menu_divider
com.horcrux.svg.R$dimen: int abc_progress_bar_height_material
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableStartCompat
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.swmansion.reanimated.ReanimatedModule$1: java.util.ArrayList val$operations
com.horcrux.svg.R$id: int title
com.horcrux.svg.BuildConfig: java.lang.String BUILD_TYPE
com.horcrux.svg.R$string: int abc_searchview_description_query
com.horcrux.svg.R$dimen: int abc_dialog_min_width_major
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double interval
com.swmansion.reanimated.R$attr: int listItemLayout
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsDoneCreatingModule
com.horcrux.svg.R$styleable: int[] AppCompatTextView
com.swmansion.reanimated.R$string: int catalyst_change_bundle_location
com.horcrux.svg.R$attr: int titleTextStyle
com.facebook.react.fabric.FabricUIManager: boolean mShouldDeallocateEventDispatcher
com.swmansion.reanimated.R$attr: int drawableTopCompat
com.swmansion.reanimated.R$style: int Base_V22_Theme_AppCompat
com.swmansion.reanimated.R$string: int status_bar_notification_info_overflow
com.stripe.android.paymentsheet.PaymentSheet$InitializationMode$PaymentIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int SearchView_iconifiedByDefault
com.horcrux.svg.R$attr: int buttonIconDimen
com.swmansion.reanimated.R$styleable: int FontFamilyFont_font
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.stripe.android.financialconnections.model.Entry$Text: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int roundTopLeft
com.swmansion.reanimated.R$attr: int dividerPadding
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundWithOverlayColor
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.swmansion.reanimated.R$layout: int abc_select_dialog_material
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel: com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion Companion
com.horcrux.svg.R$styleable: int AppCompatTextView_fontFamily
com.horcrux.svg.R$xml: int rn_dev_preferences
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String MODULE_NAME
com.horcrux.svg.R$dimen: int abc_dropdownitem_text_padding_left
com.horcrux.svg.R$styleable: int GradientColor_android_type
com.swmansion.reanimated.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int KEK_URI_FIELD_NUMBER
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.horcrux.svg.R$color: int material_grey_800
com.reactnativestripesdk.StripeSdkModule: com.facebook.react.bridge.Promise confirmPromise
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] $VALUES
com.stripe.android.paymentsheet.PaymentSheetResult$Completed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int roundBottomEnd
com.swmansion.reanimated.R$dimen: int notification_content_margin_start
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.horcrux.svg.R$attr: int listChoiceIndicatorMultipleAnimated
com.horcrux.svg.RenderableView: java.util.ArrayList mPropList
com.swmansion.reanimated.R$string: int state_collapsed_description
com.horcrux.svg.R$style: int Theme_AutofillInlineSuggestion
com.horcrux.svg.R$drawable: int abc_item_background_holo_light
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Button
com.swmansion.reanimated.R$anim: int catalyst_slide_up
com.horcrux.svg.R$layout: int support_simple_spinner_dropdown_item
com.horcrux.svg.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.swmansion.reanimated.R$style: int Widget_AppCompat_AutoCompleteTextView
com.swmansion.reanimated.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.horcrux.svg.R$drawable: int abc_ic_clear_material
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
com.stripe.android.ui.core.elements.CardBillingSpec: com.stripe.android.ui.core.elements.CardBillingSpec$Companion Companion
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PX
com.swmansion.reanimated.R$styleable: int TextAppearance_fontFamily
com.stripe.android.stripe3ds2.transaction.InitChallengeResult$Start: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_custom_action_14
com.horcrux.svg.R$color: int switch_thumb_disabled_material_light
com.swmansion.reanimated.R$attr: int retryImage
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
com.swmansion.reanimated.R$styleable: int MenuItem_android_id
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.stripe.android.model.PaymentMethod$Ideal: android.os.Parcelable$Creator CREATOR
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.swmansion.reanimated.R$styleable: int MenuItem_alphabeticModifiers
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
com.stripe.android.stripe3ds2.init.Warning: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.horcrux.svg.R$integer: int react_native_dev_server_port
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.horcrux.svg.VirtualView: float canvasHeight
com.stripe.android.financialconnections.model.ManualEntry: android.os.Parcelable$Creator CREATOR
com.stripe.android.paymentsheet.forms.PaymentMethodRequirements: com.stripe.android.paymentsheet.forms.PaymentMethodRequirements$Companion Companion
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.swmansion.reanimated.R$attr: int iconTint
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
com.swmansion.reanimated.R$color: int material_deep_teal_500
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule mUIManager
com.stripe.android.model.PaymentIntent$Shipping: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int action_context_bar
com.horcrux.svg.R$drawable: int abc_ic_go_search_api_material
com.swmansion.reanimated.R$dimen: int abc_list_item_height_large_material
com.horcrux.svg.R$attr: int titleMargin
com.horcrux.svg.VirtualView: android.graphics.Path mStrokePath
com.stripe.android.ui.core.elements.SharedDataSpec: com.stripe.android.ui.core.elements.SharedDataSpec$Companion Companion
com.horcrux.svg.R$styleable: int MenuGroup_android_orderInCategory
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacParams params_
com.google.android.gms.wallet.InstrumentInfo: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Small
com.swmansion.reanimated.R$styleable: int ActionBar_hideOnContentScroll
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData hybridData
com.horcrux.svg.R$styleable: int ColorStateListItem_lStar
com.google.android.gms.internal.location.zzdd: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGForeignObject
com.horcrux.svg.R$id: int accessibility_custom_action_26
com.horcrux.svg.R$color: int accent_material_dark
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int Theme_AutofillInlineSuggestion
com.horcrux.svg.RenderableViewManager$GroupViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$styleable: int AppCompatTextView_lineHeight
com.swmansion.reanimated.R$style: int Base_Animation_AppCompat_Tooltip
com.horcrux.svg.R$id: int accessibility_action_clickable_span
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.stripe.android.paymentsheet.PaymentSheetResult$Canceled: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product SUPPORT_SITE
com.swmansion.reanimated.R$dimen: int notification_subtext_size
com.horcrux.svg.R$dimen: int abc_text_size_display_2_material
com.horcrux.svg.R$id: int accessibility_custom_action_12
com.swmansion.reanimated.R$anim: int abc_fade_in
com.swmansion.reanimated.R$id: int catalyst_redbox_title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabText
com.swmansion.reanimated.R$attr: int textAppearanceListItemSecondary
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType NUMBER
com.swmansion.reanimated.R$styleable: int[] ActionMenuItemView
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.SensorManager sensorManager
com.google.crypto.tink.proto.KeyTemplate: int VALUE_FIELD_NUMBER
com.horcrux.svg.R$attr: int iconifiedByDefault
com.swmansion.reanimated.R$layout: int abc_screen_content_include
com.stripe.android.model.PaymentMethodOptionsParams$USBankAccount: android.os.Parcelable$Creator CREATOR
com.proyecto26.inappbrowser.RNInAppBrowserModule: java.lang.String NAME
com.BV.LinearGradient.LinearGradientManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$attr: int viewAspectRatio
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopEnd
com.horcrux.svg.RenderableView: int JOIN_MITER
com.swmansion.reanimated.R$styleable: int GradientColor_android_startY
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.horcrux.svg.R$color: int material_blue_grey_800
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String cppVersion
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.stripe.android.PaymentRelayStarter$Args$SetupIntentArgs: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_V26_Theme_AppCompat
com.swmansion.reanimated.R$string: int abc_searchview_description_voice
com.horcrux.svg.RenderableViewManager$UseViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int suggestionRowLayout
com.horcrux.svg.R$styleable: int AppCompatTheme_popupMenuStyle
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.swmansion.reanimated.R$styleable: int CheckedTextView_checkMarkTintMode
com.swmansion.reanimated.R$id: int home
com.swmansion.reanimated.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Small
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionMode
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.horcrux.svg.R$styleable: int MenuItem_android_icon
com.horcrux.svg.R$styleable: int MenuView_android_horizontalDivider
com.swmansion.reanimated.R$id: int rn_redbox_dismiss_button
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_variablePadding
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderFetchTimeout
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTheme
com.horcrux.svg.R$styleable: int Toolbar_titleMarginTop
com.horcrux.svg.R$style: int Widget_AppCompat_Light_SearchView
com.horcrux.svg.R$id: int accessibility_links
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.horcrux.svg.R$attr: int autoSizePresetSizes
com.swmansion.reanimated.R$id: int accessibility_custom_action_3
com.swmansion.reanimated.sensor.ReanimatedSensorType: int type
com.horcrux.svg.R$styleable: int MenuView_preserveIconSpacing
com.horcrux.svg.R$layout: int abc_list_menu_item_checkbox
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mEnteringViews
com.stripe.android.financialconnections.model.PartnerNotice: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$styleable: int AppCompatTheme_viewInflaterClass
com.swmansion.reanimated.R$layout: int abc_search_dropdown_item_icons_2line
com.horcrux.svg.R$attr: int titleMargins
com.horcrux.svg.R$attr: int textAppearanceListItem
com.horcrux.svg.R$styleable: int TextAppearance_android_typeface
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.stripe.android.ui.core.elements.ConfirmStatusSpecAssociation: com.stripe.android.ui.core.elements.ConfirmStatusSpecAssociation$Companion Companion
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableTop
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Switch
com.horcrux.svg.R$dimen: int abc_action_bar_default_padding_start_material
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Title_Inverse
com.swmansion.reanimated.R$styleable: int AppCompatTextView_android_textAppearance
com.facebook.react.animated.EventAnimationDriver: java.lang.String mEventName
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarStyle
com.swmansion.reanimated.R$attr: int ttcIndex
com.horcrux.svg.R$attr: int textAppearanceSearchResultTitle
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_DropDown
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetEndWithActions
com.swmansion.reanimated.R$string: int abc_action_bar_home_description
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$styleable: int[] AppCompatTextHelper
com.swmansion.reanimated.R$dimen: int compat_notification_large_icon_max_width
com.swmansion.reanimated.R$styleable: int GradientColor_android_type
com.horcrux.svg.R$attr: int numericModifiers
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Medium
com.horcrux.svg.R$id: int catalyst_redbox_title
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mAncestorsToRemove
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat
com.stripe.android.view.PaymentMethodsActivityStarter$Result: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int tooltip_frame_dark
com.swmansion.reanimated.R$attr: int actionButtonStyle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView_Menu
com.swmansion.reanimated.R$attr: int failureImageScaleType
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
com.horcrux.svg.R$styleable: int Toolbar_navigationIcon
com.swmansion.reanimated.R$attr: int subtitleTextStyle
com.swmansion.reanimated.R$id: int pointer_events
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isCatalystInstanceDestroyed
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.horcrux.svg.R$attr: int allowStacking
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.swmansion.reanimated.R$dimen: int abc_dialog_title_divider_material
com.horcrux.svg.R$string: int catalyst_debug
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrHmacAeadKey DEFAULT_INSTANCE
com.horcrux.svg.R$drawable: int abc_list_focused_holo
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.stripe.android.ui.core.elements.UpiSpec: com.stripe.android.ui.core.elements.UpiSpec$Companion Companion
com.swmansion.reanimated.R$string: int state_mixed_description
com.swmansion.reanimated.R$id: int icon_group
com.stripe.android.stripe3ds2.transactions.ChallengeResponseData$Image: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type ACCOUNT
com.horcrux.svg.R$styleable: int View_android_theme
com.swmansion.reanimated.R$styleable: int ActionBar_background
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetRight
com.swmansion.reanimated.R$id: int multiply
com.horcrux.svg.R$styleable: int[] PopupWindow
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog_MinWidth
com.swmansion.reanimated.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionMode
com.stripe.android.uicore.elements.IdentifierSpec: com.stripe.android.uicore.elements.IdentifierSpec$Companion Companion
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int mSurfaceId
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product EXPRESS_ONBOARDING
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.swmansion.reanimated.R$id: int line1
com.horcrux.svg.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.swmansion.reanimated.R$color: int bright_foreground_inverse_material_dark
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountContract$Args$ForPaymentIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionTitle
com.stripe.android.SetupIntentResult: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.swmansion.reanimated.R$color: int catalyst_redbox_background
com.horcrux.svg.R$dimen: int abc_text_size_button_material
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: boolean sIsSoLibraryLoaded
com.swmansion.reanimated.R$drawable: int abc_btn_check_material
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int emojiCompatEnabled
com.swmansion.reanimated.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.swmansion.reanimated.R$styleable: int View_paddingEnd
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Stack mReactTagsToRemove
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: int $stable
com.swmansion.reanimated.R$styleable: int[] SimpleDraweeView
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
com.horcrux.svg.R$drawable: int notification_bg_low_normal
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Display3
com.horcrux.svg.R$anim: int catalyst_slide_down
com.swmansion.reanimated.R$dimen: int abc_dialog_padding_top_material
com.swmansion.reanimated.R$color: int material_grey_600
com.horcrux.svg.R$layout: int abc_screen_simple_overlay_action_mode
com.swmansion.reanimated.R$styleable: int SwitchCompat_thumbTextPadding
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.horcrux.svg.R$style: int Theme_AppCompat_Light_NoActionBar
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mTurboModuleCleanupLock
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingLeft
com.swmansion.reanimated.R$string: int catalyst_reload_error
com.swmansion.reanimated.R$id: int unchecked
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String primitiveName_
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.swmansion.reanimated.R$style: int Theme_AppCompat_Dialog_Alert
com.swmansion.reanimated.R$styleable: int AppCompatSeekBar_android_thumb
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow WELLS_FARGO_WEBVIEW
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] $VALUES
com.stripe.android.financialconnections.model.ManualEntry: com.stripe.android.financialconnections.model.ManualEntry$Companion Companion
com.horcrux.svg.R$drawable: int abc_switch_track_mtrl_alpha
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.swmansion.reanimated.R$id: int tag_accessibility_clickable_spans
com.stripe.android.model.Source$Owner: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int ActionMode_background
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory UNKNOWN
com.horcrux.svg.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionTitle
com.swmansion.reanimated.R$styleable: int GradientColor_android_gradientRadius
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.google.android.gms.internal.location.zzdf: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String validEmail
com.horcrux.svg.R$drawable: int abc_text_select_handle_right_mtrl
com.swmansion.reanimated.R$id: int expand_activities_button
com.swmansion.reanimated.R$styleable: int SearchView_animateNavigationIcon
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String catalogueName_
com.horcrux.svg.R$styleable: int SearchView_android_hint
com.swmansion.reanimated.R$attr: int listChoiceIndicatorMultipleAnimated
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category$Companion Companion
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.horcrux.svg.R$drawable: int btn_radio_off_mtrl
com.swmansion.reanimated.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.swmansion.reanimated.R$styleable: int PopupWindow_android_popupBackground
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status PENDING
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Inverse
com.horcrux.svg.R$attr: int contentInsetEnd
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.horcrux.svg.R$id: int tag_on_receive_content_mime_types
com.swmansion.reanimated.R$styleable: int[] GenericDraweeHierarchy
com.horcrux.svg.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.horcrux.svg.R$dimen: int highlight_alpha_material_dark
com.horcrux.svg.R$styleable: int AppCompatTheme_dividerVertical
com.stripe.android.stripe3ds2.transaction.AcsData: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] Toolbar
com.swmansion.reanimated.R$integer: int react_native_inspector_proxy_port
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mDisableCleaningForViewTag
com.stripe.android.financialconnections.features.success.SuccessState: com.airbnb.mvrx.Async completeSession
com.swmansion.reanimated.R$id: int accessibility_custom_action_20
com.horcrux.svg.R$attr: int nestedScrollViewStyle
com.swmansion.reanimated.R$color: int material_grey_100
com.horcrux.svg.SvgView: java.util.Map mDefinedMasks
com.horcrux.svg.R$style: int Widget_Compat_NotificationActionText
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.horcrux.svg.R$dimen: int abc_dialog_corner_radius_material
kotlinx.coroutines.channels.ArrayChannel: int size
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String TAG
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.stripe.android.paymentsheet.PaymentOptionResult$Failed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.horcrux.svg.R$string: int state_unselected_description
com.stripe.android.model.PaymentMethod$Card$Networks: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap toBeRemoved
com.stripe.android.paymentsheet.model.SetupIntentClientSecret: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$dimen: int abc_action_bar_default_padding_end_material
com.horcrux.svg.R$id: int fitEnd
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.facebook.react.fabric.FabricUIManager$6: com.facebook.react.fabric.FabricUIManager this$0
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorControlNormal
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: com.facebook.react.bridge.ReadableArray mCommandArgs
com.horcrux.svg.RenderableView: int vectorEffect
com.swmansion.reanimated.R$styleable: int FontFamily_fontProviderPackage
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: java.util.Set selectedIds
com.horcrux.svg.R$attr: int popupMenuStyle
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetLeft
com.horcrux.svg.R$drawable: int autofill_inline_suggestion_chip_background
com.swmansion.reanimated.R$attr: int roundingBorderColor
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopEnd
com.horcrux.svg.R$integer: int status_bar_notification_info_maxnum
com.swmansion.reanimated.R$attr: int activityChooserViewStyle
com.horcrux.svg.R$id: int accessibility_custom_action_28
com.swmansion.reanimated.R$style: int Theme_AppCompat_Dialog_MinWidth
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean sIsSoLibraryLoaded
com.horcrux.svg.R$id: int accessibility_custom_action_18
com.swmansion.reanimated.R$style: int Widget_AppCompat_TextView
com.swmansion.reanimated.R$drawable: int abc_btn_check_to_on_mtrl_015
com.horcrux.svg.R$dimen: int abc_edit_text_inset_top_material
com.horcrux.svg.R$styleable: int CompoundButton_buttonTintMode
com.swmansion.reanimated.R$string: int state_unselected_description
com.horcrux.svg.R$attr: int windowFixedWidthMinor
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.horcrux.svg.R$styleable: int Fragment_android_id
com.stripe.android.link.LinkActivityResult$Completed: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.swmansion.reanimated.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray mLayoutHandlers
com.swmansion.reanimated.R$id: int rn_frame_method
com.swmansion.reanimated.R$id: int centerCrop
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
com.swmansion.reanimated.R$styleable: int SearchView_searchHintIcon
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.horcrux.svg.R$bool: int abc_action_bar_embed_tabs
com.horcrux.svg.R$string: int abc_menu_sym_shortcut_label
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Body2
com.swmansion.reanimated.R$layout: int select_dialog_singlechoice_material
com.horcrux.svg.R$attr: int title
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.horcrux.svg.R$attr: int borderlessButtonStyle
com.swmansion.reanimated.R$style: int Widget_AppCompat_Toolbar
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions TRANSACTIONS
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$id: int search_badge
com.stripe.android.stripe3ds2.transaction.ChallengeResult$Canceled: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.RenderableViewManager$DefsViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Dialog
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.stripe.android.model.PaymentMethodCreateParams$Link: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.horcrux.svg.R$string: int rn_tab_description
com.horcrux.svg.R$string: int abc_searchview_description_voice
com.stripe.android.model.StripeIntent$NextActionData$SdkData$Use3DS2: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int GradientColor_android_endColor
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason$Companion Companion
com.stripe.android.model.ConsumerSession$VerificationSession: com.stripe.android.model.ConsumerSession$VerificationSession$Companion Companion
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.stripe.android.PaymentConfiguration: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.swmansion.reanimated.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.horcrux.svg.R$style: int SpinnerDatePickerDialog
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite unknownFields
com.horcrux.svg.R$styleable: int CompoundButton_buttonCompat
com.horcrux.svg.R$styleable: int Toolbar_titleMarginEnd
com.horcrux.svg.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.stripe.android.link.LinkConfiguration: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SearchView_layout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow TESTMODE
com.swmansion.reanimated.R$id: int accessibility_action_clickable_span
com.swmansion.reanimated.R$id: int tag_unhandled_key_listeners
com.stripe.android.EphemeralOperation$Customer$UpdateShipping: android.os.Parcelable$Creator CREATOR
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.swmansion.reanimated.R$drawable: int abc_list_focused_holo
com.horcrux.svg.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.swmansion.reanimated.R$id: int accessibility_custom_action_27
com.google.crypto.tink.proto.AesGcmSivKey: int version_
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: kotlin.Lazy $cachedSerializer$delegate
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs: com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$Companion Companion
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View view
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.stripe.android.model.ConsumerPaymentDetails$Card: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.horcrux.svg.R$drawable: int abc_text_select_handle_left_mtrl
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.swmansion.reanimated.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.horcrux.svg.R$attr: int drawableLeftCompat
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.google.android.gms.maps.model.GroundOverlayOptions: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Platform_V25_AppCompat
com.horcrux.svg.R$id: int forever
com.swmansion.reanimated.R$id: int spacer
com.swmansion.reanimated.R$style: int DialogAnimationFade
com.stripe.android.PaymentSessionConfig: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int abc_activity_chooser_view_see_all
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.horcrux.svg.R$drawable: int abc_btn_check_to_on_mtrl_000
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: com.facebook.react.bridge.WritableMap mParams
com.horcrux.svg.R$attr: int listItemLayout
com.horcrux.svg.R$string: int abc_searchview_description_search
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.stripe.android.model.SourceParams$ApiParams: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async payload
com.swmansion.reanimated.R$id: int wrap_content
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Time
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Subhead
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType CM
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar
com.swmansion.reanimated.R$attr: int shortcutMatchRequired
com.horcrux.svg.R$styleable: int AppCompatTheme_viewInflaterClass
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.facebook.react.config.ReactFeatureFlags: boolean useGlobalCallbackCleanupScopeUsingRetainJSCallback
com.horcrux.svg.R$attr: int textAppearanceSearchResultSubtitle
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_height_minor
com.stripe.android.model.PaymentMethodsList: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int notification_icon_background
com.swmansion.reanimated.R$dimen: int abc_control_inset_material
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$styleable: int FontFamilyFont_fontVariationSettings
com.horcrux.svg.R$id: int labelled_by
com.horcrux.svg.R$attr: int colorControlNormal
com.swmansion.reanimated.R$id: int accessibility_custom_action_4
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.horcrux.svg.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.horcrux.svg.R$id: int search_mag_icon
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.swmansion.reanimated.R$attr: int isAutofillInlineSuggestionTheme
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
com.horcrux.svg.R$id: int on
com.horcrux.svg.R$styleable: int Toolbar_contentInsetRight
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: kotlin.Lazy $cachedSerializer$delegate
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus SUCCEEDED
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display4
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.stripe.android.ui.core.Amount: android.os.Parcelable$Creator CREATOR
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.swmansion.reanimated.R$id: int action_bar_subtitle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.stripe.android.paymentsheet.state.GooglePayState$Available: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int catalyst_inspector_stop
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
com.swmansion.reanimated.R$string: int tablist_description
com.swmansion.reanimated.R$layout: int custom_dialog
com.swmansion.reanimated.R$color: int bright_foreground_material_dark
com.horcrux.svg.R$id: int message
com.horcrux.svg.R$style: int Widget_AppCompat_SearchView
com.horcrux.svg.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.horcrux.svg.R$anim: int catalyst_fade_in
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mSurfaceId
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitterWrapper
com.swmansion.reanimated.NodesManager$3: com.swmansion.reanimated.NodesManager this$0
com.stripe.android.PaymentAuthConfig$Stripe3ds2UiCustomization: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.ConsentPaneBody: com.stripe.android.financialconnections.model.ConsentPaneBody$Companion Companion
com.horcrux.svg.R$style: int Base_AlertDialog_AppCompat
com.swmansion.reanimated.R$styleable: int Autofill_InlineSuggestion_autofillInlineSuggestionEndIconStyle
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.horcrux.svg.R$color: int material_grey_100
com.stripe.android.paymentsheet.model.PaymentIntentClientSecret: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.stripe.android.ui.core.elements.ContactInformationSpec: com.stripe.android.ui.core.elements.ContactInformationSpec$Companion Companion
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: java.lang.Boolean saveToLinkWithStripeSucceeded
com.reactnativecommunity.picker.ReactPickerManager: int BLUR_PICKER
com.horcrux.svg.RenderableView: int JOIN_BEVEL
com.swmansion.reanimated.R$id: int actions
com.horcrux.svg.R$string: int spinbutton_description
com.swmansion.reanimated.R$drawable: int abc_ic_menu_overflow_material
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundTopRight
com.horcrux.svg.R$attr: int roundBottomStart
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type CUSTOMER
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner_DropDown
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.horcrux.svg.R$attr: int activityChooserViewStyle
com.swmansion.reanimated.R$styleable: int MenuView_android_headerBackground
androidx.compose.runtime.ParcelableSnapshotMutableState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
com.swmansion.reanimated.R$dimen: int abc_button_inset_vertical_material
com.stripe.android.model.CvcTokenParams: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int[] AppCompatEmojiHelper
com.facebook.react.fabric.mounting.MountItemDispatcher: long mBatchedExecutionTime
com.horcrux.svg.R$drawable: int abc_btn_check_to_on_mtrl_015
com.swmansion.reanimated.R$styleable: int ActionMode_subtitleTextStyle
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot targetViewSnapshot
com.swmansion.reanimated.R$dimen: int abc_cascading_menus_min_smallest_width
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$Companion Companion
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow FINICITY_CONNECT_V2_OAUTH_REDIRECT
com.swmansion.reanimated.R$attr: int selectableItemBackgroundBorderless
com.swmansion.reanimated.R$color: int abc_search_url_text_selected
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.horcrux.svg.R$attr: int selectableItemBackgroundBorderless
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog
com.swmansion.reanimated.R$drawable: int abc_seekbar_track_material
com.stripe.android.paymentsheet.state.PaymentSheetState$Full: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] LinearLayoutCompat
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.stripe.android.paymentsheet.PaymentSheetContractV2$Result: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int hint_alpha_material_light
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.swmansion.reanimated.R$style: int Animation_Catalyst_RedBox
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorButtonNormal
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
com.horcrux.svg.R$id: int action_bar_subtitle
com.horcrux.svg.R$attr: int titleTextAppearance
com.swmansion.reanimated.R$style: int Widget_AppCompat_ListView_Menu
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_weightSum
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.proto.KeysetInfo DEFAULT_INSTANCE
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status ACTIVE
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.swmansion.reanimated.R$attr: int searchHintIcon
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.swmansion.reanimated.R$styleable: int[] ListPopupWindow
com.swmansion.reanimated.R$id: int autofill_inline_suggestion_start_icon
com.horcrux.svg.R$anim: int abc_shrink_fade_out_from_bottom
com.horcrux.svg.R$dimen: int notification_action_text_size
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
com.stripe.android.payments.PaymentFlowResult$Unvalidated: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar_Solid
com.horcrux.svg.R$string: int state_busy_description
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View targetView
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.proto.XChaCha20Poly1305Key DEFAULT_INSTANCE
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountContract$Args$ForDeferredSetupIntent: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int accessibility_custom_action_15
com.horcrux.svg.R$string: int imagebutton_description
com.google.android.gms.wallet.IsReadyToPayRequest: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.airbnb.mvrx.Async selectAccounts
com.swmansion.reanimated.R$attr: int colorButtonNormal
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category OTHER
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.horcrux.svg.R$styleable: int[] ActionBar
com.horcrux.svg.R$attr: int navigationMode
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItem
com.swmansion.reanimated.R$styleable: int ActionBar_contentInsetStart
com.horcrux.svg.R$attr: int font
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$drawable: int abc_btn_borderless_material
com.horcrux.svg.R$id: int info
com.swmansion.reanimated.R$styleable: int ActionBar_navigationMode
com.swmansion.reanimated.R$styleable: int Spinner_popupTheme
com.swmansion.reanimated.R$anim: int catalyst_fade_out
com.horcrux.svg.R$styleable: int GradientColor_android_centerColor
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
com.horcrux.svg.R$dimen: int abc_search_view_preferred_height
com.horcrux.svg.R$attr: int contentInsetRight
com.swmansion.reanimated.R$styleable: int Toolbar_logo
com.horcrux.svg.R$color: int abc_decor_view_status_guard
com.horcrux.svg.R$style: int Widget_AppCompat_ListView_DropDown
com.horcrux.svg.R$id: int expand_activities_button
com.stripe.android.core.StripeError: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$anim: int abc_slide_in_bottom
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product STANDARD_ONBOARDING
com.google.crypto.tink.proto.AesEaxKey: int KEY_VALUE_FIELD_NUMBER
com.swmansion.reanimated.R$color: int abc_color_highlight_material
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Body2
com.horcrux.svg.R$attr: int drawableTopCompat
com.swmansion.reanimated.R$styleable: int AppCompatTheme_switchStyle
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton_Overflow
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherContractV2$Args: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.swmansion.reanimated.R$id: int accessibility_state
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
com.horcrux.svg.R$id: int fitXY
com.horcrux.svg.RenderableView: com.horcrux.svg.RenderableView contextElement
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
com.horcrux.svg.VirtualViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product$Companion Companion
com.horcrux.svg.R$string: int status_bar_notification_info_overflow
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopLeft
com.google.android.gms.wallet.LoyaltyWalletObject: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int MenuView_android_headerBackground
com.horcrux.svg.R$styleable: int AppCompatTheme_imageButtonStyle
com.stripe.android.financialconnections.model.Entry$Text: com.stripe.android.financialconnections.model.Entry$Text$Companion Companion
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGImage
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_DayNight
com.stripe.android.model.PaymentMethodCreateParams$Card: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
com.swmansion.reanimated.R$styleable: int AppCompatTextView_autoSizeTextType
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionBarSize
com.horcrux.svg.VirtualView: boolean mResponsible
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status INACTIVE
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.swmansion.reanimated.R$styleable: int[] AlertDialog
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.horcrux.svg.R$attr: int textColorSearchUrl
com.horcrux.svg.R$style: int Theme_AppCompat
com.horcrux.svg.R$drawable: int abc_btn_check_material
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.horcrux.svg.R$id: int src_over
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int DEK_TEMPLATE_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int tooltipText
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ROTATION_VECTOR
com.swmansion.reanimated.R$dimen: int abc_text_size_subhead_material
com.swmansion.reanimated.R$dimen: int notification_top_pad_large_text
com.google.crypto.tink.proto.KeyData: int VALUE_FIELD_NUMBER
com.rnmaps.maps.MapModule: java.lang.String NAME
com.swmansion.reanimated.NodesManager: boolean mTryRunBatchUpdatesSynchronously
com.swmansion.reanimated.R$attr: int dividerVertical
com.horcrux.svg.R$id: int decor_content_parent
com.swmansion.reanimated.R$id: int accessibility_custom_action_10
com.horcrux.svg.R$id: int action_bar
com.swmansion.reanimated.R$style: int Base_V28_Theme_AppCompat_Light
com.horcrux.svg.R$style: int Widget_AppCompat_Button
com.horcrux.svg.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.horcrux.svg.R$style: int Base_V28_Theme_AppCompat
com.horcrux.svg.R$attr: int actionBarPopupTheme
com.horcrux.svg.R$styleable: int ActionMode_height
com.stripe.android.paymentsheet.model.PaymentSelection$New$USBankAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product[] $VALUES
com.swmansion.reanimated.R$id: int submit_area
com.horcrux.svg.R$id: int tag_on_apply_window_listener
com.google.crypto.tink.proto.AesCmacKey: int version_
com.horcrux.svg.R$id: int accessibility_label
com.stripe.android.PaymentIntentResult: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int search_mag_icon
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass RNSVGUse
com.swmansion.reanimated.R$id: int default_activity_button
com.horcrux.svg.R$string: int scrollbar_description
com.reactnativecommunity.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus FAILED
com.rnmaps.maps.MapModule: java.lang.String SNAPSHOT_FORMAT_JPG
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualViewManager$SVGClass svgClass
com.stripe.android.stripe3ds2.init.ui.StripeLabelCustomization: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.horcrux.svg.R$drawable: int abc_seekbar_track_material
com.swmansion.reanimated.R$attr: int autoSizeMaxTextSize
com.stripe.android.model.PaymentMethod$Type: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$id: int add
com.stripe.android.ui.core.elements.PostConfirmStatusSpecAssociation: com.stripe.android.ui.core.elements.PostConfirmStatusSpecAssociation$Companion Companion
com.swmansion.reanimated.R$color: int switch_thumb_normal_material_dark
com.horcrux.svg.R$string: int menubar_description
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int KEY_ID_FIELD_NUMBER
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarStyle
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product EMERALD
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
com.swmansion.reanimated.R$attr: int thumbTextPadding
com.swmansion.reanimated.R$anim: int abc_fade_out
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: java.lang.String selectedAccountId
com.swmansion.reanimated.R$styleable: int Spinner_android_popupBackground
com.horcrux.svg.R$styleable: int MenuItem_android_numericShortcut
com.swmansion.reanimated.R$string: int catalyst_debug_chrome_stop
com.swmansion.reanimated.R$style: int Widget_AppCompat_EditText
com.facebook.react.fabric.FabricUIManager$3: com.facebook.react.bridge.ReadableMap val$props
com.horcrux.svg.R$drawable: int test_level_drawable
com.swmansion.reanimated.R$style: int Widget_AppCompat_DrawerArrowToggle
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Body2
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Small
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
com.stripe.android.ui.core.elements.EmailSpec: com.stripe.android.ui.core.elements.EmailSpec$Companion Companion
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textColorSearchUrl
kotlinx.coroutines.sync.MutexImpl: java.lang.Object _state
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.horcrux.svg.R$style: int Theme_AppCompat_Light
com.horcrux.svg.R$styleable: int TextAppearance_fontVariationSettings
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode[] $VALUES
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int LAYOUT
com.horcrux.svg.R$styleable: int Toolbar_contentInsetEnd
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.horcrux.svg.R$styleable: int ActionBar_homeLayout
com.stripe.android.model.Stripe3ds2AuthResult$ThreeDS2Error: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int abc_btn_radio_material
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.stripe.android.financialconnections.presentation.WebAuthFlowState$Success: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int abc_shareactionprovider_share_with_application
com.horcrux.svg.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.horcrux.svg.R$styleable: int ActionBar_indeterminateProgressStyle
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.stripe.android.model.BankAccountTokenParams: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
com.swmansion.reanimated.R$styleable: int Toolbar_titleMarginStart
com.swmansion.reanimated.layoutReanimation.Snapshot: int originXByParent
com.horcrux.svg.R$attr: int contentInsetStart
com.swmansion.reanimated.R$styleable: int PopupWindow_overlapAnchor
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar_Small
com.stripe.android.financialconnections.model.LegalDetailsNotice: com.stripe.android.financialconnections.model.LegalDetailsNotice$Companion Companion
com.swmansion.reanimated.R$attr: int voiceIcon
com.horcrux.svg.R$style: int Base_Widget_AppCompat_TextView
com.horcrux.svg.R$id: int split_action_bar
com.horcrux.svg.R$styleable: int Capability_queryPatterns
com.swmansion.reanimated.R$attr: int homeLayout
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.horcrux.svg.R$dimen: int compat_notification_large_icon_max_height
com.horcrux.svg.R$dimen: int notification_right_side_padding_top
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingDiffStats
com.swmansion.reanimated.R$id: int tag_unhandled_key_event_manager
com.horcrux.svg.R$styleable: int SearchView_defaultQueryHint
com.swmansion.reanimated.R$style: int Base_V23_Theme_AppCompat_Light
com.horcrux.svg.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int ENTERING
com.swmansion.reanimated.R$id: int action_mode_close_button
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState CLOSED
com.horcrux.svg.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.horcrux.svg.R$attr: int actionModeBackground
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod SUPPORT
com.swmansion.reanimated.R$styleable: int Toolbar_titleMargins
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.swmansion.reanimated.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Light
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.horcrux.svg.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.swmansion.reanimated.R$drawable: int abc_control_background_material
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display2
com.swmansion.reanimated.R$style: int Widget_AppCompat_ActionBar
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginY
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.swmansion.reanimated.R$style: int Theme_Catalyst_LogBox
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
com.stripe.android.financialconnections.model.Balance$Type: kotlin.Lazy $cachedSerializer$delegate
com.horcrux.svg.R$drawable: int abc_list_divider_material
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.util.Queue mPendingEventQueue
com.horcrux.svg.R$styleable: int Toolbar_subtitleTextColor
com.swmansion.reanimated.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.swmansion.reanimated.R$styleable: int PopupWindow_android_popupAnimationStyle
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: long MAX_TIME_IN_FRAME
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
com.swmansion.reanimated.R$id: int rn_redbox_report_label
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.google.crypto.tink.proto.AesEaxKey: int version_
com.stripe.android.ui.core.elements.AuBecsDebitMandateTextSpec: com.stripe.android.ui.core.elements.AuBecsDebitMandateTextSpec$Companion Companion
com.swmansion.reanimated.NativeProxy$1: java.lang.ref.WeakReference val$weakLayoutAnimations
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.CppComponentRegistry mCppComponentRegistry
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableTransition
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.horcrux.svg.R$styleable: int AppCompatTheme_colorPrimary
com.swmansion.reanimated.R$dimen: int notification_large_icon_height
com.swmansion.reanimated.R$styleable: int MenuItem_android_menuCategory
com.swmansion.reanimated.R$styleable: int MenuItem_android_orderInCategory
com.rnmaps.maps.MapModule: java.lang.String SNAPSHOT_RESULT_BASE64
com.swmansion.reanimated.R$styleable: int StateListDrawableItem_android_drawable
com.swmansion.reanimated.R$drawable: int notification_action_background
com.horcrux.svg.VirtualView: java.lang.String mClipPath
com.swmansion.reanimated.R$string: int catalyst_dismiss_button
com.google.android.gms.wallet.wobs.TimeInterval: android.os.Parcelable$Creator CREATOR
com.stripe.android.ui.core.elements.SepaMandateTextSpec: com.stripe.android.ui.core.elements.SepaMandateTextSpec$Companion Companion
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_viewAspectRatio
com.swmansion.reanimated.R$id: int view_tag_native_id
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.swmansion.reanimated.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.stripe.android.payments.paymentlauncher.PaymentLauncherContract$Args$PaymentIntentNextActionArgs: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.facebook.react.bridge.WritableMap mNativeProps
com.stripe.android.ui.core.elements.SelectorIcon: com.stripe.android.ui.core.elements.SelectorIcon$Companion Companion
com.horcrux.svg.VirtualView: android.graphics.RectF mBox
com.horcrux.svg.R$styleable: int MenuGroup_android_enabled
com.horcrux.svg.R$color: int foreground_material_dark
com.swmansion.reanimated.R$string: int state_on_description
com.horcrux.svg.R$styleable: int[] Capability
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableRight
com.swmansion.reanimated.R$id: int accessibility_custom_action_25
com.swmansion.reanimated.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.horcrux.svg.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.horcrux.svg.R$id: int title_template
com.horcrux.svg.R$styleable: int TextAppearance_android_textSize
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.horcrux.svg.R$string: int catalyst_debug_chrome
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.android.gms.wallet.wobs.LoyaltyPointsBalance: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int SimpleDraweeView_failureImageScaleType
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_failureImage
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.swmansion.reanimated.R$style: int Widget_Autofill_InlineSuggestionSubtitle
com.swmansion.reanimated.R$color: int abc_decor_view_status_guard
com.horcrux.svg.R$style: int Widget_AppCompat_ListView_Menu
com.horcrux.svg.R$id: int accessibility_custom_action_10
com.swmansion.reanimated.R$dimen: int abc_text_size_display_1_material
com.horcrux.svg.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.swmansion.reanimated.R$drawable: int abc_textfield_activated_mtrl_alpha
com.swmansion.reanimated.R$string: int abc_menu_function_shortcut_label
com.swmansion.reanimated.NodesManager: java.util.concurrent.atomic.AtomicBoolean mCallbackPosted
com.horcrux.svg.R$styleable: int FontFamilyFont_android_ttcIndex
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
com.horcrux.svg.R$id: int accessibility_custom_action_27
com.horcrux.svg.R$attr: int subtitle
com.horcrux.svg.R$string: int abc_capital_off
com.horcrux.svg.R$style: int Animation_Catalyst_LogBox
com.swmansion.reanimated.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.horcrux.svg.R$id: int search_plate
com.horcrux.svg.R$style: int Base_Widget_AppCompat_EditText
com.stripe.android.model.PaymentMethod$Card$Checks: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_RatingBar
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.horcrux.svg.R$string: int state_collapsed_description
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_roundTopRight
com.horcrux.svg.R$dimen: int hint_alpha_material_dark
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.stripe.android.financialconnections.model.DataAccessNotice: com.stripe.android.financialconnections.model.DataAccessNotice$Companion Companion
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.airbnb.mvrx.Async confirmVerification
com.horcrux.svg.R$color: int primary_material_dark
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow TESTMODE_OAUTH_WEBVIEW
com.swmansion.reanimated.R$string: int catalyst_report_button
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
com.horcrux.svg.R$style: int Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomStart
com.swmansion.reanimated.R$id: int search_button
com.google.crypto.tink.proto.KeyTypeEntry: int PRIMITIVE_NAME_FIELD_NUMBER
com.horcrux.svg.R$attr: int subtitleTextAppearance
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.google.crypto.tink.proto.HmacKey: int KEY_VALUE_FIELD_NUMBER
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.horcrux.svg.SvgView: java.lang.Runnable toDataUrlTask
com.swmansion.reanimated.R$layout: int abc_action_mode_bar
com.swmansion.reanimated.R$id: int accessibility_custom_action_31
com.swmansion.reanimated.R$attr: int retryImageScaleType
com.swmansion.reanimated.R$xml: int rn_dev_preferences
com.swmansion.reanimated.R$styleable: int TextAppearance_android_fontFamily
com.swmansion.reanimated.R$id: int view_tree_view_model_store_owner
com.swmansion.reanimated.R$id: int accessibility_actions
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: java.lang.String code
com.google.android.gms.internal.location.zzd: android.os.Parcelable$Creator CREATOR
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$FinishedSpec: com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$FinishedSpec INSTANCE
com.swmansion.reanimated.R$id: int search_plate
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.horcrux.svg.R$color: int switch_thumb_material_light
com.horcrux.svg.R$styleable: int AlertDialog_singleChoiceItemLayout
com.horcrux.svg.R$styleable: int Toolbar_contentInsetLeft
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.airbnb.mvrx.Async payload
com.horcrux.svg.R$layout: int abc_action_mode_bar
com.horcrux.svg.R$string: int menu_description
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.swmansion.reanimated.R$color: int primary_material_light
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.google.crypto.tink.proto.KeyTemplate: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
com.swmansion.reanimated.R$layout: int select_dialog_multichoice_material
com.horcrux.svg.R$attr: int height
com.stripe.android.model.wallets.Wallet$SamsungPayWallet: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int maxButtonHeight
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Title_Inverse
com.horcrux.svg.R$anim: int abc_slide_out_top
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int version_
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
com.horcrux.svg.R$attr: int fontFamily
com.swmansion.reanimated.R$styleable: int MenuItem_actionViewClass
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorControlHighlight
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvTransform
com.swmansion.reanimated.R$attr: int layout
com.swmansion.reanimated.R$styleable: int AppCompatTheme_textAppearanceListItem
com.horcrux.svg.R$attr: int textAppearanceListItemSecondary
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.swmansion.reanimated.R$string: int state_off_description
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.swmansion.reanimated.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.horcrux.svg.R$id: int action_bar_spinner
com.horcrux.svg.VirtualView: double fontSize
com.swmansion.reanimated.R$styleable: int Toolbar_contentInsetEndWithActions
com.swmansion.reanimated.R$attr: int initialActivityCount
com.swmansion.reanimated.R$attr: int actionModeStyle
com.google.crypto.tink.proto.AesCmacParams: int TAG_SIZE_FIELD_NUMBER
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.swmansion.reanimated.R$id: int tag_accessibility_pane_title
com.horcrux.svg.R$styleable: int LinearLayoutCompat_dividerPadding
com.swmansion.reanimated.R$attr: int textLocale
com.swmansion.reanimated.R$drawable: int autofill_inline_suggestion_chip_background
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.horcrux.svg.R$layout: int custom_dialog
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.horcrux.svg.R$attr: int roundTopLeft
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.stripe.android.link.ui.ErrorMessage$FromResources: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList currentKeysToTransform
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int Autofill_InlineSuggestion_isAutofillInlineSuggestionTheme
com.horcrux.svg.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.horcrux.svg.R$styleable: int GradientColorItem_android_color
com.horcrux.svg.R$attr: int roundTopStart
com.swmansion.reanimated.R$color: int abc_background_cache_hint_selector_material_dark
com.horcrux.svg.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.stripe.android.stripe3ds2.transaction.IntentData: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.SvgView: boolean mRemovalTransitionStarted
com.horcrux.svg.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.horcrux.svg.R$styleable: int CheckedTextView_android_checkMark
com.swmansion.reanimated.R$id: int rn_frame_file
com.swmansion.reanimated.R$styleable: int MenuItem_showAsAction
com.horcrux.svg.R$styleable: int[] DrawerArrowToggle
com.swmansion.reanimated.R$attr: int contentDescription
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode AUTOMATIC
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacParams params_
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Medium
com.reactnativestripesdk.StripeSdkModule: java.lang.String NAME
com.stripe.android.core.model.CountryCode: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int actionProviderClass
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.R$attr: int state_above_anchor
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior[] $VALUES
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionEndIconStyle
com.horcrux.svg.R$string: int header_description
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElements
com.horcrux.svg.R$dimen: int abc_button_inset_vertical_material
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_SUSPENDED
com.stripe.android.uicore.elements.PhoneNumberState: com.stripe.android.uicore.elements.PhoneNumberState$Companion Companion
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.R$style: int redboxButton
com.horcrux.svg.R$color: int bright_foreground_inverse_material_light
com.swmansion.reanimated.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.horcrux.svg.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.swmansion.reanimated.R$id: int accessibility_custom_action_19
com.horcrux.svg.R$attr: int listPreferredItemHeightSmall
com.horcrux.svg.R$styleable: int[] ColorStateListItem
com.swmansion.reanimated.NodesManager$1: java.lang.String val$commandId
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.swmansion.reanimated.R$styleable: int AppCompatTheme_colorPrimary
com.horcrux.svg.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.horcrux.svg.R$dimen: int abc_action_bar_content_inset_with_nav
com.horcrux.svg.R$styleable: int GradientColor_android_centerX
com.swmansion.reanimated.R$styleable: int[] TextAppearance
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs$ForToken: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedElementsLookup
com.google.crypto.tink.proto.AesGcmKey: int VERSION_FIELD_NUMBER
com.swmansion.reanimated.R$color: int foreground_material_light
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
com.horcrux.svg.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.stripe.android.financialconnections.model.NetworkingLinkSignupPane: com.stripe.android.financialconnections.model.NetworkingLinkSignupPane$Companion Companion
com.google.crypto.tink.proto.AesCtrParams: int ivSize_
com.horcrux.svg.R$layout: int abc_select_dialog_material
com.swmansion.reanimated.R$styleable: int AppCompatTextView_fontFamily
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_ActionBar
com.horcrux.svg.R$id: int accessibility_custom_action_23
com.horcrux.svg.R$string: int radiogroup_description
com.horcrux.svg.R$attr: int fontProviderQuery
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKey DEFAULT_INSTANCE
com.horcrux.svg.R$attr: int progressBarImage
com.horcrux.svg.RenderableView: float strokeMiterlimit
com.swmansion.reanimated.sensor.ReanimatedSensorListener: android.view.Display display
com.horcrux.svg.R$attr: int windowActionModeOverlay
com.swmansion.reanimated.R$attr: int placeholderImage
com.swmansion.reanimated.R$id: int view_tag_instance_handle
com.horcrux.svg.R$animator: int fragment_open_exit
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.crypto.tink.shaded.protobuf.FieldSet extensions
com.swmansion.reanimated.R$attr: int backgroundSplit
com.horcrux.svg.R$drawable: int btn_checkbox_checked_mtrl
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_Button_Colored
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
com.swmansion.reanimated.R$drawable: int abc_textfield_default_mtrl_alpha
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.horcrux.svg.R$styleable: int SimpleDraweeView_viewAspectRatio
com.horcrux.svg.R$id: int titleDividerNoCustom
com.swmansion.reanimated.R$dimen: int autofill_inline_suggestion_icon_size
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_progressBarImageScaleType
com.horcrux.svg.SvgView: boolean mResponsible
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
com.horcrux.svg.R$styleable: int MenuItem_android_visible
com.horcrux.svg.R$dimen: int tooltip_precise_anchor_threshold
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.facebook.react.fabric.LongStreamingStats: long max
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int status_
com.swmansion.reanimated.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.facebook.react.views.image.ReactImageView: float mBorderRadius
com.horcrux.svg.R$attr: int firstBaselineToTopHeight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.horcrux.svg.R$styleable: int SearchView_android_imeOptions
com.facebook.react.fabric.FabricUIManager$5: com.facebook.react.fabric.FabricUIManager this$0
com.horcrux.svg.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.stripe.android.googlepaylauncher.GooglePayLauncher$Result$Canceled: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutCreateAnimation
com.swmansion.reanimated.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.swmansion.reanimated.R$attr: int actionBarTabStyle
com.horcrux.svg.R$dimen: int abc_button_padding_horizontal_material
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.swmansion.reanimated.R$styleable: int SearchView_goIcon
com.swmansion.reanimated.R$attr: int fontProviderSystemFontFamily
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_Y
com.horcrux.svg.R$color: int abc_primary_text_disable_only_material_light
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$string: int menu_description
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.sensor.ReanimatedSensorContainer reanimatedSensorContainer
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
com.facebook.react.config.ReactFeatureFlags: boolean calculateTransformedFramesEnabled
com.swmansion.reanimated.R$styleable: int TextAppearance_android_textColorHint
com.stripe.android.financialconnections.model.OauthPrepane: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int editTextStyle
com.stripe.android.ui.core.elements.Capitalization: com.stripe.android.ui.core.elements.Capitalization$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModulePromiseAsyncDispatch
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.R$attr: int colorControlHighlight
com.swmansion.reanimated.R$string: int abc_searchview_description_query
com.horcrux.svg.R$attr: int drawableRightCompat
com.stripe.android.model.Card: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$layout: int notification_template_icon_group
com.horcrux.svg.R$attr: int listMenuViewStyle
com.horcrux.svg.R$color: int material_grey_50
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.horcrux.svg.R$attr: int dialogTheme
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
com.swmansion.reanimated.R$attr: int actualImageScaleType
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.google.crypto.tink.proto.HmacKeyFormat: int PARAMS_FIELD_NUMBER
com.stripe.android.view.AddPaymentMethodActivityStarter$Args: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingEnd
com.horcrux.svg.R$style: int Widget_AppCompat_ProgressBar
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod EMAIL
com.stripe.android.financialconnections.model.Entry: com.stripe.android.financialconnections.model.Entry$Companion Companion
com.swmansion.reanimated.R$dimen: int compat_notification_large_icon_max_height
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.R$attr: int queryHint
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext mContext
com.swmansion.reanimated.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.swmansion.reanimated.R$id: int accessibility_value
com.swmansion.reanimated.R$styleable: int MenuItem_android_enabled
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SearchView_android_hint
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontWeight
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.swmansion.reanimated.R$styleable: int SwitchCompat_thumbTintMode
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Menu
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ListView
com.swmansion.reanimated.R$drawable: int abc_btn_check_material_anim
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product CAPITAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.reactnativestripesdk.StripeSdkModule: boolean platformPayUsesDeprecatedTokenFlow
com.horcrux.svg.R$styleable: int SearchView_headerLayout
com.swmansion.reanimated.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.horcrux.svg.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.horcrux.svg.R$id: int contentPanel
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.swmansion.reanimated.R$styleable: int SwitchCompat_android_textOff
com.horcrux.svg.R$attr: int progressBarAutoRotateInterval
com.swmansion.reanimated.R$styleable: int[] ViewStubCompat
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.VirtualViewManager: android.util.SparseArray mTagToRenderableView
com.horcrux.svg.R$id: int text2
com.swmansion.reanimated.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.swmansion.reanimated.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowDx
com.horcrux.svg.RNSVGRenderableManager: int EOF
com.horcrux.svg.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.swmansion.reanimated.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int EXITING
com.swmansion.reanimated.R$attr: int autoSizeTextType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.swmansion.reanimated.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.swmansion.reanimated.R$anim: int abc_slide_out_top
com.facebook.react.uimanager.NativeViewHierarchyManager: android.widget.PopupMenu mPopupMenu
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSnapshotRegistry
com.horcrux.svg.R$styleable: int Spinner_popupTheme
com.swmansion.reanimated.R$style: int Widget_AppCompat_Spinner
com.swmansion.reanimated.R$styleable: int SimpleDraweeView_placeholderImage
com.swmansion.reanimated.R$id: int accessibility_custom_action_29
com.rnmaps.maps.MapMarkerManager: java.util.Map sharedIcons
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.ByteString value_
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.swmansion.reanimated.R$dimen: int disabled_alpha_material_dark
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.swmansion.reanimated.R$dimen: int abc_dialog_fixed_height_major
com.stripe.android.model.SourceOrderParams$Shipping: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int fontProviderQuery
com.swmansion.reanimated.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.horcrux.svg.R$layout: int abc_dialog_title_material
com.horcrux.svg.R$anim: int abc_slide_in_top
com.horcrux.svg.VirtualView: boolean mInvertible
com.horcrux.svg.R$attr: int queryBackground
com.swmansion.reanimated.R$attr: int dividerHorizontal
com.swmansion.reanimated.R$attr: int paddingStart
com.swmansion.reanimated.R$styleable: int AppCompatTextView_drawableTintMode
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageResource
com.swmansion.reanimated.R$attr: int actionViewClass
com.stripe.android.financialconnections.model.NetworkingLinkSignupPane: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int FontFamily_fontProviderFetchStrategy
com.horcrux.svg.R$style: int Base_V22_Theme_AppCompat
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int tickMarkTintMode
com.swmansion.reanimated.R$layout: int notification_template_part_chronometer
com.horcrux.svg.R$attr: int srcCompat
com.swmansion.reanimated.R$drawable: int abc_btn_default_mtrl_shape
com.swmansion.reanimated.R$styleable: int SwitchCompat_showText
com.swmansion.reanimated.R$string: int spinbutton_description
com.swmansion.reanimated.R$drawable: int abc_item_background_holo_dark
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: android.view.View mView
com.horcrux.svg.R$styleable: int[] AppCompatImageView
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.google.crypto.tink.proto.Keyset$Key: int keyId_
com.horcrux.svg.R$attr: int dividerPadding
com.horcrux.svg.VirtualView: java.lang.String mMarkerStart
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mLastQueriedSurfaceMountingManager
com.google.crypto.tink.proto.HmacKey: int PARAMS_FIELD_NUMBER
com.stripe.android.financialconnections.model.FinancialConnectionsSession: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Companion Companion
com.swmansion.reanimated.R$bool: int abc_config_actionMenuItemAllCaps
com.swmansion.reanimated.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
com.horcrux.svg.R$attr: int fontWeight
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.stripe.android.financialconnections.model.LegalDetailsNotice: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect viewEffect
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.swmansion.reanimated.R$style: int TextAppearance_AppCompat_Body2
com.swmansion.reanimated.R$attr: int listPreferredItemPaddingRight
com.google.android.gms.wallet.CardInfo: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int[] FragmentContainerView
com.horcrux.svg.R$attr: int colorBackgroundFloating
com.swmansion.reanimated.R$attr: int divider
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
com.horcrux.svg.R$dimen: int abc_text_size_title_material
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
com.horcrux.svg.R$dimen: int abc_select_dialog_padding_start_material
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow[] $VALUES
com.horcrux.svg.R$layout: int select_dialog_singlechoice_material
com.swmansion.reanimated.R$id: int rn_redbox_reload_button
com.horcrux.svg.RenderableView: int FILL_RULE_NONZERO
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_fadeDuration
com.horcrux.svg.RenderableView: android.graphics.Paint$Cap strokeLinecap
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod[] $VALUES
com.stripe.android.model.ElementsSession$LinkSettings: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.swmansion.reanimated.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.stripe.android.financialconnections.model.ReturningNetworkingUserAccountPicker: com.stripe.android.financialconnections.model.ReturningNetworkingUserAccountPicker$Companion Companion
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.horcrux.svg.R$attr: int state_above_anchor
com.stripe.android.financialconnections.FinancialConnectionsSheetForTokenResult$Completed: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$attr: int alpha
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $VALUES
com.horcrux.svg.R$styleable: int Toolbar_titleTextAppearance
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableItem_android_id
com.swmansion.reanimated.R$style: int Base_ThemeOverlay_AppCompat
com.swmansion.reanimated.R$styleable: int AppCompatTheme_searchViewStyle
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.swmansion.reanimated.R$attr: int windowMinWidthMinor
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane BANK_AUTH_REPAIR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
com.swmansion.reanimated.R$styleable: int LinearLayoutCompat_divider
com.horcrux.svg.R$styleable: int[] GenericDraweeHierarchy
com.stripe.android.model.MandateDataParams: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$styleable: int SearchView_hideNavigationIcon
com.swmansion.reanimated.R$color: int primary_dark_material_light
com.stripe.android.model.PaymentMethodCreateParams$USBankAccount: android.os.Parcelable$Creator CREATOR
com.stripe.android.model.StripeIntent$NextActionData$WeChatPayRedirect: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_TRANSFORM_MATRIX
com.stripe.android.financialconnections.model.PartnerAccount: com.stripe.android.financialconnections.model.PartnerAccount$Companion Companion
com.horcrux.svg.R$id: int search_button
com.facebook.react.uimanager.UIManagerModule: int mNumRootViews
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$Result$Failed: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.horcrux.svg.SvgView: java.util.Map mDefinedTemplates
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.airbnb.mvrx.Async payload
com.swmansion.reanimated.R$dimen: int notification_main_column_padding_top
com.stripe.android.googlepaylauncher.GooglePayLauncherContract$SetupIntentArgs: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ImageButton
com.horcrux.svg.R$dimen: int abc_action_bar_overflow_padding_start_material
com.stripe.android.ui.core.elements.DropdownSpec: com.stripe.android.ui.core.elements.DropdownSpec$Companion Companion
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.stripe.android.model.wallets.Wallet$GooglePayWallet: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$integer: int config_tooltipAnimTime
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.swmansion.reanimated.R$style: int Widget_AppCompat_PopupWindow
com.horcrux.svg.R$layout: int abc_action_bar_up_container
com.horcrux.svg.R$id: int search_voice_btn
com.horcrux.svg.R$layout: int abc_list_menu_item_layout
com.swmansion.reanimated.R$attr: int autofillInlineSuggestionStartIconStyle
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow DIRECT
com.swmansion.reanimated.R$dimen: int abc_control_corner_material
com.swmansion.reanimated.NodesManager: java.util.List mFrameCallbacks
com.horcrux.svg.R$string: int abc_menu_enter_shortcut_label
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int PARAMS_FIELD_NUMBER
com.swmansion.reanimated.R$styleable: int Capability_queryPatterns
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.horcrux.svg.R$id: int scrollIndicatorDown
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxKeyFormat DEFAULT_INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.swmansion.reanimated.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionBar
com.swmansion.reanimated.R$color: int material_blue_grey_900
com.facebook.react.views.view.ReactViewGroup: int DEFAULT_BACKGROUND_COLOR
com.swmansion.reanimated.R$attr: int goIcon
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mPreMountItems
com.swmansion.reanimated.R$styleable: int GradientColor_android_endColor
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.lang.ref.WeakReference mWeakAndroidUIScheduler
com.horcrux.svg.R$styleable: int AppCompatTheme_panelMenuListWidth
com.horcrux.svg.R$id: int line3
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsMountingEnabled
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.ByteString encryptedKeyset_
com.horcrux.svg.R$styleable: int View_theme
com.stripe.android.ui.core.elements.OTPSpec: com.stripe.android.ui.core.elements.OTPSpec INSTANCE
com.facebook.react.fabric.mounting.MountItemDispatcher: int FRAME_TIME_MS
com.swmansion.reanimated.R$styleable: int[] SwitchCompat
com.swmansion.reanimated.BuildConfig: boolean DEBUG
com.horcrux.svg.R$attr: int panelMenuListWidth
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.R$style: int Widget_AppCompat_PopupMenu
com.horcrux.svg.R$attr: int autoSizeMinTextSize
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String mComponent
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.proto.HmacParams DEFAULT_INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.swmansion.reanimated.R$attr: int actionModeCloseDrawable
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.swmansion.reanimated.R$styleable: int ActionMode_backgroundSplit
com.swmansion.reanimated.R$anim: int fragment_fast_out_extra_slow_in
com.horcrux.svg.SvgView: android.graphics.Matrix mInvViewBoxMatrix
com.swmansion.reanimated.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion Companion
com.swmansion.reanimated.R$color: int highlighted_text_material_light
com.swmansion.reanimated.R$style: int TextAppearance_Compat_Notification_Line2
com.horcrux.svg.SvgView: float mScale
com.swmansion.reanimated.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.swmansion.reanimated.R$attr: int backgroundTint
com.horcrux.svg.R$styleable: int AppCompatTheme_textColorSearchUrl
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.swmansion.reanimated.NodesManager$3: java.util.concurrent.Semaphore val$semaphore
com.horcrux.svg.R$styleable: int FontFamily_fontProviderFetchTimeout
com.swmansion.reanimated.R$drawable: int abc_btn_check_to_on_mtrl_000
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.swmansion.reanimated.R$attr: int autoCompleteTextViewStyle
com.facebook.react.config.ReactFeatureFlags: boolean warnOnLegacyNativeModuleSystemUse
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.stripe.android.model.StripeIntent$NextActionData$SdkData$Use3DS1: android.os.Parcelable$Creator CREATOR
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountContract$Args$ForSetupIntent: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int material_deep_teal_200
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.stripe.android.EphemeralOperation$Customer$AttachPaymentMethod: android.os.Parcelable$Creator CREATOR
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product UNKNOWN
com.stripe.android.paymentsheet.PaymentOptionResult$Succeeded: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,java.lang.Double)
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Stack access$1400(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
androidx.compose.animation.core.SpringSpec: SpringSpec()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.horcrux.svg.SvgViewManager: void setNativeBackgroundAndroid(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: ManualEntryState(com.airbnb.mvrx.Async,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.ActivityOptionsCompat$Api16Impl: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView: java.lang.String getUserEntry()
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.rnmaps.maps.MapManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.internal.WindowUtils: WindowUtils()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: boolean component2()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,java.lang.Double)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.reactnativecommunity.picker.ReactPicker: void setDropdownIconRippleColor(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
com.stripe.android.paymentsheet.model.SavedSelection: SavedSelection()
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
androidx.compose.ui.platform.AndroidComposeView: boolean getHasPendingMeasureOrLayout()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.input.PlatformTextInputPluginRegistry getPlatformTextInputPluginRegistry()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setRelease(kotlin.jvm.functions.Function0)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.rnmaps.maps.MapCircleManager: void setCenter(com.rnmaps.maps.MapCircle,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onCatalystInstanceDestroy()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.swmansion.reanimated.R$interpolator: R$interpolator()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.stripe.android.ui.core.elements.autocomplete.model.Place$Type: com.stripe.android.ui.core.elements.autocomplete.model.Place$Type valueOf(java.lang.String)
okhttp3.internal.platform.Platform: Platform()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.stripe.android.ui.core.elements.KeyboardType$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.stripe.android.model.BankAccount$Status: com.stripe.android.model.BankAccount$Status valueOf(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.stripe.android.financialconnections.features.manualentry.ManualEntryState copy$default(com.stripe.android.financialconnections.features.manualentry.ManualEntryState,com.airbnb.mvrx.Async,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.airbnb.mvrx.Async,int,java.lang.Object)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
kotlinx.serialization.json.JsonPrimitive$Companion: JsonPrimitive$Companion()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.VirtualViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.stripe.android.financialconnections.features.success.SuccessViewModel: SuccessViewModel(com.stripe.android.financialconnections.features.success.SuccessState,com.stripe.android.financialconnections.domain.GetCachedAccounts,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.core.Logger,com.stripe.android.financialconnections.domain.CompleteFinancialConnectionsSession,com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.bridge.ReactContext,com.facebook.react.fabric.mounting.SurfaceMountingManager$1)
com.proyecto26.inappbrowser.RNInAppBrowserModule: void isAvailable(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.stripe.android.view.ExpiryDateEditText: void setCompletionCallback$payments_core_release(kotlin.jvm.functions.Function0)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.rnmaps.maps.MapLocalTileManager: void setTileSize(com.rnmaps.maps.MapLocalTile,float)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.PlatformCollatorAndroid: PlatformCollatorAndroid()
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.reactnativecommunity.picker.ReactPickerManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: LinkAccountPickerState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.stripe.android.ui.core.elements.SepaMandateTextSpec: SepaMandateTextSpec()
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
com.rnmaps.maps.MapCalloutManager: com.rnmaps.maps.MapCallout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$AddPaymentMethodStyle: com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$AddPaymentMethodStyle valueOf(java.lang.String)
androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getLayoutNodeToHolder()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: AddressSheetViewManager()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.rnmaps.maps.MapLocalTileManager: MapLocalTileManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
com.google.android.material.progressindicator.BaseProgressIndicator: android.graphics.drawable.Drawable getProgressDrawable()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.stripe.android.uicore.address.NameType$Companion: NameType$Companion()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
okhttp3.CacheControl$Builder: CacheControl$Builder()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.card.MaterialCardView: MaterialCardView(android.content.Context,android.util.AttributeSet)
com.stripe.android.model.ConsumerSession$Companion: kotlinx.serialization.KSerializer serializer()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.reactnativestripesdk.CardFieldViewManager: void setDangerouslyGetFullCardDetails$default(com.reactnativestripesdk.CardFieldViewManager,com.reactnativestripesdk.CardFieldView,boolean,int,java.lang.Object)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()
com.reactcommunity.rndatetimepicker.TimePickerModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: void doFrame(long)
com.stripe.android.ui.core.elements.NextActionSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
org.bouncycastle.asn1.ASN1Object: ASN1Object()
com.horcrux.svg.SvgView: void defineMask(com.horcrux.svg.VirtualView,java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean hasAnimationForTag(int,int)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.google.android.material.search.SearchBar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.swmansion.reanimated.NativeProxy: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder createNativeMethodsHolder(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax valueOf(java.lang.String)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
org.bouncycastle.pqc.crypto.xmss.OTSHashAddress$Builder: OTSHashAddress$Builder()
com.facebook.soloader.SoLoader: SoLoader()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: int hashCode()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutViewsRemoval(int[])
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState copy(com.airbnb.mvrx.Async,java.lang.String,java.lang.String,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect)
com.rnmaps.maps.MapMarkerManager: void setOpacity(com.rnmaps.maps.MapMarker,float)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void addDevMenuOption()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
androidx.constraintlayout.motion.widget.MotionPaths: MotionPaths()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.reactnativecommunity.webview.RNCWebViewClient: RNCWebViewClient()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.reactnativestripesdk.StripeSdkModule: void confirmPayment(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.stripe.android.view.StripeEditText: void setErrorMessageListener(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.stripe.android.view.SelectShippingMethodWidget: com.stripe.android.model.ShippingMethod getSelectedShippingMethod()
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
kotlin.collections.State: kotlin.collections.State[] values()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.reactnativestripesdk.StripeSdkModule: void customerAdapterFetchSelectedPaymentOptionCallback(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.stripe.android.core.networking.DefaultAnalyticsRequestExecutor: DefaultAnalyticsRequestExecutor()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.stripe.android.view.CardMultilineWidget: void setCardNumberTextWatcher(android.text.TextWatcher)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void logViewHierarchy(android.view.ViewGroup,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapPolylineManager: void setZIndex(android.view.View,float)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.MotionScene getScene()
com.google.crypto.tink.proto.KeysetInfo: KeysetInfo()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
androidx.compose.foundation.text.selection.HandleReferencePoint: androidx.compose.foundation.text.selection.HandleReferencePoint valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setY(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
com.horcrux.svg.RenderableViewManager$MaskManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerMid(android.view.View,java.lang.String)
com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl$Reason: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl$Reason valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.swmansion.reanimated.ReanimatedMessageQueueThread: boolean runOnQueue(java.lang.Runnable)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.stripe.android.view.CardInputWidget: com.stripe.android.view.CardBrandView getCardBrandView$payments_core_release()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.airbnb.mvrx.Async getLinkPaymentAccount()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(android.view.View,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.stripe.android.view.PaymentAuthWebView: kotlin.jvm.functions.Function0 getOnLoadBlank$payments_core_release()
com.stripe.android.customersheet.InternalCustomerSheetResult: InternalCustomerSheetResult()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeLinecap(android.view.View,int)
androidx.compose.foundation.text.selection.HandleReferencePoint: androidx.compose.foundation.text.selection.HandleReferencePoint[] values()
com.rnmaps.maps.MapMarkerManager: void setDraggable(com.rnmaps.maps.MapMarker,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.model.BankAccount$Status: com.stripe.android.model.BankAccount$Status[] values()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: HardwareConfigState()
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.google.android.gms.maps.model.zzh: zzh()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,java.lang.Double)
androidx.compose.ui.platform.InspectorInfo: InspectorInfo()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.rnmaps.maps.MapPolylineManager: void setTappable(com.rnmaps.maps.MapPolyline,boolean)
com.stripe.android.stripe3ds2.views.ThreeDS2TextView: ThreeDS2TextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.rnmaps.maps.MapPolygonManager: void setFillColor(com.rnmaps.maps.MapPolygon,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.reactnativecommunity.picker.ReactDropdownPickerManager: void blur(android.view.View)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: NetworkingLinkVerificationState()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType valueOf(java.lang.String)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float)
com.horcrux.svg.SvgViewManager: void setHasTVPreferredFocus(com.horcrux.svg.SvgView,boolean)
com.rnmaps.maps.MapGradientPolylineManager: void setStrokeWidth(com.rnmaps.maps.MapGradientPolyline,float)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(android.view.View,java.lang.Double)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.imagepicker.ImagePickerModule: ImagePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,java.lang.String)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.rnmaps.maps.MapOverlay: com.google.android.gms.maps.model.GroundOverlay getGroundOverlay()
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.horcrux.svg.SvgView$Events: java.lang.String toString()
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.facebook.react.bridge.NativeModule: void initialize()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.stripe.android.model.ConfirmPaymentIntentParams$SetupFutureUsage: com.stripe.android.model.ConfirmPaymentIntentParams$SetupFutureUsage valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.model.SourceParams$Flow: com.stripe.android.model.SourceParams$Flow[] values()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: int hashCode()
com.horcrux.svg.SvgView: void setVbHeight(float)
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean,boolean)
com.stripe.android.ui.core.elements.autocomplete.model.Place$Type: com.stripe.android.ui.core.elements.autocomplete.model.Place$Type[] values()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
com.reactcommunity.rndatetimepicker.DatePickerModule: void lambda$open$0(androidx.fragment.app.FragmentManager,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMask(android.view.View,java.lang.String)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.stripe.android.model.PaymentMethodOptionsParams$USBankAccount: PaymentMethodOptionsParams$USBankAccount()
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType[] values()
kotlin.Unit: Unit()
kotlinx.coroutines.CancelHandler: CancelHandler()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState copy$default(com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
com.stripe.android.financialconnections.features.reset.ResetState: boolean equals(java.lang.Object)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState)
com.stripe.android.customersheet.CustomerAdapter$Result$Companion: CustomerAdapter$Result$Companion()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor access$902(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutEnd()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: boolean haveExceededNonBatchedFrameTime(long)
com.rnmaps.maps.MapCalloutManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.jni.CppException: CppException(java.lang.String)
com.stripe.android.financialconnections.model.Cta$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.model.VisualUpdate$Companion: kotlinx.serialization.KSerializer serializer()
androidx.constraintlayout.motion.widget.MotionLayout: void setInteractionEnabled(boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.dropShadow.DropShadowLayout: void setShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnScroll(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.stripe.android.uicore.image.ImageType: com.stripe.android.uicore.image.ImageType[] values()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
com.stripe.android.ui.core.elements.KlarnaCountrySpec$Companion: KlarnaCountrySpec$Companion()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.facebook.react.ReactRootView: void setRootViewTag(int)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setClipPath(android.view.View,java.lang.String)
com.google.crypto.tink.aead.AeadWrapper: AeadWrapper()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.stripe.android.financialconnections.model.Balance$Type: java.lang.String getValue()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeMiterlimit(android.view.View,float)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.facebook.react.fabric.FabricUIManager$4: void run()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.stripe.android.stripe3ds2.views.InformationZoneView: InformationZoneView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.VirtualView: void setClipRule(int)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.work.Operation$State$SUCCESS: Operation$State$SUCCESS()
com.stripe.android.model.SourceParams$OwnerParams: SourceParams$OwnerParams()
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
com.stripe.android.link.serialization.PopupPayload$MerchantInfo$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(android.view.View,java.lang.Double)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status$Companion: FinancialConnectionsAccount$Status$Companion()
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
com.rnmaps.maps.MapMarkerManager: void setAnchor(com.rnmaps.maps.MapMarker,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.reactnativestripesdk.StripeSdkModule: java.util.Map getConstants()
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
com.reactnativestripesdk.CardFieldView: void setPostalCodeEnabled(boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.BV.LinearGradient.LinearGradientView: void setEndPoint(com.facebook.react.bridge.ReadableArray)
com.reactnativepagerview.PagerViewViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.stripe.android.financialconnections.features.reset.ResetState: ResetState(com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.font.FontFamily$Resolver getFontFamilyResolver()
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.horcrux.svg.SvgView: com.horcrux.svg.Brush getDefinedBrush(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeLinejoin(android.view.View,int)
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder[] values()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.horcrux.svg.VirtualViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.material.search.SearchBar: void setHint(int)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.nimbusds.jose.shaded.json.JSONObject: JSONObject()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapOverlayManager: void setBearing(com.rnmaps.maps.MapOverlay,float)
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.react.views.slider.ReactSlider: void setValue(double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.stripe.android.stripe3ds2.views.Brand: com.stripe.android.stripe3ds2.views.Brand[] values()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setSelected(android.view.View,int)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void viewDidLayout(android.view.View)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2Button getSubmitButton$3ds2sdk_release()
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setClipRule(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getNullableViewState(int)
com.stripe.android.financialconnections.utils.PollTimingOptions: PollTimingOptions()
com.reactnativecommunity.picker.ReactDialogPickerManager: void focus(android.view.View)
androidx.compose.material.ModalBottomSheetValue: androidx.compose.material.ModalBottomSheetValue valueOf(java.lang.String)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.stripe.android.core.networking.DefaultStripeNetworkClient: DefaultStripeNetworkClient()
androidx.compose.ui.viewinterop.ViewFactoryHolder: void setReleaseBlock(kotlin.jvm.functions.Function1)
com.stripe.android.ui.core.elements.NameSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.bumptech.glide.gifdecoder.GifHeaderParser: GifHeaderParser()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setConfirmedIconDrawable(int)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
kotlin.jvm.internal.Ref$LongRef: Ref$LongRef()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.constraintlayout.motion.widget.KeyTimeCycle: KeyTimeCycle()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.rnmaps.maps.MapModule: void getMapBoundaries(int,com.facebook.react.bridge.Promise)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: PartnerAuthState(java.lang.String,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setClipRule(android.view.View,int)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
com.reactnativestripesdk.StripeSdkModule: com.stripe.android.Stripe access$getStripe$p(com.reactnativestripesdk.StripeSdkModule)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes[] values()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMask(android.view.View,java.lang.String)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetState copy(com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs,boolean,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest,com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus,com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(android.view.View,java.lang.Double)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.compose.ui.graphics.vector.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.rnmaps.maps.MapUrlTileManager: void setZIndex(com.rnmaps.maps.MapUrlTile,float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.gms.wallet.wobs.CommonWalletObject: CommonWalletObject()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.reactnativestripesdk.CardFieldView: void setDangerouslyGetFullCardDetails(boolean)
com.stripe.android.stripe3ds2.views.BrandZoneView: android.widget.ImageView getPaymentSystemImageView$3ds2sdk_release()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.android.material.search.SearchView: void setTransitionState(com.google.android.material.search.SearchView$TransitionState)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.stripe.android.paymentsheet.state.LinkState$LoginState: com.stripe.android.paymentsheet.state.LinkState$LoginState valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs: ConfirmResponseStatusSpecs()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: java.lang.String getValue()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createView(java.lang.String,int,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest getManifest()
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.reactnativestripesdk.utils.GooglePayErrorType: com.reactnativestripesdk.utils.GooglePayErrorType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.reactnativecommunity.webview.RNCWebViewManager: void setDownloadingMessage(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.reactnativestripesdk.StripeContainerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.stripe.android.financialconnections.model.OauthPrepane$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerEnd(android.view.View,java.lang.String)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void deleteView(int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.horcrux.svg.SvgViewManager: void setBorderStartColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(android.view.View,float)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(android.view.View,java.lang.String)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean equals(java.lang.Object)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.bumptech.glide.request.RequestOptions: RequestOptions()
com.stripe.android.paymentsheet.ui.PrimaryButton: boolean getLockVisible$paymentsheet_release()
com.horcrux.svg.RenderableViewManager$PatternManager: void setResponsible(android.view.View,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.horcrux.svg.SvgViewManager: void setBorderTopColor(android.view.View,java.lang.Integer)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async component4()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.stripe.android.view.MaskedCardView: java.lang.String getLast4()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.azendoo.reactnativesnackbar.SnackbarModule: boolean getOptionValue(com.facebook.react.bridge.ReadableMap,java.lang.String,boolean)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.TurboReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.reactnativestripesdk.utils.ConfirmSetupIntentErrorType: com.reactnativestripesdk.utils.ConfirmSetupIntentErrorType[] values()
com.horcrux.svg.VirtualViewManager: void resetTransformProperty(android.view.View)
androidx.compose.ui.draw.CacheDrawScope: CacheDrawScope()
com.horcrux.svg.SvgPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setInlineSize(com.horcrux.svg.TextView,java.lang.Double)
com.stripe.android.view.CardMultilineWidget: android.widget.LinearLayout getSecondRowLayout()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerStart(android.view.View,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,java.lang.Double)
com.stripe.android.view.PostalCodeEditText: com.stripe.android.view.PostalCodeEditText$Config getConfig$payments_core_release()
com.stripe.android.ui.core.elements.DisplayField: com.stripe.android.ui.core.elements.DisplayField valueOf(java.lang.String)
com.stripe.android.model.BankAccountTokenParams$Type: com.stripe.android.model.BankAccountTokenParams$Type[] values()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.stripe.android.view.CardMultilineWidget: com.google.android.material.textfield.TextInputLayout getPostalInputLayout$payments_core_release()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: FinancialConnectionsSessionManifest$Product(java.lang.String,int,java.lang.String)
androidx.viewpager.widget.ViewPager: int getClientWidth()
com.stripe.android.paymentsheet.ui.PrimaryButton: void setDefaultLabelColor(int)
okhttp3.internal.http2.Http2: Http2()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
androidx.compose.ui.graphics.CanvasZHelper: void enableZ(android.graphics.Canvas,boolean)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void resetPerfStats()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void clearAnimationConfigForTag(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateProps(int,java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: LayoutAnimations$Types()
com.horcrux.svg.RenderableView: RenderableView(com.facebook.react.bridge.ReactContext)
com.stripe.android.core.browser.BrowserCapabilities: com.stripe.android.core.browser.BrowserCapabilities valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean shouldAnimateExiting(int,boolean)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
androidx.constraintlayout.motion.widget.KeyCycle: KeyCycle()
com.stripe.android.ui.core.elements.CountrySpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback access$700(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapManager: void setShowBuildings(com.rnmaps.maps.MapView,boolean)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.rnmaps.maps.MapPolyline: void setZIndex(float)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
androidx.compose.runtime.DerivedSnapshotState$ResultRecord: DerivedSnapshotState$ResultRecord()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String)
androidx.compose.foundation.gestures.DragEvent: DragEvent()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.rnmaps.maps.MapMarker: void setDraggable(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(com.swmansion.rnscreens.Screen,float)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.airbnb.mvrx.Async component1()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String component3()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDx(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.stripe.android.GooglePayJsonFactory$TransactionInfo$TotalPriceStatus: com.stripe.android.GooglePayJsonFactory$TransactionInfo$TotalPriceStatus valueOf(java.lang.String)
com.stripe.android.view.CardFormView: java.util.Collection getAllEditTextFields()
com.reactcommunity.rndatetimepicker.DatePickerModule: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableView: void initBounds()
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableMap copyReadableMap(com.facebook.react.bridge.ReadableMap)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.stripe.android.ui.core.elements.autocomplete.model.AddressComponent$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.stripe.android.financialconnections.features.reset.ResetState: ResetState()
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
com.stripe.android.view.CardFormView$Style: com.stripe.android.view.CardFormView$Style[] values()
com.horcrux.svg.SvgViewManager: void setNextFocusLeft(android.view.View,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.airbnb.mvrx.Loading: Loading()
com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus: com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus valueOf(java.lang.String)
com.stripe.android.paymentsheet.ui.BaseSheetActivity: BaseSheetActivity()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(android.view.View,java.lang.Double)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.stripe.android.view.StripeEditText: void setTextColor(int)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.stripe.android.view.BecsDebitAccountNumberEditText: int getMinLength()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.view.CountryTextInputLayout: com.stripe.android.core.model.CountryCode getSelectedCountryCode()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean getSubmitEnabled()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.compose.ui.platform.AndroidComposeView: android.view.View findViewByAccessibilityIdTraversal(int)
com.google.android.gms.internal.common.zzc: zzc()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(android.view.View,float)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: java.lang.String toString()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.stripe.android.financialconnections.model.ConsentPane$Companion: ConsentPane$Companion()
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.ReadableMap)
com.reactnativestripesdk.StripeSdkModule: void verifyMicrodeposits(boolean,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidAccessibilityManager getAccessibilityManager()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest component3()
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.google.android.material.search.SearchView: int getSoftInputMode()
com.stripe.android.view.SelectShippingMethodWidget: void setShippingMethodSelectedCallback(kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.google.android.material.search.SearchView: com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState()
com.stripe.android.financialconnections.model.PartnerAccountsList$Companion: PartnerAccountsList$Companion()
com.stripe.android.link.model.AccountStatus: com.stripe.android.link.model.AccountStatus[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setName(android.view.View,java.lang.String)
com.stripe.android.view.CardMultilineWidget: void setExpirationDatePlaceholderRes(java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void setJSResponder(int,int,boolean)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
com.stripe.android.model.SourceOrderParams$Item$Type: com.stripe.android.model.SourceOrderParams$Item$Type[] values()
com.rnmaps.maps.MapManager: void setInitialCamera(com.rnmaps.maps.MapView,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: boolean valid(kotlin.Pair)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setName(android.view.View,java.lang.String)
com.stripe.android.model.LuxePostConfirmActionRepository$Result: LuxePostConfirmActionRepository$Result()
com.stripe.android.financialconnections.features.consent.ConsentClickableText: com.stripe.android.financialconnections.features.consent.ConsentClickableText valueOf(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel: ManualEntryViewModel(com.stripe.android.financialconnections.features.manualentry.ManualEntryState,com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator,com.stripe.android.financialconnections.domain.PollAttachPaymentAccount,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetOrFetchSync,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams getParams$ui_release()
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod[] values()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getCTM(java.lang.Double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.stripe.android.model.PaymentIntent$Error$Type: com.stripe.android.model.PaymentIntent$Error$Type valueOf(java.lang.String)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
androidx.compose.ui.platform.RenderNodeApi29VerificationHelper: void setRenderEffect(android.graphics.RenderNode,androidx.compose.ui.graphics.RenderEffect)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
androidx.work.Constraints: Constraints()
com.stripe.android.ui.core.elements.NextActionSpec$Companion: NextActionSpec$Companion()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: boolean equals(java.lang.Object)
com.stripe.android.core.utils.PluginDetector$PluginType: com.stripe.android.core.utils.PluginDetector$PluginType valueOf(java.lang.String)
androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation valueOf(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.bumptech.glide.manager.RequestManagerFragment: RequestManagerFragment()
com.horcrux.svg.SvgPackage: SvgPackage()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.reactnativecommunity.picker.ReactPickerManager: com.reactnativecommunity.picker.ReactPickerShadowNode createShadowNodeInstance()
com.stripe.android.model.ConsumerSession$VerificationSession$Companion: ConsumerSession$VerificationSession$Companion()
com.reactnativestripesdk.CardFieldViewManager: void onDropViewInstance(com.reactnativestripesdk.CardFieldView)
com.imagepicker.ImagePickerModule: void launchCamera(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.reactnativestripesdk.utils.ConfirmPaymentErrorType: com.reactnativestripesdk.utils.ConfirmPaymentErrorType valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
okio.Options$Companion: Options$Companion()
com.stripe.android.stripe3ds2.views.ChallengeZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getWhitelistingLabel$3ds2sdk_release()
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.compose.ui.platform.AbstractComposeView: void getDisposeViewCompositionStrategy$annotations()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.swmansion.reanimated.NodesManager: void initWithContext(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeLinejoin(android.view.View,int)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async component1()
com.horcrux.svg.VirtualViewManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setResponsible(android.view.View,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getViewState(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,java.lang.Double)
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.bridge.JSIModule get()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.reactnativestripesdk.CardFieldViewManager: java.lang.String getName()
com.stripe.android.view.NetbankingBank: com.stripe.android.view.NetbankingBank[] values()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.compose.foundation.BorderCache: BorderCache()
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
com.stripe.android.view.PaymentAuthWebViewActivity: PaymentAuthWebViewActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: SurfaceMountingManager$ViewEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,boolean,int)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebView)
com.stripe.android.model.Address: Address()
com.stripe.android.networking.PaymentAnalyticsRequestFactory$ThreeDS2UiType: com.stripe.android.networking.PaymentAnalyticsRequestFactory$ThreeDS2UiType valueOf(java.lang.String)
com.stripe.android.view.CardFormView: com.stripe.android.model.CardParams getCardParams()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode()
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.horcrux.svg.VirtualView: void saveDefinition()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.facebook.react.fabric.SurfaceHandlerBinding: void start()
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
androidx.compose.ui.platform.AndroidComposeView: void setShowLayoutBounds(boolean)
com.horcrux.svg.SvgPackage: java.util.Map getViewManagersMap(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.model.BankAccount$Type: java.lang.String toString()
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
com.horcrux.svg.SvgViewManager: void setBorderColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.NativeViewHierarchyManager: void computeBoundingBox(android.view.View,int[])
com.rnmaps.maps.MapMarker: android.view.View getInfoContents()
com.stripe.android.ui.core.elements.PostConfirmStatusSpecAssociation$Companion: kotlinx.serialization.KSerializer serializer()
com.proyecto26.inappbrowser.ChromeTabsManagerActivity: ChromeTabsManagerActivity()
com.stripe.android.financialconnections.model.NetworkedAccount$Companion: NetworkedAccount$Companion()
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalBias(float)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void source(com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setVerticalAlign(android.view.View,java.lang.String)
com.rnmaps.maps.MapUrlTile: void setMinimumZ(float)
com.stripe.android.uicore.elements.PhoneNumberFormatter: PhoneNumberFormatter()
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
androidx.compose.ui.node.LayoutNode$UsageByParent: androidx.compose.ui.node.LayoutNode$UsageByParent[] values()
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.stripe.android.ui.core.elements.IbanSpec$Companion: IbanSpec$Companion()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.google.android.material.ripple.RippleUtils: RippleUtils()
com.dropShadow.DropShadowModule: void addView(com.dropShadow.DropShadowLayout,android.view.View,int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.swmansion.gesturehandler.core.ManualGestureHandler: ManualGestureHandler()
kotlinx.coroutines.channels.Send: Send()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.proyecto26.inappbrowser.RNInAppBrowserModule: void close()
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion: FinancialConnectionsSheetViewModel$Companion()
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.fabric.SurfaceHandler)
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$Mode: PaymentSheet$IntentConfiguration$Mode()
com.stripe.android.model.SourceOrder$Shipping: SourceOrder$Shipping()
com.reactnativestripesdk.StripeSdkModule: void createTokenFromCard(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void reset()
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion: com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void checkDuplicateSharedTag(int,int)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.stripe.android.financialconnections.features.accountpicker.AccountPickerState copy(com.airbnb.mvrx.Async,boolean,com.airbnb.mvrx.Async,java.util.Set)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.stripe.android.paymentsheet.model.PaymentSelection$New: PaymentSelection$New()
com.rnmaps.maps.MapCallout: void setTooltip(boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.GetFinancialConnectionsAcccountsParams$Companion: kotlinx.serialization.KSerializer serializer()
androidx.viewpager2.widget.ViewPager2: int getScrollState()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.stripe.android.model.StripeIntent$Status: com.stripe.android.model.StripeIntent$Status[] values()
com.stripe.android.view.PaymentFlowPage: com.stripe.android.view.PaymentFlowPage valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,java.lang.String)
androidx.compose.runtime.saveable.SaveableStateHolderImpl: SaveableStateHolderImpl()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.activity.result.ActivityResultLauncher: ActivityResultLauncher()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int subscribeForKeyboardEvents(com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater,boolean)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
com.swmansion.reanimated.ReanimatedUIManagerFactory: ReanimatedUIManagerFactory()
com.rnmaps.maps.MapUrlTileManager: void setOfflineMode(com.rnmaps.maps.MapUrlTile,boolean)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.stripe.android.stripe3ds2.views.InformationZoneView: void getWhyLabel$3ds2sdk_release$annotations()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes[] $values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
com.stripe.android.view.CardInputWidget$Field: com.stripe.android.view.CardInputWidget$Field[] values()
androidx.cardview.widget.CardView: void setCardElevation(float)
com.stripe.android.stripe3ds2.transactions.ErrorData$ErrorComponent: com.stripe.android.stripe3ds2.transactions.ErrorData$ErrorComponent valueOf(java.lang.String)
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme valueOf(java.lang.String)
com.reactnativepagerview.PagerViewViewManager: void createViewInstance$lambda-0(androidx.viewpager2.widget.ViewPager2,com.reactnativepagerview.PagerViewViewManager,com.reactnativepagerview.NestedScrollableHost)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.google.android.material.progressindicator.BaseProgressIndicator: int getTrackColor()
com.google.android.material.search.SearchBar: void setDefaultScrollFlagsEnabled(boolean)
androidx.compose.ui.viewinterop.AndroidViewHolder: androidx.compose.ui.Modifier getModifier()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] values()
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType[] values()
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
androidx.compose.ui.semantics.SemanticsConfiguration: SemanticsConfiguration()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion: AccountPickerViewModel$Companion()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void preallocateView(java.lang.String,int,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.reactnativecommunity.picker.ReactDialogPickerManager: void setSelected(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
androidx.compose.foundation.layout.SizeMode: androidx.compose.foundation.layout.SizeMode valueOf(java.lang.String)
kotlin.DeepRecursiveScope: DeepRecursiveScope()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.nimbusds.jose.util.Base64Codec: Base64Codec()
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.rnmaps.maps.MapMarker: com.google.android.gms.maps.model.BitmapDescriptor getIcon()
com.google.crypto.tink.proto.HmacKey$Builder: HmacKey$Builder()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void orderByAnimationTypes(java.util.List)
com.stripe.android.googlepaylauncher.GooglePayLauncher$BillingAddressConfig: GooglePayLauncher$BillingAddressConfig()
androidx.constraintlayout.motion.widget.MotionInterpolator: MotionInterpolator()
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.stripe.android.view.CardInputWidget: int getFrameWidth()
com.rnmaps.maps.MapCircle: void setZIndex(float)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffDuration()
com.horcrux.svg.VirtualView: void clearCache()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setResponsible(android.view.View,boolean)
androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation[] values()
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: ReanimatedKeyboardEventListener$KeyboardState(java.lang.String,int,int)
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.BV.LinearGradient.LinearGradientManager: com.BV.LinearGradient.LinearGradientView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableView: void setFillOpacity(float)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void handleNextActionForSetup(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
com.stripe.android.paymentsheet.ui.PrimaryButton: void setLockIconDrawable(int)
com.swmansion.reanimated.ReanimatedPackage$1: ReanimatedPackage$1(com.swmansion.reanimated.ReanimatedPackage,java.util.Map)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent: com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: void attachRootView(int,android.view.View,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.horcrux.svg.VirtualView: void setMarkerStart(java.lang.String)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel: PartnerAuthViewModel(com.stripe.android.financialconnections.domain.CompleteAuthorizationSession,com.stripe.android.financialconnections.domain.PostAuthorizationSession,com.stripe.android.financialconnections.domain.CancelAuthorizationSession,com.stripe.android.financialconnections.domain.RetrieveAuthorizationSession,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,java.lang.String,com.stripe.android.financialconnections.utils.UriUtils,com.stripe.android.financialconnections.domain.PostAuthSessionEvent,com.stripe.android.financialconnections.domain.GetOrFetchSync,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.financialconnections.domain.PollAuthorizationSessionOAuthResults,com.stripe.android.core.Logger,com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updatePadding(int,int,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: boolean equals(java.lang.Object)
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events valueOf(java.lang.String)
com.nimbusds.jose.shaded.asm.BeansAccess: BeansAccess()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: boolean getCanNavigateBack()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void preInitializeViewManagers(java.util.List)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion: com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState)
com.facebook.react.bridge.BaseJavaModule: void initialize()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.google.android.material.search.SearchView: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.dropShadow.DropShadowModule: void onDropViewInstance(com.dropShadow.DropShadowLayout)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isDate(android.view.autofill.AutofillValue)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDashoffset(android.view.View,float)
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.stripe.android.view.AddPaymentMethodNetbankingView: com.stripe.android.model.PaymentMethodCreateParams getCreateParams()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.reactnativecommunity.picker.ReactDropdownPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.stripe.android.paymentsheet.PaymentOptionsItem$ViewType: com.stripe.android.paymentsheet.PaymentOptionsItem$ViewType valueOf(java.lang.String)
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.stripe.android.financialconnections.ui.components.FinancialConnectionsButton$Type: FinancialConnectionsButton$Type()
com.stripe.android.stripe3ds2.transaction.TransactionStatus: com.stripe.android.stripe3ds2.transaction.TransactionStatus valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
androidx.work.impl.utils.futures.AbstractFuture$Waiter: AbstractFuture$Waiter()
okhttp3.EventListener: EventListener()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(double,boolean)
com.rnmaps.maps.MapPolyline: void setWidth(float)
androidx.lifecycle.LifecycleService: LifecycleService()
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
com.facebook.react.fabric.Binding: Binding()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
kotlinx.serialization.json.JsonObject$Companion: JsonObject$Companion()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: java.lang.Boolean component1()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher access$000(com.facebook.react.fabric.FabricUIManager)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: AddToWalletButtonManager(android.content.Context)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,java.lang.Double)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.compose.ui.autofill.AutofillType: androidx.compose.ui.autofill.AutofillType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.stripe.android.link.model.AccountStatus: com.stripe.android.link.model.AccountStatus valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator$Message$Terminate$EarlyTerminationCause: com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator$Message$Terminate$EarlyTerminationCause valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async getResendOtp()
androidx.compose.material.DrawerValue: androidx.compose.material.DrawerValue[] values()
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.consent.ConsentState: ConsentState(com.airbnb.mvrx.Async,java.util.List,com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setName(android.view.View,java.lang.String)
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.rnmaps.maps.MapModule: void takeSnapshot(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.reactnativestripesdk.CardFieldView: void setDisabled(boolean)
com.google.android.material.progressindicator.LinearProgressIndicator: LinearProgressIndicator(android.content.Context,android.util.AttributeSet)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.stripe.android.view.CardMultilineWidget: void setCardInputListener(com.stripe.android.view.CardInputListener)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean getAllAccountsSelected()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.google.android.material.progressindicator.BaseProgressIndicator: com.google.android.material.progressindicator.IndeterminateDrawable getIndeterminateDrawable()
com.google.android.material.progressindicator.CircularProgressIndicator: CircularProgressIndicator(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
org.bouncycastle.asn1.ASN1Set: ASN1Set()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.google.android.material.search.SearchView: int getStatusBarHeight()
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.horcrux.svg.SvgView: void defineMarker(com.horcrux.svg.VirtualView,java.lang.String)
com.rnmaps.maps.MapView: void setShowsUserLocation(boolean)
com.rnmaps.maps.MapPolygonManager: void setZIndex(com.rnmaps.maps.MapPolygon,float)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.google.maps.android.ui.RotationLayout: void setViewRotation(int)
com.facebook.react.modules.core.TimingModule: void initialize()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State copy(java.lang.Boolean)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toCurrentMap()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,java.lang.Double)
com.stripe.android.view.StripeEditText: void setAfterTextChangedListener(com.stripe.android.view.StripeEditText$AfterTextChangedListener)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.facebook.jni.HybridData getHybridData()
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: AesCtrHmacAeadKeyFormat()
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void createPlatformPayPaymentMethod(com.facebook.react.bridge.ReadableMap,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.rnmaps.maps.MapUrlTile: java.lang.Object getFeature()
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set access$1500(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: NetworkingLinkVerificationState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.airbnb.mvrx.Async getPayload()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
androidx.compose.ui.text.android.StaticLayoutFactory33: boolean isFallbackLineSpacingEnabled(android.text.StaticLayout)
com.stripe.android.customersheet.CustomerAdapter$Result: CustomerAdapter$Result()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.stripe.android.stripe3ds2.transactions.ProtocolError: com.stripe.android.stripe3ds2.transactions.ProtocolError[] values()
com.stripe.android.view.CardInputWidget: com.google.android.material.textfield.TextInputLayout getPostalCodeTextInputLayout$payments_core_release()
com.stripe.android.customersheet.CustomerSheetResult: CustomerSheetResult()
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect component6()
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,java.lang.Double)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.VirtualView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.airbnb.mvrx.Async getPayload()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.rnmaps.maps.MapHeatmapManager: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.horcrux.svg.SvgView: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,java.lang.Double)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int getRetries()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativepagerview.PagerViewViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setOnRequestDisallowInterceptTouchEvent$ui_release(kotlin.jvm.functions.Function1)
com.stripe.android.link.analytics.LinkEvent: LinkEvent()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: void setResendButtonClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.stripe.android.paymentsheet.ui.PrimaryButton: void getExternalLabel$paymentsheet_release$annotations()
com.facebook.react.uimanager.events.Event: Event()
com.reactnativepagerview.PagerViewViewManager: PagerViewViewManager()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,java.lang.String)
com.stripe.android.stripe3ds2.views.ChallengeZoneTextView: java.lang.String getUserEntry()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.stripe.android.financialconnections.model.AddNewAccount$Companion: AddNewAccount$Companion()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: FinancialConnectionsSession$Status(java.lang.String,int,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(com.reactnativecommunity.webview.RNCWebViewWrapper)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource()
com.facebook.react.turbomodule.core.TurboModuleManager: void maybeLoadSoLibrary()
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$CaptureMethod: com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$CaptureMethod valueOf(java.lang.String)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String toString()
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.compose.ui.layout.Placeable$PlacementScope: Placeable$PlacementScope()
kotlinx.coroutines.NodeList: NodeList()
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
com.swmansion.reanimated.NodesManager: void onHostResume()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: ReanimatedKeyboardEventListener$WindowInsetsCallback(com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.horcrux.svg.RenderableView: android.graphics.Rect getHitSlopRect()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
com.google.android.gms.wallet.LoyaltyWalletObject: LoyaltyWalletObject()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.rnmaps.maps.MapHeatmapManager: void setRadius(com.rnmaps.maps.MapHeatmap,int)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.reactcommunity.rndatetimepicker.TimePickerModule: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState[] values()
com.horcrux.svg.SvgViewManager: void setBorderTopEndRadius(com.horcrux.svg.SvgView,float)
com.horcrux.svg.SvgViewManager: void setFocusable(com.horcrux.svg.SvgView,boolean)
kotlinx.coroutines.YieldContext: YieldContext()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void incrementRetries()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.stripe.android.view.CountryTextInputLayout: java.util.Locale getLocale()
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String,int)
com.stripe.android.financialconnections.model.Display$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: int asInt()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State copy$default(com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State,java.lang.Boolean,int,java.lang.Object)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionState(android.os.Bundle)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dismissPopupMenu()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
com.facebook.react.bridge.UIManager: void preInitializeViewManagers(java.util.List)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: void run()
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(com.th3rdwave.safeareacontext.SafeAreaViewEdges)
com.stripe.android.view.MaskedCardView: com.stripe.android.model.CardBrand getCardBrand()
com.stripe.android.model.StripeIntent$Status: com.stripe.android.model.StripeIntent$Status valueOf(java.lang.String)
com.google.crypto.tink.proto.AesCmacParams: AesCmacParams()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.reactnativestripesdk.StripeSdkModule: void isCardInWallet(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: void setRadius(android.graphics.drawable.RippleDrawable,int)
com.swmansion.reanimated.AndroidUIScheduler: java.lang.Runnable access$100(com.swmansion.reanimated.AndroidUIScheduler)
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel: NetworkingLinkSignupViewModel(com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState,com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository,com.stripe.android.financialconnections.domain.SaveAccountToLink,com.stripe.android.financialconnections.domain.LookupAccount,com.stripe.android.financialconnections.utils.UriUtils,com.stripe.android.financialconnections.domain.GetCachedAccounts,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.domain.SynchronizeFinancialConnectionsSession,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.rnmaps.maps.MapMarker: void setRotation(float)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setNextFocusForward(android.view.View,int)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: java.lang.String toString()
androidx.navigation.Navigator: Navigator()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(android.view.View,java.lang.Double)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.crypto.tink.mac.MacKey: MacKey()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.stripe.android.link.serialization.PopupPayload$MerchantInfo$Companion: PopupPayload$MerchantInfo$Companion()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.financialconnections.features.success.SuccessState: com.stripe.android.financialconnections.features.success.SuccessState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.uimanager.RootViewManager: RootViewManager()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.google.crypto.tink.proto.Keyset$Key: Keyset$Key()
com.stripe.android.model.PaymentIntent$ConfirmationMethod: com.stripe.android.model.PaymentIntent$ConfirmationMethod[] values()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean getFirstInit()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason$Companion: FinancialConnectionsSession$StatusDetails$Cancelled$Reason$Companion()
com.stripe.android.ui.core.CardBillingDetailsCollectionConfiguration$AddressCollectionMode: com.stripe.android.ui.core.CardBillingDetailsCollectionConfiguration$AddressCollectionMode valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.compose.ui.window.PopupLayout: void setPositionProvider(androidx.compose.ui.window.PopupPositionProvider)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
com.stripe.android.view.CardMultilineWidget: java.lang.Integer getExpirationDatePlaceholderRes$payments_core_release()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes valueOf(java.lang.String)
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType[] values()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.BV.LinearGradient.LinearGradientManager: java.lang.String getName()
com.facebook.yoga.YogaNode: YogaNode()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.horcrux.svg.VirtualView: double fromRelativeFast(com.horcrux.svg.SVGLength)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.fabric.DevToolsReactPerfLogger: void addDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.swmansion.reanimated.sensor.ReanimatedSensor: boolean initialize()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.views.view.ReactViewManagerWrapper,boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.swmansion.reanimated.MapUtils: java.lang.String getString(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.stripe.android.model.ConsumerSignUpConsentAction: com.stripe.android.model.ConsumerSignUpConsentAction[] values()
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: java.lang.String getValue()
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems(java.util.Queue)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: SharedTransitionManager$SnapshotTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewGroupManager getViewGroupManager(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
com.stripe.android.model.wallets.Wallet$Type: com.stripe.android.model.wallets.Wallet$Type[] values()
com.rnmaps.maps.MapLocalTile: void setTileSize(float)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentLinkedQueue access$1000(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(android.view.View,java.lang.String)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: int getThemeColor(android.content.Context,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.stripe.android.payments.core.authentication.threeds2.NextStep: NextStep()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFillRule(android.view.View,int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.stripe.android.view.CountryTextInputLayout: com.stripe.android.core.model.Country getSelectedCountry$payments_core_release()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFontWeight(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
com.facebook.react.views.view.ReactViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void reparentSharedViewsForCurrentTransition(java.util.List)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.ReactInstanceManager getReactInstanceManager(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.facebook.react.fabric.FabricUIManager$3: java.lang.String toString()
androidx.compose.material.CheckDrawingCache: CheckDrawingCache()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setClipPath(android.view.View,java.lang.String)
com.stripe.android.financialconnections.utils.Experiment: com.stripe.android.financialconnections.utils.Experiment valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.nimbusds.jose.JWEObject$State: com.nimbusds.jose.JWEObject$State[] values()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
androidx.constraintlayout.motion.widget.MotionLayout: java.util.ArrayList getDefinedTransitions()
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass[] values()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.rnmaps.maps.MapManager: void setUserLocationPriority(com.rnmaps.maps.MapView,java.lang.String)
com.google.android.material.progressindicator.LinearProgressIndicator: int getIndeterminateAnimationType()
com.stripe.android.view.CardInputWidget: int getFrameStart()
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.input.pointer.PointerIconService getPointerIconService()
androidx.constraintlayout.motion.widget.MotionLayout: void setDelayedApplicationOfInitialState(boolean)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion: com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState initialState(com.airbnb.mvrx.ViewModelContext)
com.google.android.gms.location.LocationRequest: LocationRequest()
com.stripe.android.view.CountryTextInputLayout: void setAllowedCountryCodes$payments_core_release(java.util.Set)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setClipRule(android.view.View,int)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
com.reactnativestripesdk.StripeSdkModule: void access$onFpxPaymentMethodResult(com.reactnativestripesdk.StripeSdkModule,com.stripe.android.view.AddPaymentMethodActivityStarter$Result)
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(com.reactnativecommunity.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setTextLength(android.view.View,java.lang.String)
com.stripe.android.stripe3ds2.transactions.UiType: com.stripe.android.stripe3ds2.transactions.UiType valueOf(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.imagepicker.ImagePickerProvider: ImagePickerProvider()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void prepareLayoutAnimations(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.reactcommunity.rndatetimepicker.RNTimePickerDialogFragment: RNTimePickerDialogFragment()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.autofill.AutofillTree getAutofillTree()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: LinkStepUpVerificationState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.stripe.android.model.MicrodepositType: com.stripe.android.model.MicrodepositType valueOf(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: ReanimatedSensorListener(com.swmansion.reanimated.nativeProxy.SensorSetter,double,android.view.Display)
com.BV.LinearGradient.LinearGradientManager: void setStartPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
androidx.compose.ui.text.PlatformParagraphStyle: PlatformParagraphStyle()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: ReactCheckBoxManager()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void maybeLoadSoLibrary()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
com.stripe.android.view.StripeEditText: void setDeleteEmptyListener(com.stripe.android.view.StripeEditText$DeleteEmptyListener)
com.rnmaps.maps.MapOverlay: void setImage(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.stripe.android.stripe3ds2.transaction.MessageVersionRegistry: MessageVersionRegistry()
com.rnmaps.maps.MapUrlTileManager: void setDoubleTileSize(com.rnmaps.maps.MapUrlTile,boolean)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.stripe.android.paymentsheet.addresselement.AddressElementNavigator: AddressElementNavigator()
com.stripe.android.model.StripeIntent$NextActionData$AlipayRedirect$Companion: StripeIntent$NextActionData$AlipayRedirect$Companion()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason[] $values()
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: java.lang.String toString()
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
kotlinx.serialization.json.JsonObject$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.facebook.react.fabric.mounting.MountingManager: boolean surfaceIsStopped(int)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.horcrux.svg.SvgViewManager: void setBorderBottomStartRadius(com.horcrux.svg.SvgView,float)
com.rnmaps.maps.MapPolylineManager: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutStart()
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
androidx.compose.ui.text.AnnotationType: androidx.compose.ui.text.AnnotationType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion: AttachPaymentViewModel$Companion()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.rnmaps.maps.MapGradientPolylineManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.nimbusds.jose.jwk.KeyOperation: com.nimbusds.jose.jwk.KeyOperation valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.rnmaps.maps.MapModule: java.lang.String getName()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.stripe.android.link.serialization.PopupPayload$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.stripe.android.model.Source$Flow: java.lang.String toString()
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
com.stripe.android.paymentsheet.ui.GooglePayButton: void setEnabled(boolean)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.reactnativestripesdk.utils.CreateTokenErrorType: com.reactnativestripesdk.utils.CreateTokenErrorType valueOf(java.lang.String)
com.stripe.android.view.CardInputWidget: kotlin.jvm.functions.Function0 getFrameWidthSupplier$payments_core_release()
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.stripe.android.GooglePayJsonFactory$TransactionInfo$CheckoutOption: com.stripe.android.GooglePayJsonFactory$TransactionInfo$CheckoutOption[] values()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void setupWindowInsets()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMask(android.view.View,java.lang.String)
com.rnmaps.maps.MapCalloutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.reactnativecommunity.webview.RNCWebView: void setNestedScrollEnabled(boolean)
com.google.crypto.tink.shaded.protobuf.UnknownFieldSchema: UnknownFieldSchema()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
com.rnmaps.maps.MapManager: void setUserLocationFastestInterval(com.rnmaps.maps.MapView,int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.horcrux.svg.SvgView: void onDetachedFromWindow()
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.unit.Density getDensity()
com.horcrux.svg.VirtualViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite: UnknownFieldSetLite()
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: ManualEntrySuccessState(com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.reactnativecommunity.picker.ReactPickerManager: java.lang.Class getShadowNodeClass()
com.rnmaps.maps.MapManager: void setShowsCompass(com.rnmaps.maps.MapView,boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.stripe.android.ui.core.elements.PlaceholderSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog getCloseDialog()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
com.stripe.android.stripe3ds2.transaction.ChallengeAction: ChallengeAction()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode valueOf(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.rnmaps.maps.MapLocalTileManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeLinecap(android.view.View,int)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.swmansion.reanimated.NativeMethodsHelper: com.facebook.react.views.scroll.ReactScrollView findScrollView(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.google.android.material.search.SearchView: void setText(int)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getEventNameResolver()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: boolean isOnThread()
com.stripe.android.financialconnections.model.AccountHolder$Type: AccountHolder$Type(java.lang.String,int,java.lang.String)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
androidx.compose.ui.node.LookaheadCapablePlaceable: LookaheadCapablePlaceable()
com.stripe.android.ui.core.elements.FormItemSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.rnmaps.maps.MapUrlTile: void setTileSize(float)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,java.lang.Double)
com.stripe.android.financialconnections.domain.ConfirmVerification$OTPError$Type: com.stripe.android.financialconnections.domain.ConfirmVerification$OTPError$Type[] values()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeLinecap(android.view.View,int)
com.reactnativestripesdk.CardFormViewManager: java.lang.String getName()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View findTransformedView(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentAnimationDuration()
com.reactnativecommunity.webview.RNCWebView: void setInjectedJavaScriptObject(java.lang.String)
com.reactnativestripesdk.CardFormView: void setAutofocus(boolean)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setModifier(androidx.compose.ui.Modifier)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnHide(float)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.rnmaps.maps.MapPolylineManager: void setStrokeColor(com.rnmaps.maps.MapPolyline,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isToggle(android.view.autofill.AutofillValue)
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,float,float)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setAutocompleteCountries(com.reactnativestripesdk.addresssheet.AddressSheetView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,java.lang.Double)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMask(android.view.View,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
com.stripe.android.model.Source$Redirect$Status: java.lang.String toString()
com.stripe.android.uicore.elements.TextFieldIcon: TextFieldIcon()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
com.stripe.android.stripe3ds2.views.ChallengeZoneView: boolean getWhitelistingSelection$3ds2sdk_release()
com.swmansion.reanimated.NodesManager$OnAnimationFrame: void onAnimationFrame(double)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setClipPath(android.view.View,java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setBorderRadii(com.facebook.react.bridge.ReadableArray)
com.stripe.android.stripe3ds2.views.ThreeDS2Button: ThreeDS2Button(android.content.Context,android.util.AttributeSet)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: void run(android.view.View)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setFinishedBackgroundColor$paymentsheet_release(int)
com.nimbusds.jose.shaded.asm.DefaultConverter: DefaultConverter()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.reactcommunity.rndatetimepicker.DatePickerModule)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.stripe.android.networking.PaymentAnalyticsEvent: com.stripe.android.networking.PaymentAnalyticsEvent[] values()
com.stripe.android.financialconnections.features.consent.ConsentState: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.stripe.android.model.SetupIntent$Error$Type: com.stripe.android.model.SetupIntent$Error$Type valueOf(java.lang.String)
androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Api29Impl: void addPageActions(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.compose.ui.semantics.SemanticsNode)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean access$202(com.facebook.react.fabric.mounting.SurfaceMountingManager,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.stripe.android.financialconnections.model.Body$Companion: Body$Companion()
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
com.rnmaps.maps.MapMarkerManager: void setMarkerRotation(com.rnmaps.maps.MapMarker,float)
com.horcrux.svg.VirtualViewManager$SVGClass: VirtualViewManager$SVGClass(java.lang.String,int)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$RedirectNextActionSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.model.Source$Redirect$Status: com.stripe.android.model.Source$Redirect$Status[] values()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.stripe.android.paymentsheet.forms.PaymentMethodRequirements$Companion: PaymentMethodRequirements$Companion()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void unsubscribeFromKeyboardEvents(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.stripe.android.view.AddPaymentMethodActivityStarter$Result: AddPaymentMethodActivityStarter$Result()
androidx.compose.ui.platform.AbstractComposeView: boolean getShouldCreateCompositionOnAttachedToWindow()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.NativeViewHierarchyManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
androidx.constraintlayout.motion.widget.MotionLayout: float getTargetPosition()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: SaveToLinkWithStripeSucceededRepository$State(java.lang.Boolean)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
androidx.compose.ui.viewinterop.AndroidViewHolder: android.view.ViewGroup$LayoutParams getLayoutParams()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMask(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebViewWrapper)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async component5()
com.stripe.android.paymentsheet.addresselement.AddressDetails: AddressDetails()
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrameGuarded(long)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerEnd(android.view.View,java.lang.String)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIsAccessibilityLink(java.lang.String)
com.stripe.android.customersheet.CustomerSheet$Configuration: CustomerSheet$Configuration()
com.stripe.android.ui.core.elements.DisplayField$Companion: kotlinx.serialization.KSerializer serializer()
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void ephemeralKey(com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
com.facebook.common.time.MonotonicClock: long now()
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.stripe.android.core.utils.DurationProvider$Key: com.stripe.android.core.utils.DurationProvider$Key[] values()
com.stripe.android.model.CustomEmailType: com.stripe.android.model.CustomEmailType[] values()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.stripe.android.paymentsheet.addresselement.AddressLauncher$Configuration: AddressLauncher$Configuration()
androidx.compose.ui.text.android.StaticLayoutFactoryDefault: android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgViewManager: void setNativeForegroundAndroid(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void disableUserInteractions(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
androidx.core.app.ComponentActivity: ComponentActivity()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(double,double,double)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setNativeSelected(android.view.View,int)
com.stripe.android.view.CardInputWidget: void setShouldShowErrorIcon(boolean)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
org.bouncycastle.asn1.ASN1Sequence: ASN1Sequence()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setResponsible(android.view.View,boolean)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
androidx.compose.ui.platform.AbstractComposeView: void getShowLayoutBounds$annotations()
com.stripe.android.financialconnections.FinancialConnectionsSheetState: FinancialConnectionsSheetState(com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFillRule(android.view.View,int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.google.android.material.search.SearchView: void setMenuItemsAnimated(boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.google.crypto.tink.Key: Key()
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.reactnativecommunity.webview.RNCWebViewManager: void setSetSupportMultipleWindows(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
com.stripe.android.financialconnections.features.success.SuccessState: SuccessState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.compose.animation.core.AnimationEndReason: androidx.compose.animation.core.AnimationEndReason[] values()
com.rnmaps.maps.MapManager: void pushEvent(com.facebook.react.uimanager.ThemedReactContext,android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.facebook.react.fabric.SurfaceHandler: void stop()
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.swmansion.reanimated.NodesManager$2: NodesManager$2(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.ReactContext)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.stripe.android.googlepaylauncher.GooglePayLauncher$BillingAddressConfig$Format: com.stripe.android.googlepaylauncher.GooglePayLauncher$BillingAddressConfig$Format[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow$Companion: FinancialConnectionsAuthorizationSession$Flow$Companion()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.bridge.JavaJSExecutor: void close()
com.stripe.android.view.CardMultilineWidget: void setUsZipCodeRequired(boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.rnmaps.maps.MapPolygon: void setFillColor(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setTextLength(android.view.View,java.lang.Double)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.horcrux.svg.VirtualView: void setOpacity(float)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.view.CardBrandView: void setShouldShowErrorIcon(boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(android.view.View,java.lang.String)
com.reactnativecommunity.picker.ReactPickerManager: void setNativeSelected(com.reactnativecommunity.picker.ReactPicker,int)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.stripe.android.ui.core.elements.Capitalization$Companion: Capitalization$Companion()
com.reactnativestripesdk.StripeSdkModule: void addListener(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
com.facebook.react.fabric.FabricComponents: java.lang.String getFabricComponentName(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.swmansion.reanimated.CopiedEvent: CopiedEvent(com.facebook.react.uimanager.events.Event)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: boolean equals(java.lang.Object)
com.horcrux.svg.SvgView: void setBbWidth(java.lang.Double)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(android.view.View,java.lang.String)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.reactnativestripesdk.StripeSdkModule: void customerAdapterDetachPaymentMethodCallback(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.compose.ui.modifier.ModifierLocalMap: ModifierLocalMap()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,java.lang.Double)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)
com.stripe.android.financialconnections.model.AccountHolder$Type: java.lang.String getValue()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
androidx.compose.ui.layout.Placeable: Placeable()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext getContext()
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,java.lang.Double)
com.rnmaps.maps.MapOverlayManager: com.rnmaps.maps.MapOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.stripe.android.model.BankAccount$Status: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.stripe.android.model.VerificationType: com.stripe.android.model.VerificationType[] values()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.reactnativestripesdk.GooglePayButtonManager: java.lang.String getName()
com.horcrux.svg.VirtualViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(com.horcrux.svg.MarkerView,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion: LinkStepUpVerificationViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.stripe.android.view.CardBrandView: void setLoading(boolean)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
kotlin.jvm.internal.Ref$FloatRef: Ref$FloatRef()
com.BV.LinearGradient.LinearGradientManager: LinearGradientManager()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: AbstractSharedFlowSlot()
com.stripe.android.stripe3ds2.views.InformationZoneView: void getExpandArrow$3ds2sdk_release$annotations()
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.azendoo.reactnativesnackbar.SnackbarModule: void displaySnackbar(android.view.View,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactUnderlineSpan: ReactUnderlineSpan()
androidx.core.app.ActivityOptionsCompat$Api16Impl: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
com.swmansion.reanimated.Utils: java.lang.String simplifyStringNumbersList(java.lang.String)
com.rnmaps.maps.MapView: void setToolbarEnabled(boolean)
com.stripe.android.ui.core.elements.IbanSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax[] values()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateOverflowInset(int,int,int,int,int)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.stripe.android.view.PaymentRelayActivity: PaymentRelayActivity()
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void onAfterUpdateTransaction(com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView)
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
dagger.internal.DelegateFactory: DelegateFactory()
com.stripe.android.paymentsheet.ui.PrimaryButton: int getFinishedBackgroundColor$paymentsheet_release()
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.rnmaps.maps.MapManager: void setShowsIndoorLevelPicker(com.rnmaps.maps.MapView,boolean)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.font.Font$ResourceLoader getFontLoader()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: int hashCode()
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,java.lang.Double)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion: com.stripe.android.financialconnections.FinancialConnectionsSheetState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.material.progressindicator.BaseProgressIndicator: void setVisibilityAfterHide(int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.google.accompanist.web.AccompanistWebViewClient: AccompanistWebViewClient()
com.rnmaps.maps.MapPolygon: java.lang.Object getFeature()
com.google.android.material.button.MaterialButton: void setElevation(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.touch.JSResponderHandler access$702(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.touch.JSResponderHandler)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setClipPath(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.horcrux.svg.SVGLength$UnitType: SVGLength$UnitType(java.lang.String,int)
com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration: PaymentSheet$BillingDetailsCollectionConfiguration()
androidx.compose.ui.platform.ViewLayerContainer: void dispatchGetDisplayList()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(com.reactnativecommunity.webview.RNCWebViewWrapper,int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)
com.horcrux.svg.VirtualViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.rnmaps.maps.MapView: void setInitialRegion(com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.reactcommunity.rndatetimepicker.DatePickerModule: void dismiss(com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.stripe.android.view.CvcEditText: java.lang.String getAccessibilityText()
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] values()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.reactnativestripesdk.CardFieldViewManager: void setDangerouslyGetFullCardDetails(com.reactnativestripesdk.CardFieldView,boolean)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$CollectionMode: com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$CollectionMode valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.reactcommunity.rndatetimepicker.TimePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.SvgView: void drawChildren(android.graphics.Canvas)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.compose.material.SnackbarDuration: androidx.compose.material.SnackbarDuration valueOf(java.lang.String)
com.google.crypto.tink.proto.AesCmacKeyFormat$Builder: AesCmacKeyFormat$Builder()
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.reactnativecommunity.webview.RNCWebViewModule: void shouldStartLoadWithLockIdentifier(boolean,double)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.stripe.android.uicore.address.NameType: com.stripe.android.uicore.address.NameType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.ui.res.ColorResourceHelper: long getColor-WaAFU9c(android.content.Context,int)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.fabric.CppViewMutationsWrapper: void runCppViewMutations()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.swmansion.gesturehandler.core.NativeViewGestureHandler: NativeViewGestureHandler()
com.stripe.android.financialconnections.ui.components.StringAnnotation: com.stripe.android.financialconnections.ui.components.StringAnnotation[] values()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
com.google.android.gms.wallet.PaymentMethodTokenizationParameters: PaymentMethodTokenizationParameters()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$0(android.view.View,int,int)
com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl$Reason: com.stripe.android.stripe3ds2.init.DeviceParamNotAvailableFactoryImpl$Reason[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.ui.core.elements.AuBankAccountNumberSpec$Companion: AuBankAccountNumberSpec$Companion()
com.reactnativestripesdk.CardFormView: void setDefaultValues(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.google.android.material.progressindicator.BaseProgressIndicator: int getShowAnimationBehavior()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,java.lang.String)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.views.modal.ModalHostShadowNode: ModalHostShadowNode()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
com.rnmaps.maps.MapPolyline: void setTappable(boolean)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.stripe.android.ui.core.elements.StaticTextSpec$Companion: StaticTextSpec$Companion()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.crypto.tink.proto.AesGcmSivKeyFormat: AesGcmSivKeyFormat()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(android.view.View,java.lang.Double)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue access$400(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.constraintlayout.motion.widget.Key: Key()
androidx.compose.foundation.MutatePriority: androidx.compose.foundation.MutatePriority valueOf(java.lang.String)
com.stripe.android.paymentsheet.PaymentSheetViewModel$CheckoutIdentifier: com.stripe.android.paymentsheet.PaymentSheetViewModel$CheckoutIdentifier valueOf(java.lang.String)
com.horcrux.svg.VirtualViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.stripe.android.model.SourceOrder: SourceOrder()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$integer: R$integer()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: PreAllocateViewMountItem(int,int,java.lang.String,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.horcrux.svg.SvgViewManager: void setBorderRightColor(com.horcrux.svg.SvgView,java.lang.Integer)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.stripe.android.paymentsheet.ui.PrimaryButton: void getDefaultTintList$paymentsheet_release$annotations()
com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)
com.reactnativestripesdk.StripeContainerManager: void setKeyboardShouldPersistTaps(com.reactnativestripesdk.StripeContainerView,boolean)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.reactnativecommunity.webview.RNCWebViewWrapper: com.reactnativecommunity.webview.RNCWebView getWebView()
com.google.accompanist.web.WebContent: WebContent()
com.stripe.android.stripe3ds2.views.ChallengeZoneView: ChallengeZoneView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewGroup: void resetPointerEvents()
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(android.view.View,float)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.google.android.material.chip.Chip: float getChipIconSize()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.swmansion.reanimated.MapUtils: MapUtils()
androidx.compose.runtime.CompositionContext: CompositionContext()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDy(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.rnmaps.maps.MapCircleManager: void setStrokeWidth(com.rnmaps.maps.MapCircle,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
com.reactnativestripesdk.CardFieldViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.compose.ui.graphics.vector.PathComponent: PathComponent()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.input.InputModeManager getInputModeManager()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.progressindicator.BaseProgressIndicator: void setProgress(int)
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.stripe.android.financialconnections.features.success.SuccessState: com.stripe.android.financialconnections.features.success.SuccessState copy$default(com.stripe.android.financialconnections.features.success.SuccessState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.horcrux.svg.SvgViewManager: void setNextFocusForward(com.horcrux.svg.SvgView,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.search.SearchView: void setUseWindowInsetsController(boolean)
androidx.compose.ui.graphics.vector.VectorPainter: VectorPainter()
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderBottomColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: int hashCode()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.reactcommunity.rndatetimepicker.RNDatePickerDisplay: com.reactcommunity.rndatetimepicker.RNDatePickerDisplay valueOf(java.lang.String)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.rnmaps.maps.MapWMSTileManager: void setOfflineMode(com.rnmaps.maps.MapWMSTile,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void scrollTo(int,double,double,boolean)
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
com.stripe.android.model.SetupIntent$CancellationReason: com.stripe.android.model.SetupIntent$CancellationReason valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.horcrux.svg.SvgViewManager: void setBorderTopRightRadius(com.horcrux.svg.SvgView,double)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unsubscribeFromKeyboardEvents(int)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.reactnativepagerview.NestedScrollableHost: void setInitialIndex(java.lang.Integer)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.stripe.android.view.StripeEditText: java.util.List getInternalFocusChangeListeners()
androidx.compose.ui.window.PopupLayout: void setClippingEnabled(boolean)
com.stripe.android.stripe3ds2.views.InformationZoneView: void getWhyText$3ds2sdk_release$annotations()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.horcrux.svg.R$attr: R$attr()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(android.view.View,float)
com.stripe.android.ui.core.elements.KlarnaHeaderStaticTextSpec$Companion: KlarnaHeaderStaticTextSpec$Companion()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.react.fabric.FabricUIManager: boolean access$500(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.ui.platform.AndroidComposeView: void setOnViewTreeOwnersAvailable(kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
com.stripe.android.view.CardMultilineWidget: void setPostalCodeErrorListener(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: ReaLayoutAnimator(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
com.swmansion.rnscreens.FabricEnabledViewGroup: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.fabric.FabricUIManager$6: int getSurfaceId()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel: FinancialConnectionsSheetNativeViewModel(com.stripe.android.financialconnections.di.FinancialConnectionsSheetNativeComponent,com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.utils.UriUtils,com.stripe.android.financialconnections.domain.CompleteFinancialConnectionsSession,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.core.Logger,java.lang.String,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState)
com.facebook.react.fabric.EmptyReactNativeConfig: double getDouble(java.lang.String)
androidx.constraintlayout.core.ArrayRow: ArrayRow()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.stripe.android.view.PaymentMethodsRecyclerView: PaymentMethodsRecyclerView(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewManager: void setWebviewDebuggingEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.reactnativestripesdk.StripeSdkModule: void collectFinancialConnectionsAccounts(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.stripe.android.view.MaskedCardView: MaskedCardView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
com.horcrux.svg.R$dimen: R$dimen()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.horcrux.svg.VirtualViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.RenderableView: void setupPaint(android.graphics.Paint,float,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.ui.core.elements.SaveForFutureUseSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: void run()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setClipRule(android.view.View,int)
com.horcrux.svg.SvgViewManager: void setBorderEndColor(android.view.View,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.google.android.material.chip.Chip: void setChecked(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(android.view.View,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
com.swmansion.reanimated.CopiedEvent: java.lang.String access$102(com.swmansion.reanimated.CopiedEvent,java.lang.String)
com.stripe.android.view.BecsDebitBsbEditText: void setOnBankChangedCallback(kotlin.jvm.functions.Function1)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.RootForTest getRootForTest()
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(android.view.View,java.lang.Double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.rnmaps.maps.MapHeatmap: void setRadius(int)
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.LayoutNode getRoot()
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ClickableText: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ClickableText[] values()
com.rnmaps.maps.MapUrlTileManager: void setMaximumZ(com.rnmaps.maps.MapUrlTile,float)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SvgViewManager: void setBbHeight(android.view.View,java.lang.String)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapOverlayManager: void setBounds(com.rnmaps.maps.MapOverlay,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.RootViewManager access$802(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.uimanager.RootViewManager)
com.swmansion.reanimated.NativeProxy$1: void clearAnimationConfig(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: ManualEntrySuccessState()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.reanimated.ReanimatedPackage$1: java.util.Map getReactModuleInfos()
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.horcrux.svg.SvgViewManager: void setPointerEvents(com.horcrux.svg.SvgView,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.horcrux.svg.SvgPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapUrlTile: void setTileCachePath(java.lang.String)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean isLayoutAnimationEnabled()
com.reactnativestripesdk.StripeSdkModule: void presentCustomerSheet(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.progressindicator.BaseProgressIndicator: int getTrackThickness()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.rnmaps.maps.MapMarkerManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.rnmaps.maps.MapUrlTileManager: void setTileSize(com.rnmaps.maps.MapUrlTile,float)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.stripe.android.ui.core.elements.ConfirmStatusSpecAssociation$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
com.stripe.android.uicore.elements.AddressType: AddressType()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.google.crypto.tink.proto.AesEaxParams$Builder: AesEaxParams$Builder()
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.stripe.android.core.exception.StripeException: StripeException()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.stripe.android.view.BecsDebitMandateAcceptanceTextView: java.lang.String getCompanyName()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.reactcommunity.rndatetimepicker.TimePickerModule: java.lang.String getName()
com.nimbusds.jose.JWSObject$State: com.nimbusds.jose.JWSObject$State[] values()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: LayoutAnimations(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.StripeEditText$ErrorMessageListener getPostalCodeErrorListener$payments_core_release()
com.stripe.android.ui.core.elements.SaveForFutureUseSpec: SaveForFutureUseSpec()
com.facebook.react.fabric.mounting.mountitems.MountItem: int getSurfaceId()
com.horcrux.svg.SvgViewManager: void setBackfaceVisibility(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.reactnativestripesdk.CardFormViewManager: void setDefaultValues(com.reactnativestripesdk.CardFormView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgViewManager: void setBbWidth(android.view.View,java.lang.String)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.reactnativestripesdk.CardFieldView: void setPostalCodeFilter(com.stripe.android.core.model.CountryCode)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandlerHelper(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.VirtualView: double relativeOnWidth(com.horcrux.svg.SVGLength)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.reactnativestripesdk.StripeSdkModule: void customerAdapterFetchPaymentMethodsCallback(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.gms.wallet.FullWallet: FullWallet()
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.reactnativepagerview.PagerViewViewManager: android.view.View getChildAt(com.reactnativepagerview.NestedScrollableHost,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.rnmaps.maps.MapCircle: void setStrokeColor(int)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion: ManualEntrySuccessViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setClipRule(android.view.View,int)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.stripe.android.financialconnections.features.success.SuccessState: com.airbnb.mvrx.Async component1()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState copy$default(com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
com.facebook.react.fabric.DevToolsReactPerfLogger: void removeDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void access$dispatchActivityResultsToFragments(com.reactnativestripesdk.StripeSdkModule,int,int,android.content.Intent)
com.swmansion.reanimated.Utils: Utils()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel: NetworkingLinkVerificationViewModel(com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.domain.ConfirmVerification,com.stripe.android.financialconnections.domain.MarkLinkVerified,com.stripe.android.financialconnections.domain.FetchNetworkedAccounts,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.LookupConsumerAndStartVerification,com.stripe.android.core.Logger)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category[] $values()
com.reactnativepagerview.PagerViewViewManager: int getChildCount(com.reactnativepagerview.NestedScrollableHost)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.stripe.android.paymentsheet.model.PaymentSelection$Saved$WalletType: com.stripe.android.paymentsheet.model.PaymentSelection$Saved$WalletType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.stripe.android.link.serialization.PopupPayload$PaymentInfo$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
com.stripe.android.stripe3ds2.views.InformationZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getWhyLabel$3ds2sdk_release()
com.rnmaps.maps.MapModule: MapModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior[] $values()
kotlin.internal.PlatformImplementations: PlatformImplementations()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.view.ReactViewGroup: boolean customDrawOrderDisabled()
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.swmansion.reanimated.nativeProxy.SensorSetter: SensorSetter(com.facebook.jni.HybridData)
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: boolean equals(java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeOnViewAttach(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion: com.stripe.android.financialconnections.features.reset.ResetViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.reset.ResetState)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.gms.wallet.wobs.LoyaltyPoints: LoyaltyPoints()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.rnmaps.maps.MapPolygonManager: java.lang.String getName()
androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy: androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy[] values()
androidx.compose.runtime.InvalidationResult: androidx.compose.runtime.InvalidationResult valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer component6()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void startAnimation(int,int,java.util.HashMap)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,java.lang.Double)
com.rnmaps.maps.MapPolyline: void setGeodesic(boolean)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState copy$default(com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.compose.ui.viewinterop.AndroidViewHolder: android.view.View getInteropView()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean shouldAnimateLayout(android.view.View)
com.google.android.material.chip.Chip: void setMinLines(int)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void attachGestureHandler(double,double,double)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category$Companion: FinancialConnectionsAccount$Category$Companion()
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.stripe.android.payments.core.authentication.PaymentAuthenticator: PaymentAuthenticator()
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] values()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.stripe.android.financialconnections.features.accountpicker.AccountPickerState copy$default(com.stripe.android.financialconnections.features.accountpicker.AccountPickerState,com.airbnb.mvrx.Async,boolean,com.airbnb.mvrx.Async,java.util.Set,int,java.lang.Object)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
com.google.android.gms.internal.wallet.zzm: zzm()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.VirtualView: boolean isResponsible()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
com.th3rdwave.safeareacontext.SafeAreaView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion: com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.manualentry.ManualEntryState)
com.BV.LinearGradient.LinearGradientManager: void setColors(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.BV.LinearGradient.LinearGradientManager: void setAngleCenter(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.reactnativestripesdk.CardFormView: com.stripe.android.model.PaymentMethodCreateParams$Card getCardParams()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.CardBrand getBrand()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void registerEventHandler(com.swmansion.reanimated.nativeProxy.EventHandler)
com.facebook.react.bridge.CatalystInstance: void initialize()
com.horcrux.svg.SvgView: void setMinY(float)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFillRule(android.view.View,int)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: boolean equals(java.lang.Object)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontWeight(android.view.View,java.lang.Double)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.stripe.android.ui.core.elements.UpiSpec$Companion: UpiSpec$Companion()
com.stripe.android.view.CardBrandView: boolean getShouldShowCvc()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(android.view.View,float)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane$Companion: kotlinx.serialization.KSerializer serializer()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.stripe.android.PaymentRelayStarter$Args: PaymentRelayStarter$Args()
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontWeight(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect component6()
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus getWebAuthFlowStatus()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: int getIdentifier(android.content.Context,java.lang.String)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.airbnb.mvrx.Async component2()
com.stripe.android.model.StripeIntent$NextActionData$SdkData: StripeIntent$NextActionData$SdkData()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontWeight(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVectorEffect(android.view.View,int)
androidx.constraintlayout.motion.widget.MotionLayout: int[] getConstraintSetIds()
com.reactnativestripesdk.StripeSdkModule: void initCustomerSheet(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.airbnb.mvrx.Async component4()
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.horcrux.svg.RenderableViewManager$MaskManager: void setClipRule(android.view.View,int)
androidx.compose.runtime.DisposableEffectScope: DisposableEffectScope()
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.horcrux.svg.SvgViewManager: void setRemoveClippedSubviews(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFillRule(android.view.View,int)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setReset(kotlin.jvm.functions.Function0)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
com.swmansion.reanimated.NodesManager: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.model.BalanceRefresh$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: void preInitializeViewManagers(java.util.List)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.stripe.android.model.PaymentIntent$CaptureMethod: com.stripe.android.model.PaymentIntent$CaptureMethod[] values()
com.dropShadow.DropShadowLayout: void setShadowOpacity(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.google.android.gms.wallet.PaymentMethodToken: PaymentMethodToken()
com.reactnativestripesdk.StripeSdkModule: void initPaymentSheet(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.airbnb.mvrx.Async getPayload()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.view.CardInputWidget: com.stripe.android.view.PostalCodeEditText getPostalCodeEditText$payments_core_release()
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.core.view.DisplayCutoutCompat$Api30Impl: android.graphics.Insets getWaterfallInsets(android.view.DisplayCutout)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.google.android.material.search.SearchBar: void setText(java.lang.CharSequence)
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableView: void setStrokeWidth(java.lang.Double)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean isLayoutAnimationDisabled()
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation access$200(com.swmansion.reanimated.NodesManager)
com.reactnativestripesdk.CardFormViewManager: void receiveCommand(com.reactnativestripesdk.CardFormView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapUrlTileManager: void setMaximumNativeZ(com.rnmaps.maps.MapUrlTile,float)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.stripe.android.view.CardMultilineWidget: boolean getUsZipCodeRequired()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.stripe.android.stripe3ds2.views.InformationZoneView: void getExpandLabel$3ds2sdk_release$annotations()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.stripe.android.view.AuthActivityStarterHost: AuthActivityStarterHost()
com.stripe.android.ui.core.elements.AuBankAccountNumberSpec$Companion: kotlinx.serialization.KSerializer serializer()
kotlinx.serialization.json.internal.AbstractJsonLexer: AbstractJsonLexer()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean component2()
com.stripe.android.PaymentAuthConfig$Builder: PaymentAuthConfig$Builder()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.rnmaps.maps.MapPolygonManager: void setZIndex(android.view.View,float)
com.stripe.android.view.CountryTextInputLayout: com.stripe.android.core.model.CountryCode getSelectedCountryCode$payments_core_release()
com.reactnativecommunity.webview.RNCWebView: void setMenuCustomItems(java.util.List)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.views.view.ReactViewManagerWrapper,boolean,com.facebook.react.fabric.mounting.SurfaceMountingManager$1)
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.reactnativestripesdk.StripeSdkModule: void sendEvent$stripe_stripe_react_native_release(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean getSubmitLoading()
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: NoopEventHandler()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
androidx.viewpager2.widget.ViewPager2: int getCurrentItem()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
com.stripe.android.financialconnections.features.consent.ConsentState: com.airbnb.mvrx.Async getConsent()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.reactnativestripesdk.addresssheet.AddressSheetView: void setAdditionalFields(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.stripe.android.ui.core.elements.MandateTextSpec$Companion: MandateTextSpec$Companion()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
com.google.android.material.search.SearchView: void setAnimatedNavigationIcon(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDeltaY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.reactnativestripesdk.StripeSdkModule: void retrievePaymentIntent(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.modifier.ModifierLocalManager getModifierLocalManager()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: AccountPickerState()
com.stripe.android.view.StripeEditText: int getDefaultErrorColorInt()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.stripe.android.ui.core.elements.BsbSpec$Companion: BsbSpec$Companion()
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: PartnerAuthState()
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion: com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void dropGestureHandler(double)
com.reactnativestripesdk.CardFormViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect: FinancialConnectionsSheetViewEffect()
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setTextLength(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgView: android.graphics.Bitmap drawOutput()
androidx.compose.animation.TransitionData: TransitionData()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: AbstractSharedFlow()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View getTransitioningView(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.stripe.android.view.BecsDebitMandateAcceptanceTextView: BecsDebitMandateAcceptanceTextView(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: LinkStepUpVerificationState()
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.crypto.tink.proto.AesCtrParams$Builder: AesCtrParams$Builder()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List getSharedElementsForCurrentTransition(java.util.List,boolean)
com.facebook.react.fabric.FabricUIManager$5: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.compose.ui.text.TtsAnnotation: TtsAnnotation()
com.nimbusds.jose.JWSObject$State: com.nimbusds.jose.JWSObject$State valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.stripe.android.view.BecsDebitAccountNumberEditText: void setMinLength(int)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.search.SearchView: void setToolbarTouchscreenBlocksFocus(boolean)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
androidx.compose.material.DrawerValue: androidx.compose.material.DrawerValue valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.stripe.android.ui.core.elements.ContactInformationSpec$Companion: kotlinx.serialization.KSerializer serializer()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()
com.google.android.material.progressindicator.BaseProgressIndicator: void setAnimatorDurationScaleProvider(com.google.android.material.progressindicator.AnimatorDurationScaleProvider)
com.stripe.android.ui.core.elements.CardDetailsSectionSpec$Companion: CardDetailsSectionSpec$Companion()
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.stripe.android.financialconnections.model.FinancialConnectionsInstitution$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.view.ShippingInfoWidget: com.stripe.android.model.ShippingInformation getShippingInformation()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.serialization.json.JsonArray$Companion: kotlinx.serialization.KSerializer serializer()
com.rnmaps.maps.MapUrlTileManager: com.rnmaps.maps.MapUrlTile createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativestripesdk.CardFieldViewManager: void setCountryCode(com.reactnativestripesdk.CardFieldView,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.stripe.android.ui.core.elements.AffirmTextSpec$Companion: AffirmTextSpec$Companion()
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalStyle(int)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.facebook.react.views.view.ReactViewGroup: void onRtlPropertiesChanged(int)
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(android.view.View,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.stripe.android.model.CardBrand: com.stripe.android.model.CardBrand valueOf(java.lang.String)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.stripe.android.uicore.image.StripeImageState: StripeImageState()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion: LinkAccountPickerViewModel$Companion()
com.facebook.react.fabric.mounting.MountingManager: MountingManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor)
com.dropShadow.DropShadowModule: void setShadowRadius(com.dropShadow.DropShadowLayout,com.facebook.react.bridge.Dynamic)
com.reactnativestripesdk.CardFieldViewManager: CardFieldViewManager()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.reactnativestripesdk.utils.PaymentSheetErrorType: com.reactnativestripesdk.utils.PaymentSheetErrorType[] values()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async component3()
com.stripe.android.view.AddPaymentMethodActivity: AddPaymentMethodActivity()
kotlin.collections.IntIterator: IntIterator()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapOverlayManager: void setZIndex(android.view.View,float)
androidx.compose.ui.viewinterop.AndroidViewHolder: android.view.View getView()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.FabricUIManager$5: int getSurfaceId()
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion: com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState initialState(com.airbnb.mvrx.ViewModelContext)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,java.lang.Double)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactBridge: ReactBridge()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
com.facebook.react.modules.fresco.FrescoModule: void initialize()
androidx.compose.foundation.text.KeyboardActions: KeyboardActions()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.compose.ui.platform.RenderNodeVerificationHelper24: void discardDisplayList(android.view.RenderNode)
com.stripe.android.stripe3ds2.views.InformationZoneView: void getWhyArrow$3ds2sdk_release$annotations()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: java.lang.String getValue()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.stripe.android.view.ExpiryDateEditText: kotlin.jvm.functions.Function0 getCompletionCallback$payments_core_release()
com.horcrux.svg.VirtualViewManager: java.lang.String getName()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set access$602(com.facebook.react.fabric.mounting.SurfaceMountingManager,java.util.Set)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode valueOf(java.lang.String)
com.google.android.material.search.SearchView: android.widget.EditText getEditText()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addViewAt(int,int,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean component2()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDx(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
androidx.compose.runtime.InvalidationResult: androidx.compose.runtime.InvalidationResult[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
com.reactnativepagerview.PagerViewViewManager: void setPageMargin(com.reactnativepagerview.NestedScrollableHost,int)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: ReanimatedKeyboardEventListener(java.lang.ref.WeakReference)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapLocalTileManager: com.rnmaps.maps.MapLocalTile createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
okio.Segment: Segment()
com.rnmaps.maps.MapWMSTileManager: void setZIndex(android.view.View,float)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.swmansion.reanimated.ReanimatedModule: void initialize()
com.rnmaps.maps.MapManager: void setKmlSrc(com.rnmaps.maps.MapView,java.lang.String)
com.swmansion.reanimated.NodesManager: void postOnAnimation(com.swmansion.reanimated.NodesManager$OnAnimationFrame)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.stripe.android.paymentsheet.analytics.PaymentSheetConfirmationError: PaymentSheetConfirmationError()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
com.stripe.android.view.ExpiryDateEditText: void setIncludeSeparatorGaps$payments_core_release(boolean)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.rnmaps.maps.MapManager: void setMapStyle(com.rnmaps.maps.MapView,java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(android.view.View,java.lang.Double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.reactnativestripesdk.StripeContainerManager: com.reactnativestripesdk.StripeContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(android.view.View,java.lang.Double)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.compose.ui.platform.AccessibilityIterators$PageTextSegmentIterator: AccessibilityIterators$PageTextSegmentIterator()
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,java.lang.Double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: DiskCacheWriteLocker$WriteLock()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async getSearchInstitutions()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.reactnativecommunity.picker.ReactPickerManager: void updateExtraData(com.reactnativecommunity.picker.ReactPicker,java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
com.reactnativestripesdk.StripeContainerView: void setKeyboardShouldPersistTaps(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState[] values()
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sendAccessibilityEvent(int,int)
com.stripe.android.core.model.CountryCode$Companion: CountryCode$Companion()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion: ResetViewModel$Companion()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
androidx.compose.foundation.layout.Direction: androidx.compose.foundation.layout.Direction valueOf(java.lang.String)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.stripe.android.core.model.CountryCode$Companion: kotlinx.serialization.KSerializer serializer()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.rnmaps.maps.MapManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState initialState(com.airbnb.mvrx.ViewModelContext)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.reactnativecommunity.picker.ReactPickerManager: void setBackgroundColor(android.view.View,int)
com.dropShadow.DropShadowModule: com.dropShadow.DropShadowLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.google.android.material.progressindicator.BaseProgressIndicator: void setShowAnimationBehavior(int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void makeSnapshotOfTopScreenViews(android.view.ViewGroup)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.stripe.android.view.CardInputWidget: void setFrameWidthSupplier$payments_core_release(kotlin.jvm.functions.Function0)
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: AttachPaymentState()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.cardview.widget.CardView: float getCardElevation()
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory$Companion: FinancialConnectionsAccount$Subcategory$Companion()
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.swmansion.reanimated.AndroidUIScheduler: void deactivate()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,boolean,boolean)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.addresssheet.AddressSheetEvent$EventType: com.reactnativestripesdk.addresssheet.AddressSheetEvent$EventType valueOf(java.lang.String)
com.stripe.android.core.model.parsers.StripeErrorJsonParser: StripeErrorJsonParser()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVectorEffect(android.view.View,int)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.airbnb.mvrx.Async component2()
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.work.impl.WorkDatabase: WorkDatabase()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.stripe.android.view.CardInputWidget: void getCurrentFields$payments_core_release$annotations()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.compose.ui.platform.ViewLayerVerificationHelper28: void setOutlineAmbientShadowColor(android.view.View,int)
com.stripe.android.stripe3ds2.views.ChallengeZoneWebView: void setOnClickListener(android.view.View$OnClickListener)
com.reactnativestripesdk.CardFieldView: com.stripe.android.model.Address getCardAddress()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.stripe.android.view.StripeEditText: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewManagerRegistry access$1100(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.stripe.android.financialconnections.FinancialConnectionsSheetForTokenResult: FinancialConnectionsSheetForTokenResult()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory[] $values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
androidx.compose.ui.graphics.WrapperVerificationHelperMethods: void setBlendMode-GB0RdKg(android.graphics.Paint,int)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: java.lang.String component1()
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.horcrux.svg.SvgViewManager: void setAlign(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int findPrecedingViewTagForTransition(int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.reactnativecommunity.picker.ReactPicker: void setStagedSelection(int)
androidx.compose.ui.platform.AndroidComposeView: void setConfigurationChangeObserver(kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.stripe.android.view.CardInputWidget: boolean getShouldShowErrorIcon$payments_core_release()
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.util.Set convertProps(com.facebook.react.bridge.ReadableNativeArray)
com.stripe.android.core.exception.InvalidRequestException: InvalidRequestException()
com.stripe.android.view.CardBrandView: CardBrandView(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.picker.ReactPickerManager: java.util.Map getCommandsMap()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(com.horcrux.svg.MarkerView,float)
androidx.compose.ui.input.pointer.PointerInteropFilter$DispatchToViewState: androidx.compose.ui.input.pointer.PointerInteropFilter$DispatchToViewState valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: ReanimatedNativeHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor: void run(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.rnmaps.maps.MapUrlTileManager: void setFlipY(com.rnmaps.maps.MapUrlTile,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String getAccountConfirm()
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
androidx.core.content.FileProvider: FileProvider()
com.horcrux.svg.RenderableView: void renderMarkers(android.graphics.Canvas,android.graphics.Paint,float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setVectorEffect(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$CanceledSpec: ConfirmResponseStatusSpecs$CanceledSpec()
androidx.compose.ui.focus.FocusTargetModifierNode$FocusTargetModifierElement: FocusTargetModifierNode$FocusTargetModifierElement()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(android.view.View,float)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setClipRule(android.view.View,int)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapUrlTile: void setMaximumNativeZ(float)
com.stripe.android.model.Source$Status: java.lang.String toString()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.stripe.android.financialconnections.model.PaymentAccount$Companion: PaymentAccount$Companion()
com.rnmaps.maps.MapPolylineManager: void setZIndex(com.rnmaps.maps.MapPolyline,float)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeOpacity(android.view.View,float)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.rnmaps.maps.MapUrlTileManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage: GeneratedMessageLite$ExtendableMessage()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.fabric.mounting.MountItemDispatcher: void executeOrEnqueue(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForView(int)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,java.lang.Double)
androidx.compose.ui.viewinterop.ViewFactoryHolder: androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher getDispatcher()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(float)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
com.stripe.android.view.CardInputWidget: void setPostalCodeTextWatcher(android.text.TextWatcher)
androidx.compose.ui.graphics.vector.VectorGroup: VectorGroup()
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.stripe.android.financialconnections.model.ManualEntryMode$Companion: ManualEntryMode$Companion()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.stripe.android.financialconnections.features.consent.ConsentViewModel: ConsentViewModel(com.stripe.android.financialconnections.features.consent.ConsentState,com.stripe.android.financialconnections.domain.AcceptConsent,com.stripe.android.financialconnections.domain.GetOrFetchSync,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.utils.UriUtils,com.stripe.android.core.Logger)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass[] values()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: void setMenuAlignmentMode(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.stripe.android.model.CustomEmailType: com.stripe.android.model.CustomEmailType valueOf(java.lang.String)
com.rnmaps.maps.MapUrlTile: void setZIndex(float)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.compose.runtime.snapshots.StateRecord: StateRecord()
com.stripe.android.view.BecsDebitAccountNumberEditText: java.lang.String getAccountNumber()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.compose.ui.graphics.TileModeVerificationHelper: android.graphics.Shader$TileMode getFrameworkTileModeDecal()
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
com.facebook.react.fabric.SurfaceHandler: void setSurfaceId(int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: java.lang.String getValue()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.stripe.android.paymentsheet.DeferredIntentConfirmationType: com.stripe.android.paymentsheet.DeferredIntentConfirmationType[] values()
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: int hashCode()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFillOpacity(android.view.View,float)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.material.progressindicator.BaseProgressIndicator: int getTrackCornerRadius()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.google.android.material.chip.Chip: void setGravity(int)
com.rnmaps.maps.MapMarker: void setIconBitmap(android.graphics.Bitmap)
com.google.android.gms.internal.location.zzc: zzc()
com.horcrux.svg.SvgViewManager: void setNativeForegroundAndroid(com.horcrux.svg.SvgView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.stripe.android.paymentsheet.state.PaymentSheetLoadingException: PaymentSheetLoadingException()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.horcrux.svg.R$interpolator: R$interpolator()
com.stripe.android.ui.core.CardBillingDetailsCollectionConfiguration$AddressCollectionMode: com.stripe.android.ui.core.CardBillingDetailsCollectionConfiguration$AddressCollectionMode[] values()
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.lifecycle.SavedStateViewModelFactory: SavedStateViewModelFactory()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(android.view.View,int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.horcrux.svg.VirtualViewManager: void setMarkerStart(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerEnd(android.view.View,java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.stripe.android.financialconnections.model.ManualEntry$Companion: ManualEntry$Companion()
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void stopSurface()
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setNumberOfLines(android.view.View,int)
com.azendoo.reactnativesnackbar.SnackbarModule: java.util.ArrayList recursiveLoopChildren(android.view.ViewGroup,java.util.ArrayList)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function2 getContent()
com.reactnativestripesdk.AuBECSDebitFormViewManager: java.lang.String getName()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: ManualEntryState(com.airbnb.mvrx.Async,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.airbnb.mvrx.Async)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.swmansion.reanimated.ReactNativeUtils: float getBorderRadius(android.view.View)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration getConfiguration()
com.facebook.react.views.view.ReactViewGroup: void dispatchOverflowDraw(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.reactnativecommunity.picker.ReactPicker: int getMode()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.airbnb.mvrx.Async component2()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setTextLength(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async getLookupAccount()
androidx.lifecycle.Lifecycle: Lifecycle()
com.stripe.android.uicore.format.CurrencyFormatter: CurrencyFormatter()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadStart()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
androidx.constraintlayout.core.widgets.Guideline: Guideline()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,java.lang.Double)
com.rnmaps.maps.MapOverlay: void setIconBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setResponsible(android.view.View,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.reactnativestripesdk.CardFieldViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.stripe.android.customersheet.CustomerSheetViewAction: CustomerSheetViewAction()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.stripe.android.ui.core.elements.DisplayField: com.stripe.android.ui.core.elements.DisplayField[] values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgView: java.lang.String toDataURL()
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(android.view.View,float)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMask(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion: NetworkingLinkLoginWarmupViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.reactcommunity.rndatetimepicker.RNTimePickerDisplay: com.reactcommunity.rndatetimepicker.RNTimePickerDisplay[] values()
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.stripe.android.ui.core.elements.UpiSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.reactnativecommunity.picker.ReactDropdownPickerManager: java.lang.String getName()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
androidx.compose.ui.text.input.ImmHelper21: void hideSoftInput(android.view.inputmethod.InputMethodManager)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType[] values()
com.rnmaps.maps.MapUrlTile: void setTileCacheMaxAge(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.stripe.android.stripe3ds2.views.ThreeDS2WebView: void setOnHtmlSubmitListener$3ds2sdk_release(com.stripe.android.stripe3ds2.views.ThreeDS2WebViewClient$OnHtmlSubmitListener)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.stripe.android.uicore.image.ImageType: com.stripe.android.uicore.image.ImageType valueOf(java.lang.String)
com.stripe.android.view.SelectShippingMethodWidget: void setSelectedShippingMethod(com.stripe.android.model.ShippingMethod)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.stripe.android.model.StripeIntent$Usage: com.stripe.android.model.StripeIntent$Usage[] values()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.stripe.android.model.CardBrand: com.stripe.android.model.CardBrand[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeLinejoin(android.view.View,int)
com.airbnb.mvrx.MavericksViewModel: MavericksViewModel(com.airbnb.mvrx.MavericksState,com.airbnb.mvrx.MavericksViewModelConfigFactory)
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFillRule(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setMinimumFontSize(com.reactnativecommunity.webview.RNCWebViewWrapper,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.swmansion.reanimated.AndroidUIScheduler$1: void run()
com.stripe.android.stripe3ds2.views.InformationZoneView: androidx.appcompat.widget.AppCompatImageView getExpandArrow$3ds2sdk_release()
com.google.crypto.tink.shaded.protobuf.LongArrayList: LongArrayList()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.stripe.android.view.CardInputWidget: void setCardHint(java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.rnmaps.maps.MapPolygonManager: void setHoles(com.rnmaps.maps.MapPolygon,com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.CardFormViewManager: void setPostalCodeEnabled(com.reactnativestripesdk.CardFormView,boolean)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.airbnb.mvrx.MavericksBlockExecutions: com.airbnb.mvrx.MavericksBlockExecutions[] values()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.stripe.android.view.CardInputWidget$CardFieldAnimation: CardInputWidget$CardFieldAnimation()
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.stripe.android.financialconnections.features.consent.ConsentState: com.airbnb.mvrx.Async component1()
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.ReanimatedPackage: ReanimatedPackage()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: LinkAccountPickerState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: XChaCha20Poly1305KeyFormat()
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion: com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.FinancialConnectionsSheetState)
com.stripe.android.financialconnections.model.NetworkingLinkSignupBody$Companion: kotlinx.serialization.KSerializer serializer()
com.google.crypto.tink.proto.KmsAeadKey$Builder: KmsAeadKey$Builder()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState copy(com.stripe.android.financialconnections.presentation.WebAuthFlowState,boolean,com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog,boolean,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: com.facebook.react.bridge.WritableMap getParams()
com.stripe.android.financialconnections.model.AddNewAccount$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDashoffset(android.view.View,float)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
com.facebook.react.bridge.DynamicFromArray: int asInt()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.fragment.app.DialogFragment: DialogFragment()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.backends.pipeline.info.ImagePerfState: ImagePerfState()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.motion.widget.MotionLayout: int getEndState()
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
com.horcrux.svg.SvgViewManager: void setBorderTopLeftRadius(com.horcrux.svg.SvgView,double)
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme[] values()
androidx.compose.animation.ExitTransition: ExitTransition()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.stripe.android.link.ui.signup.SignUpState: com.stripe.android.link.ui.signup.SignUpState[] values()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.rnmaps.maps.MapPolygonManager: com.rnmaps.maps.MapPolygon createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.rnmaps.maps.MapGradientPolylineManager: void setZIndex(android.view.View,float)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.stripe.android.view.CardInputListener$FocusField: com.stripe.android.view.CardInputListener$FocusField[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState initialState(com.airbnb.mvrx.ViewModelContext)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: FinancialConnectionsSheetState(com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs,boolean,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest,com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus,com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(android.view.View,float)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SvgViewManager: void setTintColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$MaskManager: void setName(android.view.View,java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap access$402(com.facebook.react.fabric.mounting.SurfaceMountingManager,java.util.concurrent.ConcurrentHashMap)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
androidx.compose.foundation.text.KeyCommand: androidx.compose.foundation.text.KeyCommand[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutRemovedView(android.view.View)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.views.text.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
com.horcrux.svg.RenderableView: void setVectorEffect(int)
androidx.compose.ui.platform.ViewLayer: androidx.compose.ui.platform.AndroidComposeView getOwnerView()
com.reactnativecommunity.webview.RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.airbnb.mvrx.Async getSelectNetworkedAccountAsync()
com.google.crypto.tink.proto.KeyData: KeyData()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.defaults.DefaultComponentsRegistry$Companion: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: android.widget.RadioButton getWhitelistNoRadioButton$3ds2sdk_release()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void onDropViewInstance(com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async component5()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState copy$default(com.stripe.android.financialconnections.features.consent.ConsentState,com.airbnb.mvrx.Async,java.util.List,com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect,int,java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
androidx.constraintlayout.motion.widget.MotionLayout: void setScene(androidx.constraintlayout.motion.widget.MotionScene)
com.rnmaps.maps.MapOverlay: void setIconBitmapDescriptor(com.google.android.gms.maps.model.BitmapDescriptor)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.rnmaps.maps.MapWMSTileManager: void setZIndex(com.rnmaps.maps.MapWMSTile,float)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(android.view.View,java.lang.Double)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void lambda$finishSharedAnimation$1(android.view.ViewParent)
androidx.viewpager.widget.ViewPager$ItemInfo: ViewPager$ItemInfo()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.horcrux.rnsvg.NativeSvgViewModuleSpec: void toDataURL(java.lang.Double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.stripe.android.view.PaymentMethodsRecyclerView: kotlin.jvm.functions.Function1 getPaymentMethodSelectedCallback$payments_core_release()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
androidx.core.app.ActivityOptionsCompat$Api16Impl: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
kotlin.text.Charsets: Charsets()
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
com.stripe.android.financialconnections.features.consent.ConsentState: boolean equals(java.lang.Object)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsAccountList$Companion: FinancialConnectionsAccountList$Companion()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
com.stripe.android.uicore.address.FieldType: com.stripe.android.uicore.address.FieldType[] values()
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,java.lang.String)
com.stripe.android.model.Source$Usage: com.stripe.android.model.Source$Usage[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.swmansion.reanimated.NativeProxy$1: int findPrecedingViewTagForTransition(int)
com.stripe.android.ui.core.elements.SimpleTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] values()
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(android.view.View,java.lang.Double)
com.reactnativestripesdk.addresssheet.AddressLauncherFragment: AddressLauncherFragment()
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean getIsReducedMotion()
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.stripe.android.model.StripeIntent$Status: java.lang.String toString()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer component7()
com.stripe.android.paymentsheet.analytics.PaymentSheetEvent: PaymentSheetEvent()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.stripe.android.paymentsheet.model.PaymentSheetViewState$Reset: PaymentSheetViewState$Reset()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(android.view.View,java.lang.Double)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setRotate(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.stripe.android.ui.core.elements.AffirmTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.reactnativestripesdk.CardFieldViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerMid(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion: com.stripe.android.financialconnections.features.manualentry.ManualEntryState initialState(com.airbnb.mvrx.ViewModelContext)
com.stripe.android.ui.core.elements.EmailSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeLinejoin(android.view.View,int)
com.google.crypto.tink.proto.AesGcmSivKey$Builder: AesGcmSivKey$Builder()
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.reactnativepagerview.PagerViewViewManager: void setOverScrollMode(com.reactnativepagerview.NestedScrollableHost,java.lang.String)
com.dropShadow.DropShadowLayout: void setShadowColor(java.lang.Integer)
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
androidx.compose.ui.graphics.Outline: Outline()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
com.google.android.material.progressindicator.CircularProgressIndicator: void setIndicatorSize(int)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: NativeProxyCommon(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.model.wallets.Wallet$Type: com.stripe.android.model.wallets.Wallet$Type valueOf(java.lang.String)
com.swmansion.reanimated.R$dimen: R$dimen()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.stripe.android.uicore.elements.PhoneNumberController: PhoneNumberController()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void cancelAnimationForTag(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.reactnativestripesdk.CardFormView: com.stripe.android.model.Address getCardAddress()
org.greenrobot.eventbus.EventBus: EventBus()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
androidx.compose.foundation.interaction.DragInteraction$Start: DragInteraction$Start()
com.stripe.android.model.SourceOrder$Item$Type: com.stripe.android.model.SourceOrder$Item$Type[] values()
okhttp3.Cache$Companion: Cache$Companion()
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: void unregisterSensor(int)
com.stripe.android.financialconnections.model.AccountHolder$Type: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.stripe.android.financialconnections.FinancialConnectionsSheetState: FinancialConnectionsSheetState(com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs,boolean,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest,com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus,com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDashoffset(android.view.View,float)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.stripe.android.view.BecsDebitWidget: com.stripe.android.model.PaymentMethodCreateParams getParams()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void access$100(com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener,int)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.rnmaps.maps.MapMarkerManager: void setTracksViewChanges(com.rnmaps.maps.MapMarker,boolean)
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType valueOf(java.lang.String)
com.google.crypto.tink.proto.KeyData$Builder: KeyData$Builder()
androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Api28Impl: void setScrollEventDelta(android.view.accessibility.AccessibilityEvent,int,int)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactcommunity.rndatetimepicker.DatePickerModule)
okhttp3.RequestBody$Companion: RequestBody$Companion()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.stripe.android.model.ConsumerSession$VerificationSession$SessionType: com.stripe.android.model.ConsumerSession$VerificationSession$SessionType valueOf(java.lang.String)
com.stripe.android.view.CardMultilineWidget: void setCvcErrorListener$payments_core_release(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.stripe.android.financialconnections.model.SynchronizeSessionResponse$Companion: kotlinx.serialization.KSerializer serializer()
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeDropAncestors(android.view.View)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.rnmaps.maps.MapManager: void setLoadingIndicatorColor(com.rnmaps.maps.MapView,java.lang.Integer)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.stripe.android.paymentsheet.PaymentOptionsItem$ViewType: com.stripe.android.paymentsheet.PaymentOptionsItem$ViewType[] values()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDy(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,java.lang.String)
com.stripe.android.model.Token$Type: com.stripe.android.model.Token$Type valueOf(java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
androidx.compose.runtime.collection.IdentityArraySet: IdentityArraySet()
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.progressindicator.BaseProgressIndicator: android.graphics.drawable.Drawable getCurrentDrawable()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.facebook.soloader.nativeloader.NativeLoader: NativeLoader()
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addPreAllocateMountItem(com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem)
com.horcrux.svg.RenderableView: boolean setupStrokePaint(android.graphics.Paint,float)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] values()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.stripe.android.view.CardMultilineWidget: void setCardHint(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.reactnativecommunity.webview.RNCWebView: android.webkit.WebChromeClient getWebChromeClient()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalStyle(int)
com.stripe.android.ui.core.elements.TranslationId: com.stripe.android.ui.core.elements.TranslationId valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDisplay(android.view.View,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
com.reactnativestripesdk.StripeSdkModule: void createTokenForCVCUpdate(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.motion.widget.MotionHelper: void setProgress(float)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.google.android.material.timepicker.TimeModel: TimeModel()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.reactnativestripesdk.addresssheet.AddressSheetView: void setSheetTitle(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.reactcommunity.rndatetimepicker.TimePickerModule: TimePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapPolyline: com.google.android.gms.maps.model.PolylineOptions getPolylineOptions()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.swmansion.reanimated.ReaCompatibility: void registerFabricEventListener(com.swmansion.reanimated.NodesManager)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.stripe.android.financialconnections.FinancialConnectionsSheetResult: FinancialConnectionsSheetResult()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState copy$default(com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,java.lang.String,int,java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: int hashCode()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.SvgViewManager: void setBorderTopRightRadius(android.view.View,double)
com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsEvent$Code: com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsEvent$Code valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setOpacity(android.view.View,float)
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void progressLayoutAnimation(int,java.util.Map,boolean)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionStart()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.reactnativepagerview.NestedScrollableHost: android.view.View getChild()
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetState copy$default(com.stripe.android.financialconnections.FinancialConnectionsSheetState,com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs,boolean,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest,com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus,com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect,int,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String getValidEmail()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$BillingAddressConfig$Format: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$BillingAddressConfig$Format valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
kotlin.sequences.SequenceScope: SequenceScope()
androidx.viewpager2.widget.ViewPager2: int getOrientation()
com.reactnativestripesdk.StripeSdkModule: void presentPaymentSheet(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isRootViewAttached()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,java.lang.Double)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion: NetworkingLinkSignupViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontWeight(android.view.View,java.lang.Double)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
androidx.compose.ui.graphics.painter.Painter: Painter()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.reactnativecommunity.picker.TextViewImpl: void setHorizontallyScrolling(boolean)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState copy(java.lang.String,boolean,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextLength(com.horcrux.svg.TextView,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toBasicMap()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.stripe.android.core.networking.RetryDelaySupplier: RetryDelaySupplier()
com.stripe.android.model.ConsumerSessionLookup$Companion: ConsumerSessionLookup$Companion()
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
okhttp3.internal.http2.Settings: Settings()
androidx.compose.foundation.text.DeadKeyCombiner: DeadKeyCombiner()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.google.crypto.tink.config.internal.TinkFipsUtil: TinkFipsUtil()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionDuration()
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.bridge.Dynamic: int asInt()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(int,long)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setOn(com.reactnativecommunity.checkbox.ReactCheckBox,boolean)
androidx.appcompat.widget.SearchView: int getImeOptions()
okhttp3.Headers$Builder: Headers$Builder()
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.rnmaps.maps.MapMarkerManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.material.progressindicator.BaseProgressIndicator: android.graphics.drawable.Drawable getIndeterminateDrawable()
com.stripe.android.view.CardMultilineWidget: void setPostalCodeRequired(boolean)
com.stripe.android.ui.core.elements.TranslationId$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.work.ListenableWorker$Result: ListenableWorker$Result()
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.rnmaps.maps.MapPolygon: void setCoordinates(com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.motion.widget.KeyPosition: KeyPosition()
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
com.rnmaps.maps.MapMarkerManager: void setCoordinate(com.rnmaps.maps.MapMarker,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
androidx.room.RoomDatabase$Callback: RoomDatabase$Callback()
com.azendoo.reactnativesnackbar.SnackbarModule: java.lang.String getOptionValue(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.stripe.android.view.CardInputWidget: void setUsZipCodeRequired(boolean)
com.stripe.android.link.ui.inline.UserInput: UserInput()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setResponsible(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.wallet.PaymentDataRequest: PaymentDataRequest()
com.stripe.android.uicore.address.FieldType: com.stripe.android.uicore.address.FieldType valueOf(java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: long measure(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType valueOf(java.lang.String)
com.google.crypto.tink.mac.MacWrapper: MacWrapper()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.stripe.android.view.CardInputWidget: java.util.Set getInvalidFields()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void disableCleaningForViewTag(int)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.horcrux.svg.SvgViewManager: void setBorderLeftColor(android.view.View,java.lang.Integer)
com.swmansion.reanimated.NodesManager: void registerEventHandler(com.facebook.react.uimanager.events.RCTEventEmitter)
com.stripe.android.stripe3ds2.init.ui.StripeButtonCustomization: StripeButtonCustomization()
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion: FinancialConnectionsSheetNativeViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion: PartnerAuthViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow[] values()
com.rnmaps.maps.MapMarker: void setCalloutView(com.rnmaps.maps.MapCallout)
com.reactnativestripesdk.CardFormViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableView: double saturate(double)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setName(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedTransition(java.util.List,int)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.autofill.Autofill getAutofill()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(android.view.View,java.lang.Double)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnShow(float)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.stripe.android.ui.core.elements.autocomplete.model.AddressComponent$Companion: AddressComponent$Companion()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.stripe.android.view.StripeEditText: android.view.View$OnFocusChangeListener getParentOnFocusChangeListener()
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItems(long)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.airbnb.mvrx.Async getPayload()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.stripe.android.model.PaymentIntent$Error$Type: com.stripe.android.model.PaymentIntent$Error$Type[] values()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.horcrux.svg.SvgViewManager: void setBorderBottomColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setAlignmentBaseline(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFillRule(android.view.View,int)
com.google.android.material.progressindicator.BaseProgressIndicator: void setIndeterminate(boolean)
com.rnmaps.maps.MapUrlTile: void setFlipY(boolean)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.stripe.android.view.PaymentFlowActivity: PaymentFlowActivity()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.swmansion.gesturehandler.react.RNGestureHandlerEvent: RNGestureHandlerEvent()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior(java.lang.String,int,java.lang.String)
com.horcrux.svg.SvgView: void setBbWidth(java.lang.String)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: ManualEntrySuccessState(com.airbnb.mvrx.Async)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.stripe.android.stripe3ds2.transaction.ChallengeParameters: ChallengeParameters()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: int hashCode()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: FinancialConnectionsSessionManifest$Pane(java.lang.String,int,java.lang.String)
com.swmansion.reanimated.NodesManager: float[] measure(int)
com.stripe.android.model.StripeIntent$Usage: com.stripe.android.model.StripeIntent$Usage valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.stripe.android.view.CardInputWidget: void setShowingFullCard$payments_core_release(boolean)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.hapticfeedback.HapticFeedback getHapticFeedBack()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVerticalAlign(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
okhttp3.Request$Builder: Request$Builder()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findStack(android.view.View)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.google.android.gms.internal.base.zac: zac()
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.stripe.android.financialconnections.model.Entry$Image$Companion: Entry$Image$Companion()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.horcrux.svg.VirtualViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.BV.LinearGradient.LinearGradientManager: void setEndPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String component2()
androidx.compose.ui.autofill.AutofillApi26Helper: void setAutofillId(android.view.ViewStructure,android.view.autofill.AutofillId,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
com.stripe.android.ui.core.elements.PlaceholderSpec: PlaceholderSpec()
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$CanceledSpec: kotlinx.serialization.KSerializer serializer()
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
com.swmansion.reanimated.Utils: float convertToFloat(java.lang.Object)
com.stripe.android.financialconnections.features.success.SuccessState: int hashCode()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView: void setSourceMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.stripe.android.financialconnections.model.TextUpdate$Companion: TextUpdate$Companion()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
androidx.viewpager2.widget.ViewPager2: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
com.stripe.android.view.PaymentMethodsAdapter$ViewType: com.stripe.android.view.PaymentMethodsAdapter$ViewType[] values()
androidx.compose.ui.platform.AbstractComposeView: void setViewCompositionStrategy(androidx.compose.ui.platform.ViewCompositionStrategy)
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.crypto.tink.proto.KeyTypeEntry: KeyTypeEntry()
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.rnmaps.maps.MapHeatmap: void setGradient(com.google.maps.android.heatmaps.Gradient)
com.swmansion.reanimated.ReanimatedModule: java.lang.String getName()
com.reactnativestripesdk.GooglePayButtonManager: GooglePayButtonManager()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String component3()
kotlin.collections.ArrayDeque: ArrayDeque()
com.google.android.material.search.SearchView: float getOverlayElevation()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.reactnativestripesdk.CardFormViewManager: void setPostalCodeEnabled$default(com.reactnativestripesdk.CardFormViewManager,com.reactnativestripesdk.CardFormView,boolean,int,java.lang.Object)
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.model.StripeIntent$Usage: java.lang.String toString()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(android.view.View,java.lang.String)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$Companion: ConfirmResponseStatusSpecs$Companion()
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.google.android.material.search.SearchView: void setSearchPrefixText(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier access$100(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: boolean install()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.SearchBarManager: void setPlacement(com.swmansion.rnscreens.SearchBarView,java.lang.String)
androidx.lifecycle.ReportFragment: ReportFragment()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.stripe.android.view.CardMultilineWidget: void setExpiryDateTextWatcher(android.text.TextWatcher)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.stripe.android.model.StripeIntent$NextActionData: StripeIntent$NextActionData()
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.compose.ui.platform.ViewLayer: void setInvalidated(boolean)
com.swmansion.reanimated.ReaCompatibility: void synchronouslyUpdateUIProps(int,com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.reactnativestripesdk.CardFormView: void setCardAddress(com.stripe.android.model.Address)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeLinecap(android.view.View,int)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.AndroidUIScheduler,com.swmansion.reanimated.layoutReanimation.LayoutAnimations,com.facebook.react.bridge.queue.MessageQueueThread,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.rnmaps.maps.MapUrlTileManager: void setTileCachePath(com.rnmaps.maps.MapUrlTile,java.lang.String)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View getViewRoot()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.bridge.ReadableNativeMap: void ensureKeysAreImported()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setOpacity(android.view.View,float)
com.rnmaps.maps.MapUrlTile: void setUrlTemplate(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int registerSensor(com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
androidx.viewpager2.widget.ViewPager2: void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer)
androidx.lifecycle.AndroidViewModel: AndroidViewModel(android.app.Application)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean equals(java.lang.Object)
com.stripe.android.paymentsheet.analytics.EventReporter$Mode: java.lang.String toString()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.reactnativecommunity.webview.RNCWebView$RNCWebViewBridge: java.lang.String injectedObjectJson()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
com.horcrux.svg.VirtualViewManager: void setRenderableView(int,com.horcrux.svg.RenderableView)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: LinkAccountPickerState()
com.google.crypto.tink.proto.XChaCha20Poly1305Key: XChaCha20Poly1305Key()
com.stripe.android.PaymentAuthConfig$Stripe3ds2LabelCustomization$Builder: PaymentAuthConfig$Stripe3ds2LabelCustomization$Builder()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setResponsible(android.view.View,boolean)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setTintColors(com.reactnativecommunity.checkbox.ReactCheckBox,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setPointerEvents(android.view.View,java.lang.String)
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.RenderableView getRenderableViewByTag(int)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.bumptech.glide.load.model.ModelCache$ModelKey: ModelCache$ModelKey()
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.stripe.android.stripe3ds2.security.DirectoryServer: com.stripe.android.stripe3ds2.security.DirectoryServer[] values()
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.SharedValues getSharedValues()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.airbnb.mvrx.Async getAuthenticationStatus()
com.stripe.android.view.CountryTextInputLayout: void setCountrySelected$payments_core_release(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int getSurfaceId()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.events.EventBeatManager)
androidx.transition.TransitionValues: TransitionValues()
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
androidx.compose.animation.core.TweenSpec: TweenSpec()
com.rnmaps.maps.MapManager: com.rnmaps.maps.MapMarkerManager getMarkerManager()
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.stripe.android.ui.core.elements.Capitalization: com.stripe.android.ui.core.elements.Capitalization[] values()
com.stripe.android.ui.core.elements.PlaceholderSpec$Companion: PlaceholderSpec$Companion()
com.stripe.android.paymentsheet.state.LinkState$LoginState: com.stripe.android.paymentsheet.state.LinkState$LoginState[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.stripe.android.view.StripeEditText: void setErrorMessage$payments_core_release(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
androidx.compose.ui.graphics.Brush: Brush()
com.stripe.android.ConfirmStripeIntentParamsFactory: ConfirmStripeIntentParamsFactory()
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.google.android.gms.wallet.wobs.LoyaltyPointsBalance: LoyaltyPointsBalance()
androidx.compose.foundation.Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.features.success.SuccessState: boolean equals(java.lang.Object)
com.facebook.react.fabric.CppViewMutationsWrapper: CppViewMutationsWrapper()
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.stripe.android.view.StripeEditText: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)
com.reactnativecommunity.webview.RNCWebView: void setHasScrollEvent(boolean)
androidx.compose.ui.text.platform.extensions.LocaleListHelperMethods: void setTextLocales(androidx.compose.ui.text.platform.AndroidTextPaint,androidx.compose.ui.text.intl.LocaleList)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.stripe.android.model.ConsumerSession$VerificationSession$SessionState: com.stripe.android.model.ConsumerSession$VerificationSession$SessionState valueOf(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void toggleSlowAnimations()
com.facebook.react.fabric.FabricUIManager$6: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.stripe.android.view.ShippingInfoWidget: void setHiddenFields(java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.stripe.android.view.CardValidCallback$Fields: com.stripe.android.view.CardValidCallback$Fields valueOf(java.lang.String)
com.stripe.android.view.CardFormView: void setCardValidCallback(com.stripe.android.view.CardValidCallback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void enableCleaningForViewTag(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.LongStreamingStats: void add(long)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.stripe.android.view.ShippingInfoWidget: com.stripe.android.model.ShippingInformation getRawShippingInformation()
com.swmansion.reanimated.NodesManager: void access$100(com.swmansion.reanimated.NodesManager,long)
com.rnmaps.maps.MapGradientPolylineManager: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.swmansion.reanimated.AndroidUIScheduler$1: AndroidUIScheduler$1(com.swmansion.reanimated.AndroidUIScheduler)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.horcrux.svg.VirtualView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.stripe.android.financialconnections.features.consent.ConsentState: ConsentState()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setClipPath(android.view.View,java.lang.String)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
com.horcrux.svg.RenderableView: void setFillRule(int)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.reactnativestripesdk.CardFieldView: void setCardStyle(com.facebook.react.bridge.ReadableMap)
androidx.constraintlayout.motion.widget.MotionLayout: long getTransitionTimeMs()
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod$Companion: LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod$Companion()
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AccessibilityManager getAccessibilityManager()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding access$600(com.facebook.react.fabric.FabricUIManager)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.stripe.android.GooglePayJsonFactory$BillingAddressParameters$Format: com.stripe.android.GooglePayJsonFactory$BillingAddressParameters$Format[] values()
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.rnmaps.maps.MapManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen: androidx.fragment.app.Fragment getFragment()
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.SvgViewManager: void setBorderBottomLeftRadius(com.horcrux.svg.SvgView,double)
com.google.crypto.tink.proto.AesGcmKeyFormat$Builder: AesGcmKeyFormat$Builder()
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.compose.ui.text.input.ImmHelper30: void showSoftInput(android.view.inputmethod.InputMethodManager)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.reactnativestripesdk.GooglePayButtonManager: com.reactnativestripesdk.GooglePayButtonView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: InstitutionPickerState(java.lang.String,boolean,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.progressindicator.LinearProgressIndicator: void setIndicatorColor(int[])
androidx.compose.ui.platform.AbstractComposeView: void setParentContext(androidx.compose.runtime.CompositionContext)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.reactnativecommunity.picker.ReactDialogPickerManager: ReactDialogPickerManager()
com.rnmaps.maps.MapGradientPolyline: void setStrokeColors(int[])
com.reactnativestripesdk.addresssheet.AddressSheetView: void setPrimaryButtonTitle(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.reactnativestripesdk.CardFormViewManager: void setDisabled(com.reactnativestripesdk.CardFormView,boolean)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.stripe.android.model.SourceParams$TypeData: SourceParams$TypeData()
com.bumptech.glide.load.resource.UnitTransformation: UnitTransformation()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,java.lang.Double)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer getAccountError()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(android.view.View,int)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.rnmaps.maps.MapManager: void setUserLocationUpdateInterval(com.rnmaps.maps.MapView,int)
com.BV.LinearGradient.LinearGradientManager: void setLocations(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFillOpacity(android.view.View,float)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.rnmaps.maps.MapView: android.widget.RelativeLayout getMapLoadingLayoutView()
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
com.rnmaps.maps.MapMarkerManager: void setPinColor(com.rnmaps.maps.MapMarker,int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.compose.ui.graphics.Api26Bitmap: androidx.compose.ui.graphics.colorspace.ColorSpace composeColorSpace$ui_graphics_release(android.graphics.ColorSpace)
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod[] $values()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.compose.runtime.Recomposer$State: androidx.compose.runtime.Recomposer$State valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,java.lang.Double)
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.accompanist.navigation.animation.AnimatedComposeNavigator: AnimatedComposeNavigator()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.swmansion.reanimated.ReanimatedModule$1: ReanimatedModule$1(com.swmansion.reanimated.ReanimatedModule,java.util.ArrayList)
com.facebook.react.views.view.ReactViewGroup: void initView()
com.rnmaps.maps.MapMarkerManager: void setOpacity(android.view.View,float)
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.swmansion.reanimated.NativeProxy$1: void cancelAnimation(int)
com.rnmaps.maps.MapCircleManager: void setStrokeColor(com.rnmaps.maps.MapCircle,int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.LayoutShadowNode: void setGap(float)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void screenDidLayout()
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setOpacity(android.view.View,float)
com.stripe.android.core.networking.StripeRequest$Method: com.stripe.android.core.networking.StripeRequest$Method[] values()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeDashoffset(android.view.View,float)
com.stripe.android.model.Source$Status: com.stripe.android.model.Source$Status[] values()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(android.view.View,java.lang.String)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.rnmaps.maps.MapManager: void onDropViewInstance(android.view.View)
com.facebook.react.fabric.FabricUIManager$6: FabricUIManager$6(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.stripe.android.financialconnections.model.Entry$Text$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.model.BankAccount$Type: com.stripe.android.model.BankAccount$Type valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.stripe.android.ui.core.elements.autocomplete.model.Place$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getScreenCTM(java.lang.Double)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.stripe.android.stripe3ds2.views.ChallengeZoneTextView: com.google.android.material.textfield.TextInputLayout getInfoLabel$3ds2sdk_release()
com.rnmaps.maps.MapPolygon: void setStrokeColor(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
kotlin.collections.builders.MapBuilder: MapBuilder()
com.stripe.android.model.PaymentMethod$Type: com.stripe.android.model.PaymentMethod$Type[] values()
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
com.rnmaps.maps.MapGradientPolylineManager: com.rnmaps.maps.MapGradientPolyline createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontSize(com.horcrux.svg.GroupView,java.lang.Double)
androidx.compose.animation.core.AnimationVector: AnimationVector()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.stripe.android.view.SelectShippingMethodWidget: SelectShippingMethodWidget(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()
com.horcrux.svg.VirtualView: void clearChildCache()
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object,com.facebook.react.fabric.CppComponentRegistry)
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.VirtualViewManager: void setPointerEvents(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.rnmaps.maps.MapView: void setKmlSrc(java.lang.String)
com.facebook.react.fabric.CppViewMutationsWrapper: com.facebook.jni.HybridData initHybrid()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.stripe.android.view.AddPaymentMethodView: com.stripe.android.model.PaymentMethodCreateParams getCreateParams()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.reactnativepagerview.PagerViewViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: NativeSvgRenderableModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion: com.stripe.android.financialconnections.features.success.SuccessViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.success.SuccessState)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.stripe.android.customersheet.CustomerSheetActivity: CustomerSheetActivity()
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel: NetworkingLinkLoginWarmupViewModel(com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.domain.DisableNetworking,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.horcrux.svg.SvgViewManager: void setBorderBottomRightRadius(com.horcrux.svg.SvgView,double)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.stripe.android.view.StripeEditText: void setErrorColor(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.stripe.android.uicore.elements.PhoneNumberState$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.airbnb.mvrx.Async getConfirmVerification()
com.rnmaps.maps.MapWMSTileManager: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.facebook.react.TurboReactPackage: TurboReactPackage()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.swmansion.reanimated.R$animator: R$animator()
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.NativeProxy$1: void startAnimation(int,int,java.util.HashMap)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setCppVersion(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.stripe.android.view.CardInputWidget: void setCvcLabel(java.lang.String)
androidx.compose.ui.node.LayoutNode$LayoutState: androidx.compose.ui.node.LayoutNode$LayoutState[] values()
com.rnmaps.maps.MapPolygonManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.rnmaps.maps.MapView: void setMoveOnMarkerPress(boolean)
com.reactnativestripesdk.CardFormView: void setPlaceHolders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableView: boolean hasOwnProperty(java.lang.String)
com.stripe.android.networking.PaymentAnalyticsRequestFactory$ThreeDS2UiType: java.lang.String toString()
androidx.compose.ui.platform.ComposeView: void getShouldCreateCompositionOnAttachedToWindow$annotations()
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButton: PaymentSheet$PrimaryButton()
androidx.cardview.widget.CardView: float getRadius()
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.stripe.android.financialconnections.model.NetworkingLinkSignupPane$Companion: NetworkingLinkSignupPane$Companion()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.stripe.android.stripe3ds2.views.ChallengeZoneTextView: void setTextBoxCustomization(com.stripe.android.stripe3ds2.init.ui.TextBoxCustomization)
com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView: java.util.List getSelectedIndexes$3ds2sdk_release()
com.stripe.android.model.SourceOrderParams$Item$Type: com.stripe.android.model.SourceOrderParams$Item$Type valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
kotlin.jvm.internal.Intrinsics: Intrinsics()
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
com.facebook.react.fabric.DevToolsReactPerfLogger: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: NetworkingLinkSignupState()
com.stripe.android.view.CountryTextInputLayout: kotlin.jvm.functions.Function1 getCountryCodeChangeCallback()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.events.EventEmitterWrapper: void destroy()
com.stripe.android.core.networking.StripeRequest: StripeRequest()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState valueOf(java.lang.String)
androidx.constraintlayout.motion.utils.ViewOscillator: ViewOscillator()
com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration$FieldConfiguration: com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration$FieldConfiguration[] values()
com.rnmaps.maps.MapPolygonManager: MapPolygonManager(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
kotlinx.serialization.json.JsonArray$Companion: JsonArray$Companion()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.stripe.android.financialconnections.model.Cta$Companion: Cta$Companion()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(android.view.View,java.lang.Double)
com.facebook.jni.HybridData: HybridData()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: FabricUIManager$DispatchUIFrameCallback(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.stripe.android.view.EmailEditText: EmailEditText(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: FinancialConnectionsAccount$Status(java.lang.String,int,java.lang.String)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion: com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState initialState(com.airbnb.mvrx.ViewModelContext)
com.reactnativecommunity.picker.ReactPicker: void setSelectionWithSuppressEvent(int)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.stripe.android.view.CardInputWidget: com.stripe.android.model.PaymentMethodCreateParams getPaymentMethodCreateParams()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async getPayload()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String component2()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.dynamicanimation.animation.AnimationHandler: AnimationHandler()
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode[] $values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.rnmaps.maps.MapWMSTileManager: com.rnmaps.maps.MapWMSTile createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$CollectionMode: com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$CollectionMode[] values()
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.stripe.android.financialconnections.model.Body$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.google.android.material.search.SearchBar: float getCornerSize()
com.stripe.android.GooglePayJsonFactory$BillingAddressParameters: GooglePayJsonFactory$BillingAddressParameters()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.stripe.android.ui.core.elements.NextActionSpec: NextActionSpec()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setBaselineShift(com.horcrux.svg.TextView,java.lang.Double)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeMiterlimit(android.view.View,float)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(android.view.View,java.lang.String)
com.stripe.android.uicore.address.NameType$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: DevToolsReactPerfLogger$FabricCommitPoint(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect component5()
com.reactnativecommunity.picker.ReactDialogPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.reactnativestripesdk.CardFieldView: java.util.Map getValue()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.rnmaps.maps.MapGradientPolyline: java.lang.Object getFeature()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.compose.ui.platform.AndroidComposeView: android.view.View getView()
com.google.crypto.tink.proto.XChaCha20Poly1305Key$Builder: XChaCha20Poly1305Key$Builder()
com.stripe.android.stripe3ds2.views.BrandZoneView: BrandZoneView(android.content.Context,android.util.AttributeSet)
com.stripe.android.core.exception.APIException: APIException()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.compose.foundation.gestures.BringIntoViewRequestPriorityQueue: BringIntoViewRequestPriorityQueue()
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
kotlinx.serialization.json.JsonNull: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.OkHttpClient: OkHttpClient()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.stripe.android.paymentsheet.LinkHandler$ProcessingState: LinkHandler$ProcessingState()
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.fabric.SurfaceHandler,android.view.View)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
androidx.compose.foundation.layout.Direction: androidx.compose.foundation.layout.Direction[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.compose.ui.viewinterop.AndroidViewHolder: kotlin.jvm.functions.Function0 getRelease()
com.google.android.gms.internal.wallet.zze: zze()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions$Companion: FinancialConnectionsAccount$Permissions$Companion()
com.stripe.android.financialconnections.model.TextUpdate$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setName(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.horcrux.svg.SvgViewManager: void setNeedsOffscreenAlphaCompositing(com.horcrux.svg.SvgView,boolean)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.stripe.android.ui.core.elements.NameSpec: NameSpec()
com.nimbusds.jose.Payload$Origin: com.nimbusds.jose.Payload$Origin valueOf(java.lang.String)
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: boolean isPointInStroke(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.google.crypto.tink.proto.AesGcmSivKeyFormat$Builder: AesGcmSivKeyFormat$Builder()
com.reactnativecommunity.webview.RNCWebView: com.facebook.react.uimanager.ThemedReactContext getThemedReactContext()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion: InstitutionPickerViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.stripe.android.ui.core.elements.OTPSpec: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.VirtualViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.text.TextInlineImageSpan: TextInlineImageSpan()
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData getHybridData()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.facebook.imageutils.TiffUtil: TiffUtil()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(android.view.View,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.bouncycastle.jce.provider.BouncyCastleProvider: BouncyCastleProvider()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.rnmaps.maps.MapModule: android.app.Activity getActivity()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.rnmaps.maps.MapOverlay: void setZIndex(float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling(int)
androidx.constraintlayout.core.motion.utils.SplineSet: SplineSet()
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType[] values()
com.facebook.react.fabric.mounting.MountItemDispatcher: void addMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeMiterlimit(android.view.View,float)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status$Companion: FinancialConnectionsSession$Status$Companion()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig: KeyframesSpec$KeyframesSpecConfig()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void updateKeyboard(int)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: com.airbnb.mvrx.Async component1()
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType valueOf(java.lang.String)
com.swmansion.reanimated.CopiedEvent: int access$002(com.swmansion.reanimated.CopiedEvent,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.stripe.android.model.SourceParams$ApiParams: SourceParams$ApiParams()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product$Companion: FinancialConnectionsSessionManifest$Product$Companion()
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setAdditionalFields(com.reactnativestripesdk.addresssheet.AddressSheetView,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.rnmaps.maps.MapModule: void coordinateForPoint(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeDeleteTreeAt(int,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.stripe.android.view.CardInputWidget: void setPostalCodeEnabled(boolean)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.rnmaps.maps.MapMarkerManager: MapMarkerManager()
androidx.compose.ui.platform.AbstractComposeView: void setTransitionGroup(boolean)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.stripe.android.financialconnections.model.Balance$Type: Balance$Type(java.lang.String,int,java.lang.String)
com.stripe.android.view.CountryTextInputLayout: void setCountryCodeChangeCallback(kotlin.jvm.functions.Function1)
com.reactnativecommunity.picker.ReactPicker: com.reactnativecommunity.picker.ReactPicker$OnSelectListener getOnSelectListener()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void isPlatformPaySupported(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setInlineSize(android.view.View,java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.stripe.android.financialconnections.features.reset.ResetViewModel: ResetViewModel(com.stripe.android.financialconnections.features.reset.ResetState,com.stripe.android.financialconnections.domain.LinkMoreAccounts,com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.view.View resolveView(int)
com.facebook.react.views.view.ReactViewGroup: void access$000(com.facebook.react.views.view.ReactViewGroup,android.view.View)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.google.crypto.tink.proto.AesCmacParams$Builder: AesCmacParams$Builder()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta: ConstraintSet$Constraint$Delta()
com.google.crypto.tink.proto.KmsEnvelopeAeadKey$Builder: KmsEnvelopeAeadKey$Builder()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.stripe.android.core.StripeError: StripeError()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
com.horcrux.svg.SvgViewManager: void setMinX(android.view.View,float)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.compose.ui.input.pointer.NodeParent: NodeParent()
com.stripe.android.stripe3ds2.views.Brand: com.stripe.android.stripe3ds2.views.Brand valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setAccessible(com.horcrux.svg.SvgView,boolean)
com.swmansion.reanimated.AndroidUIScheduler: void scheduleTriggerOnUI()
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean getReducedBranding()
androidx.compose.material.SnackbarDuration: androidx.compose.material.SnackbarDuration[] values()
com.stripe.android.ui.core.elements.SaveForFutureUseSpec$Companion: SaveForFutureUseSpec$Companion()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(android.view.View,java.lang.String)
com.horcrux.svg.VirtualView: void onMeasure(int,int)
com.stripe.android.view.CardMultilineWidget: void setPostalCodeErrorListener$payments_core_release(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.azendoo.reactnativesnackbar.SnackbarModule: java.util.Map getConstants()
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion: ManualEntryViewModel$Companion()
com.stripe.android.view.ExpiryDateEditText: void setIncludeSeparatorGaps(boolean)
com.rnmaps.maps.MapView: void setCamera(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.stripe.android.model.LuxePostConfirmActionCreator: LuxePostConfirmActionCreator()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Inspector$Page: int getId()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.PaymentMethod$BillingDetails getPaymentMethodBillingDetails()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.drawee.backends.pipeline.Fresco: Fresco()
okhttp3.Handshake$Companion: Handshake$Companion()
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: void dismiss(com.facebook.react.bridge.Promise)
com.reactnativestripesdk.StripeContainerManager: StripeContainerManager()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMask(android.view.View,java.lang.String)
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
com.google.android.material.search.SearchView: void setModalForAccessibility(boolean)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax valueOf(java.lang.String)
com.rnmaps.maps.MapManager: void setShowsMyLocationButton(com.rnmaps.maps.MapView,boolean)
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status[] $values()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
com.facebook.react.fabric.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.JSExceptionHandler)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners getViewTreeOwners()
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(android.view.View,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.rnmaps.maps.MapMarker: void setTracksViewChanges(boolean)
com.stripe.android.view.PostalCodeEditText$Config: com.stripe.android.view.PostalCodeEditText$Config[] values()
androidx.fragment.app.FragmentManager: FragmentManager()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
com.facebook.react.fabric.DevToolsReactPerfLogger: boolean isFabricCommitMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(android.view.View,java.lang.String)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
androidx.compose.ui.platform.actionmodecallback.MenuItemOption: androidx.compose.ui.platform.actionmodecallback.MenuItemOption[] values()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.horcrux.svg.VirtualView: int hitTest(float[])
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: androidx.core.view.WindowInsetsCompat lambda$setupWindowInsets$0(android.view.View,android.view.View,androidx.core.view.WindowInsetsCompat)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMask(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.reactnativepagerview.PagerViewViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(com.swmansion.rnscreens.Screen,boolean)
com.stripe.android.paymentsheet.forms.MandateRequirement: com.stripe.android.paymentsheet.forms.MandateRequirement[] values()
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.reactnativestripesdk.StripeSdkModule: void confirmPlatformPay(java.lang.String,com.facebook.react.bridge.ReadableMap,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.StripeEditText$ErrorMessageListener getCvcErrorListener$payments_core_release()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,java.lang.Double)
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: java.lang.Boolean getSaveToLinkWithStripeSucceeded()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.stripe.android.PaymentAuthConfig$Stripe3ds2ButtonCustomization$Builder: PaymentAuthConfig$Stripe3ds2ButtonCustomization$Builder()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.navigation.NavControllerViewModel: NavControllerViewModel()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(android.view.View,java.lang.String)
com.swmansion.reanimated.NativeProxy: void performOperations()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setInlineSize(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean dispatchMountItems()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.stripe.android.ui.core.elements.EmailSpec: EmailSpec()
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.stripe.android.model.ConsumerSession$VerificationSession$SessionState: com.stripe.android.model.ConsumerSession$VerificationSession$SessionState[] values()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.compose.ui.input.pointer.PointerInputFilter: PointerInputFilter()
com.facebook.react.bridge.ModuleHolder: void destroy()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.stripe.android.payments.core.authentication.threeds2.Stripe3ds2TransactionActivity: Stripe3ds2TransactionActivity()
com.facebook.react.fabric.mounting.MountingManager: void clearJSResponder()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMask(android.view.View,java.lang.String)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
com.stripe.android.model.PaymentMethodOptionsParams$Card: PaymentMethodOptionsParams$Card()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeWidth(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setLengthAdjust(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
androidx.compose.ui.platform.ComposeView: void setContent(kotlin.jvm.functions.Function2)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMarker(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.MountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapCalloutManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.JSIModule: void initialize()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.stripe.android.financialconnections.presentation.WebAuthFlowState: WebAuthFlowState()
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.horcrux.svg.VirtualView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFontSize(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.stripe.android.model.SourceTypeModel$Card$ThreeDSecureStatus: java.lang.String toString()
com.stripe.android.view.CardWidgetProgressView: CardWidgetProgressView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeWidth(android.view.View,java.lang.String)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.Collection getAndResetPreMountItems()
com.stripe.android.uicore.elements.ApiParameterDestination: com.stripe.android.uicore.elements.ApiParameterDestination[] values()
androidx.constraintlayout.motion.utils.ViewSpline: ViewSpline()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status[] $values()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.rnmaps.maps.MapMarkerManager: void setZIndex(com.rnmaps.maps.MapMarker,float)
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.facebook.react.bridge.ReadableArray: double getDouble(int)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setUseAngle(boolean)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.google.crypto.tink.shaded.protobuf.CodedOutputStream: CodedOutputStream()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: YogaNative()
com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField$Companion: PlaceholderSpec$PlaceholderField$Companion()
com.facebook.react.views.view.ReactViewGroup: ReactViewGroup(android.content.Context)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void runDeferredTagRemovalAndDeletion()
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.input.TextInputService getTextInputService()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion: com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.stripe.android.view.CardNumberEditText: kotlin.jvm.functions.Function0 getCompletionCallback$payments_core_release()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.stripe.android.view.StripeEditText: void setShouldShowError(boolean)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.stripe.android.view.CardMultilineWidget: void setCvcErrorListener(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.stripe.android.view.PaymentAuthWebView: void setOnLoadBlank$payments_core_release(kotlin.jvm.functions.Function0)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.stripe.android.uicore.address.CountryAddressSchema$Companion: CountryAddressSchema$Companion()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: ChoreographerCompat$FrameCallback()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.google.crypto.tink.proto.AesSivKey$Builder: AesSivKey$Builder()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.uimanager.UIManagerHelper: UIManagerHelper()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.rnmaps.maps.MapPolylineManager: void setGeodesic(com.rnmaps.maps.MapPolyline,boolean)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: int hashCode()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
androidx.work.impl.model.WorkSpec$IdAndState: WorkSpec$IdAndState()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMask(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableArray copyReadableArray(com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.horcrux.svg.SvgPackage: java.util.Collection getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
com.horcrux.svg.SvgViewManager: void setBorderStartColor(android.view.View,java.lang.Integer)
com.google.crypto.tink.shaded.protobuf.BooleanArrayList: BooleanArrayList()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeMiterlimit(android.view.View,float)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
androidx.room.RoomDatabase: RoomDatabase()
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.stripe.android.uicore.address.FieldSchema$Companion: kotlinx.serialization.KSerializer serializer()
androidx.constraintlayout.motion.widget.MotionLayout: android.os.Bundle getTransitionState()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.compose.foundation.layout.CrossAxisAlignment: CrossAxisAlignment()
com.facebook.react.fabric.Binding: void stopSurface(int)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.google.android.gms.internal.location.zzdp: zzdp()
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDashoffset(android.view.View,float)
com.swmansion.reanimated.NodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.stripe.android.core.utils.PluginDetector: PluginDetector()
com.reactnativecommunity.webview.RNCWebViewManager: void setSetDisplayZoomControls(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.compose.ui.viewinterop.AndroidViewHolder: kotlin.jvm.functions.Function1 getOnDensityChanged$ui_release()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.reactnativecommunity.picker.ReactDialogPickerManager: com.reactnativecommunity.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.stripe3ds2.transactions.ProtocolError: com.stripe.android.stripe3ds2.transactions.ProtocolError valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.airbnb.mvrx.Async component1()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.google.crypto.tink.shaded.protobuf.ByteString: ByteString()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
okhttp3.Cookie$Builder: Cookie$Builder()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.BV.LinearGradient.LinearGradientManager: void setAngle(com.BV.LinearGradient.LinearGradientView,float)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFillRule(android.view.View,int)
com.reactnativestripesdk.CardFieldViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.swmansion.reanimated.NodesManager$3: void runGuarded()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.stripe.android.view.StripeEditText: StripeEditText(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.rnmaps.maps.MapLocalTile: com.google.android.gms.maps.model.TileOverlayOptions getTileOverlayOptions()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.stripe.android.view.CardNumberEditText: kotlin.coroutines.CoroutineContext getWorkContext()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
com.stripe.android.core.networking.NetworkTypeDetector$NetworkType: com.stripe.android.core.networking.NetworkTypeDetector$NetworkType valueOf(java.lang.String)
com.stripe.android.view.CardNumberEditText: void getCardBrand$annotations()
androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)
kotlinx.serialization.json.JsonElement$Companion: JsonElement$Companion()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions()
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toTargetMap()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.rnmaps.maps.MapUrlTile: void setMaximumZ(float)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMarkerEnd(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: java.util.Set component4()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.airbnb.mvrx.Async component1()
androidx.compose.ui.viewinterop.AndroidViewHolder: androidx.compose.ui.node.LayoutNode getLayoutNode()
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion: com.stripe.android.financialconnections.features.consent.ConsentState initialState(com.airbnb.mvrx.ViewModelContext)
com.google.android.gms.wallet.zzau: zzau()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.stripe.android.financialconnections.model.NetworkingLinkSignupBody$Companion: NetworkingLinkSignupBody$Companion()
com.rnmaps.maps.MapCircleManager: void setZIndex(android.view.View,float)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void beginMarkers(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.stripe.android.view.CvcEditText: com.stripe.android.cards.Cvc$Unvalidated getUnvalidatedCvc()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.google.accompanist.web.AccompanistWebChromeClient: AccompanistWebChromeClient()
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.compose.ui.platform.RenderNodeVerificationHelper28: int getSpotShadowColor(android.view.RenderNode)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus$Companion: BalanceRefresh$BalanceRefreshStatus$Companion()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.horcrux.svg.SvgView: void setBbHeight(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.stripe.android.financialconnections.ui.components.FinancialConnectionsButton$Size: FinancialConnectionsButton$Size()
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: ReanimatedSensorContainer(java.lang.ref.WeakReference)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.reactcommunity.rndatetimepicker.NativeModuleDatePickerSpec: NativeModuleDatePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMask(android.view.View,java.lang.String)
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$AddressCollectionMode: com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$AddressCollectionMode[] values()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect getViewEffect()
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void quitSynchronous()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder,boolean)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
com.stripe.android.paymentsheet.ui.PrimaryButton: void getViewBinding$paymentsheet_release$annotations()
com.stripe.android.view.CardBrandView: com.stripe.android.model.CardBrand getBrand()
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getBBox(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.stripe.android.stripe3ds2.views.ChallengeZoneTextView: void setTextEntryLabel(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.WebAuthFlowState getWebAuthFlow()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFontSize(android.view.View,java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane$Companion: FinancialConnectionsSessionManifest$Pane$Companion()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.stripe.android.ui.core.elements.KeyboardType: com.stripe.android.ui.core.elements.KeyboardType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandlerHelper(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.rnmaps.maps.MapModule: java.util.Map getConstants()
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.views.view.ReactViewManagerWrapper,com.facebook.react.fabric.mounting.SurfaceMountingManager$1)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.stripe.android.view.CardInputWidget: com.stripe.android.view.CardInputWidget$LayoutWidthCalculator getLayoutWidthCalculator$payments_core_release()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,java.lang.Double)
com.rnmaps.maps.MapCircle: com.google.android.gms.maps.model.CircleOptions getCircleOptions()
com.stripe.android.link.injection.LinkComponent: LinkComponent()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.google.android.material.search.SearchView: android.view.Window getActivityWindow()
com.reactcommunity.rndatetimepicker.DatePickerModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
androidx.compose.ui.layout.IntrinsicWidthHeight: androidx.compose.ui.layout.IntrinsicWidthHeight valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
com.stripe.android.financialconnections.model.CashBalance: CashBalance()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.facebook.common.references.OOMSoftReference: OOMSoftReference()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion: FinancialConnectionsSheetNativeViewModel$Companion()
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.fabric.SurfaceHandler,android.content.Context,android.view.View)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.swmansion.reanimated.R$styleable: R$styleable()
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.stripe.android.financialconnections.features.reset.ResetState: com.airbnb.mvrx.Async getPayload()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.stripe.android.financialconnections.model.PaymentAccount: PaymentAccount()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.focus.FocusRequester: FocusRequester()
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(com.reactnativecommunity.picker.ReactPicker,int,com.facebook.react.bridge.ReadableArray)
com.stripe.android.view.PostalCodeEditText: PostalCodeEditText(android.content.Context,android.util.AttributeSet)
com.reactnativestripesdk.StripeSdkModule: void collectBankAccountToken(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: java.lang.String getValue()
com.rnmaps.maps.MapMarkerManager: void setFlat(com.rnmaps.maps.MapMarker,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragmentWrapper getFragmentWrapper()
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,java.lang.Double)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.airbnb.mvrx.Async component2()
com.rnmaps.maps.MapWMSTileManager: void setMaximumNativeZ(com.rnmaps.maps.MapWMSTile,float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(android.view.View,java.lang.Double)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.stripe.android.view.ShippingInfoWidget: void setAllowedCountryCodes(java.util.Set)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(android.view.View,java.lang.Double)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.stripe.android.view.CardMultilineWidget: void getShouldShowErrorIcon$payments_core_release$annotations()
com.swmansion.reanimated.NativeMethodsHelper: void computeBoundingBox(android.view.View,int[])
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.stripe.android.view.CardInputWidget: com.stripe.android.view.CardNumberEditText getCardNumberEditText$payments_core_release()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: java.lang.String getPreviewText()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeWidth(android.view.View,java.lang.String)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setExternalLabel$paymentsheet_release(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.rnmaps.maps.MapManager: void onDropViewInstance(com.rnmaps.maps.MapView)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
androidx.appcompat.app.AppLocalesMetadataHolderService: AppLocalesMetadataHolderService()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,java.lang.Double)
com.reactnativestripesdk.addresssheet.AddressSheetView: void setAllowedCountries(java.util.List)
androidx.compose.foundation.MutatePriority: androidx.compose.foundation.MutatePriority[] values()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.TextToolbar getTextToolbar()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type[] $values()
com.facebook.common.internal.Closeables: Closeables()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: SaveToLinkWithStripeSucceededRepository$State(java.lang.Boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)
com.reactnativecommunity.picker.ReactPickerManager: void setNumberOfLines(com.reactnativecommunity.picker.ReactPicker,int)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.stripe.android.ui.core.CardBillingDetailsCollectionConfiguration: CardBillingDetailsCollectionConfiguration()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.stripe.android.financialconnections.domain.ConfirmVerification$OTPError$Type: com.stripe.android.financialconnections.domain.ConfirmVerification$OTPError$Type valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.google.android.material.search.SearchBar: android.view.View getCenterView()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int,int)
androidx.compose.ui.platform.WrapperRenderNodeLayerHelperMethods: void onDescendantInvalidated(androidx.compose.ui.platform.AndroidComposeView)
com.google.android.gms.wallet.PaymentData: PaymentData()
com.stripe.android.ui.core.elements.AddressSpec: AddressSpec()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel: LinkStepUpVerificationViewModel(com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.domain.LookupConsumerAndStartVerification,com.stripe.android.financialconnections.domain.ConfirmVerification,com.stripe.android.financialconnections.domain.SelectNetworkedAccount,com.stripe.android.financialconnections.domain.GetCachedAccounts,com.stripe.android.financialconnections.domain.UpdateLocalManifest,com.stripe.android.financialconnections.domain.MarkLinkStepUpVerified,com.stripe.android.financialconnections.domain.UpdateCachedAccounts,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.stripe.android.link.serialization.PopupPayload$Companion: PopupPayload$Companion()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.google.android.gms.wallet.button.PayButton: void setOnClickListener(android.view.View$OnClickListener)
com.stripe.android.networking.PaymentAnalyticsEvent: com.stripe.android.networking.PaymentAnalyticsEvent valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.swmansion.reanimated.NativeProxy$1: void checkDuplicateSharedTag(int,int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.rnmaps.maps.MapCircle: void setRadius(double)
com.swmansion.reanimated.NodesManager$3: NodesManager$3(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,boolean,java.util.concurrent.Semaphore,java.util.Queue)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeMiterlimit(android.view.View,float)
com.rnmaps.maps.MapHeatmap: java.lang.Object getFeature()
com.reactnativestripesdk.FinancialConnectionsSheetFragment$Mode: com.reactnativestripesdk.FinancialConnectionsSheetFragment$Mode valueOf(java.lang.String)
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.stripe.android.view.CardMultilineWidget: void setCardValidCallback(com.stripe.android.view.CardValidCallback)
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: SurfaceMountingManager(int,com.facebook.react.touch.JSResponderHandler,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor,com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.stripe.android.financialconnections.model.Bullet$Companion: Bullet$Companion()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.rnmaps.maps.MapManager: void setShowIndoors(com.rnmaps.maps.MapView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: InstitutionPickerState()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setResponsible(android.view.View,boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] values()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.rnmaps.maps.MapView: void setShowsMyLocationButton(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1()
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
androidx.compose.ui.platform.AbstractComposeView: void setParentCompositionContext(androidx.compose.runtime.CompositionContext)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.compose.ui.platform.AndroidComposeView: void setFontFamilyResolver(androidx.compose.ui.text.font.FontFamily$Resolver)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.reactnativestripesdk.StripeSdkModule: androidx.fragment.app.FragmentActivity getCurrentActivityOrResolveWithError(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.google.crypto.tink.shaded.protobuf.IntArrayList: IntArrayList()
kotlinx.coroutines.channels.Receive: Receive()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,java.lang.Double)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setClipRule(android.view.View,int)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: boolean equals(java.lang.Object)
com.stripe.android.financialconnections.features.consent.ConsentState: java.util.List getMerchantLogos()
com.stripe.android.ui.core.elements.PhoneSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
androidx.compose.foundation.text.TextFieldScrollerPosition: TextFieldScrollerPosition()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontSize(com.horcrux.svg.GroupView,java.lang.String)
com.rnmaps.maps.MapManager: void setLoadingBackgroundColor(com.rnmaps.maps.MapView,java.lang.Integer)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.stripe.android.financialconnections.features.manualentry.ManualEntryState copy(com.airbnb.mvrx.Async,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.airbnb.mvrx.Async)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
androidx.compose.runtime.Recomposer$State: androidx.compose.runtime.Recomposer$State[] values()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(com.horcrux.svg.MarkerView,float)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.ExpiryDateEditText getExpiryDateEditText()
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setVectorEffect(android.view.View,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.swmansion.reanimated.MapUtils: int getInt(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleName()
okio.Timeout: Timeout()
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel: NetworkingSaveToLinkVerificationViewModel(com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetCachedConsumerSession,com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository,com.stripe.android.financialconnections.domain.StartVerification,com.stripe.android.financialconnections.domain.ConfirmVerification,com.stripe.android.financialconnections.domain.MarkLinkVerified,com.stripe.android.financialconnections.domain.GetCachedAccounts,com.stripe.android.financialconnections.domain.SaveAccountToLink,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.rnmaps.maps.MapManager: int getChildCount(android.view.ViewGroup)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
com.rnmaps.maps.MapMarkerManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
com.facebook.react.fabric.FabricUIManager$6: java.lang.String toString()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.stripe.android.view.CardInputWidget: java.util.List getCurrentFields$payments_core_release()
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setClipRule(android.view.View,int)
com.facebook.react.uimanager.ReanimatedUIManager: void dismissPopupMenu()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.google.crypto.tink.proto.AesEaxKeyFormat$Builder: AesEaxKeyFormat$Builder()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.stripe.android.stripe3ds2.views.ChallengeZoneView: void setInfoTextIndicator(int)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.compose.ui.autofill.AutofillApi26Helper: android.view.autofill.AutofillId getAutofillId(android.view.ViewStructure)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffStart()
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.PaymentMethodCreateParams$Card getPaymentMethodCard()
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.stripe.android.view.CountryTextInputLayout: void setSelectedCountryCode$payments_core_release(com.stripe.android.core.model.CountryCode)
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
androidx.compose.ui.viewinterop.ViewFactoryHolder: androidx.compose.ui.platform.AbstractComposeView getSubCompositionView()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.google.crypto.tink.shaded.protobuf.UnsafeUtil: UnsafeUtil()
com.stripe.android.view.CountryTextInputLayout: void setSelectedCountryCode(com.stripe.android.core.model.CountryCode)
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: ReactSwitchManager$ReactSwitchShadowNode()
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
com.stripe.android.model.ShippingInformation: ShippingInformation()
com.rnmaps.maps.MapMarkerManager: void setIdentifier(com.rnmaps.maps.MapMarker,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.jni.DestructorThread$1: void run()
com.google.android.material.search.SearchBar: java.lang.CharSequence getHint()
com.horcrux.svg.R$id: R$id()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.activity.result.ActivityResultRegistry: ActivityResultRegistry()
com.stripe.android.view.ShippingInfoWidget: java.util.List getOptionalFields()
com.stripe.android.view.CardInputWidget: com.stripe.android.view.CvcEditText getCvcEditText$payments_core_release()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.ui.core.elements.DisplayField$Companion: DisplayField$Companion()
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: AnimationFrameCallback(com.facebook.jni.HybridData)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.google.android.material.progressindicator.LinearProgressIndicator: void setIndicatorDirection(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setBaselineShift(android.view.View,java.lang.String)
com.stripe.android.paymentsheet.PaymentSheetResult: PaymentSheetResult()
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme[] values()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.GuardedFrameCallback: void doFrameGuarded(long)
com.stripe.android.PaymentAuthConfig$Stripe3ds2UiCustomization$Builder: PaymentAuthConfig$Stripe3ds2UiCustomization$Builder()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.bumptech.glide.load.engine.LockedResource: LockedResource()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.reactnativestripesdk.StripeSdkModule: java.lang.String access$getStripeAccountId$p(com.reactnativestripesdk.StripeSdkModule)
com.horcrux.svg.VirtualView: float getCanvasWidth()
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: NativeRNGestureHandlerModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void endCreatingModule()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior$Companion: kotlinx.serialization.KSerializer serializer()
com.reactnativepagerview.PagerViewViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String toString()
com.stripe.android.ui.core.elements.EmptyFormSpec: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.model.ConsentPaneBody$Companion: ConsentPaneBody$Companion()
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.google.crypto.tink.proto.AesCmacKey: AesCmacKey()
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.progressindicator.BaseProgressIndicator: void setIndicatorColor(int[])
androidx.core.net.ConnectivityManagerCompat$Api16Impl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(android.view.View,int)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType[] values()
com.stripe.android.ui.core.elements.autocomplete.model.Place$Companion: Place$Companion()
com.stripe.android.view.PostalCodeEditText: void setConfig$payments_core_release(com.stripe.android.view.PostalCodeEditText$Config)
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$Companion: LinkAccountSessionPaymentAccount$Companion()
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeMiterlimit(android.view.View,float)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$animator: R$animator()
androidx.compose.material.ScaffoldLayoutContent: androidx.compose.material.ScaffoldLayoutContent valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: SafeAreaViewShadowNode()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaConfigJNIBase: YogaConfigJNIBase()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,java.lang.String)
androidx.fragment.app.FragmentFactory: FragmentFactory()
com.rnmaps.maps.MapOverlayManager: void setTappable(com.rnmaps.maps.MapOverlay,boolean)
com.facebook.react.ReactActivity: ReactActivity()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadSoLibrary()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior valueOf(java.lang.String)
com.stripe.android.model.PaymentIntent$CancellationReason: com.stripe.android.model.PaymentIntent$CancellationReason valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
kotlin.math.MathKt: MathKt()
com.rnmaps.maps.MapMarkerManager: com.rnmaps.maps.MapMarker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.azendoo.reactnativesnackbar.SnackbarModule: float convertDpToPixel(float,android.content.Context)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,java.lang.String)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDx(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.stripe3ds2.views.InformationZoneView: int getToggleColor$3ds2sdk_release()
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List drainConcurrentItemQueue(java.util.concurrent.ConcurrentLinkedQueue)
androidx.transition.TransitionSet: TransitionSet()
com.stripe.android.financialconnections.model.CreditBalance$Companion: CreditBalance$Companion()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.rnmaps.maps.MapCircle: void setCenter(com.google.android.gms.maps.model.LatLng)
com.reactnativestripesdk.GooglePayButtonView: void setType(int)
com.google.android.gms.maps.internal.zzcc: zzcc()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.rnmaps.maps.MapManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.google.android.gms.wallet.wobs.UriData: UriData()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
com.stripe.android.view.ShippingInfoWidget$CustomizableShippingField: com.stripe.android.view.ShippingInfoWidget$CustomizableShippingField[] values()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.stripe.android.view.MaskedCardView: void setPaymentMethod(com.stripe.android.model.PaymentMethod)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.reactnativestripesdk.CardFormView: void setCountry(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean tryStartSharedTransitionForViews(java.util.List,boolean)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.facebook.react.fabric.CppViewMutationsWrapper: void destroy()
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.CvcEditText getCvcEditText()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getPointAtLength(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.rnmaps.maps.MapCircleManager: java.lang.String getName()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.rnmaps.maps.MapLocalTile: void setPathTemplate(java.lang.String)
com.stripe.android.financialconnections.model.AccountHolder$Type$Companion: AccountHolder$Type$Companion()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: int access$100(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
androidx.compose.ui.autofill.AutofillCallback: void register(androidx.compose.ui.autofill.AndroidAutofill)
com.stripe.android.view.ShippingInfoWidget: ShippingInfoWidget(android.content.Context,android.util.AttributeSet)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: NetworkingLinkLoginWarmupState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.stripe.android.uicore.address.FieldType$Companion: FieldType$Companion()
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.proyecto26.inappbrowser.RNInAppBrowserModule: java.lang.String getName()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.google.crypto.tink.shaded.protobuf.FloatArrayList: FloatArrayList()
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: java.lang.String getCta()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$AddressCollectionMode: com.stripe.android.paymentsheet.PaymentSheet$BillingDetailsCollectionConfiguration$AddressCollectionMode valueOf(java.lang.String)
com.stripe.android.financialconnections.model.OauthPrepane$Companion: OauthPrepane$Companion()
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: FinancialConnectionsSessionManifest$AccountDisconnectionMethod(java.lang.String,int,java.lang.String)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.facebook.drawee.generic.RoundingParams: RoundingParams()
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.CatalystInstanceImpl: void warnOnLegacyNativeModuleSystemUse()
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.stripe.android.paymentsheet.PaymentSheet$Address: PaymentSheet$Address()
androidx.navigation.NavOptionsBuilder: NavOptionsBuilder()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.horcrux.svg.SvgView: void enableTouchEvents()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.reactnativestripesdk.StripeSdkModule: void createTokenFromBankAccount(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
kotlin.jvm.internal.PropertyReference1: PropertyReference1()
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setDisplay(android.view.View,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.search.SearchView: void setVisible(boolean)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.horcrux.svg.SvgView: void setVbWidth(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetGapJNI(long,int)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.google.android.material.search.SearchView: void setElevation(float)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.horcrux.svg.SvgView: boolean isResponsible()
com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite: ExtensionRegistryLite()
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$CanceledSpec: PostConfirmHandlingPiStatusSpecs$CanceledSpec()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: java.lang.String getValue()
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(android.view.View,java.lang.Double)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapManager: void setZoomEnabled(com.rnmaps.maps.MapView,boolean)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.app.upfrica.MainActivity: MainActivity()
com.stripe.android.googlepaylauncher.GooglePayLauncherContract$Args: GooglePayLauncherContract$Args()
com.google.android.material.search.SearchView: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator$Message$Terminate$EarlyTerminationCause: com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator$Message$Terminate$EarlyTerminationCause[] values()
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion: NetworkingLinkVerificationViewModel$Companion()
com.google.crypto.tink.shaded.protobuf.ExtensionSchema: ExtensionSchema()
com.facebook.react.views.view.ReactViewGroup: void removeViewAt(int)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setupTransitionContainer()
com.stripe.android.ui.core.elements.BlikSpec$Companion: kotlinx.serialization.KSerializer serializer()
androidx.core.os.CancellationSignal: CancellationSignal()
com.facebook.react.uimanager.NativeViewHierarchyManager: long getInstanceHandle(int)
com.stripe.android.view.CardNumberEditText: void setCardBrand$payments_core_release(com.stripe.android.model.CardBrand)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
com.rnmaps.maps.MapWMSTileManager: void setMaximumZ(com.rnmaps.maps.MapWMSTile,float)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.horcrux.svg.VirtualView: void invalidate()
com.stripe.android.stripe3ds2.views.InformationZoneView: androidx.appcompat.widget.AppCompatImageView getWhyArrow$3ds2sdk_release()
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: boolean equals(java.lang.Object)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
androidx.compose.ui.text.caches.SimpleArrayMap: SimpleArrayMap()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.reactnativepagerview.PagerViewViewManager: void removeViewAt(android.view.ViewGroup,int)
kotlin.collections.builders.ListBuilder: ListBuilder()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
androidx.viewpager.widget.ViewPager: int getPageMargin()
com.stripe.android.uicore.elements.TextFieldStateConstants$Valid: TextFieldStateConstants$Valid()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
com.stripe.android.stripe3ds2.views.ChallengeZoneWebView: void setOnClickListener$3ds2sdk_release(android.view.View$OnClickListener)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.stripe.android.paymentsheet.PaymentOptionsActivity: PaymentOptionsActivity()
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,java.lang.Integer)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.paymentsheet.PaymentSheet$BillingDetails: PaymentSheet$BillingDetails()
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.rnmaps.maps.MapOverlayManager: void setZIndex(com.rnmaps.maps.MapOverlay,float)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.stripe.android.GooglePayJsonFactory$ShippingAddressParameters: GooglePayJsonFactory$ShippingAddressParameters()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeOpacity(android.view.View,float)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition)
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType[] values()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$FinishedSpec: kotlinx.serialization.KSerializer serializer()
com.stripe.android.ui.core.elements.CardBillingSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.view.CardInputWidget: java.lang.String getCvcPlaceHolder()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void lambda$new$0(java.lang.Exception)
com.reactnativestripesdk.CardFieldView: java.util.Map getCardDetails()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.BV.LinearGradient.LinearGradientView: void setAngle(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.stripe.android.GooglePayJsonFactory$TransactionInfo$TotalPriceStatus: com.stripe.android.GooglePayJsonFactory$TransactionInfo$TotalPriceStatus[] values()
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: float getYogaSize(float,float)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.stripe.android.view.CardFormView: java.util.Set getInvalidFields()
androidx.compose.ui.graphics.vector.VNode: VNode()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
com.stripe.android.financialconnections.model.AccountHolder$Type: com.stripe.android.financialconnections.model.AccountHolder$Type[] values()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: FinancialConnectionsSession$StatusDetails$Cancelled$Reason(java.lang.String,int,java.lang.String)
com.rnmaps.maps.MapView: double[][] getMapBoundaries()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$SetupFutureUse: com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$SetupFutureUse[] values()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void checkCppVersion()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.rnmaps.maps.MapWMSTileManager: void setOpacity(android.view.View,float)
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] values()
com.stripe.android.view.CardNumberEditText: void setBrandChangeCallback$payments_core_release(kotlin.jvm.functions.Function1)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,java.lang.String)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.PostalCodeEditText getPostalCodeEditText$payments_core_release()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.stripe.android.ui.core.elements.DropdownSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus valueOf(java.lang.String)
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.rnmaps.maps.MapManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.fabric.FabricUIManager$2: void executeItems(java.util.Queue)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.dropShadow.DropShadowModule: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.sidesheet.SideSheetCallback: SideSheetCallback()
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(android.view.View,java.lang.Double)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
com.reactnativestripesdk.GooglePayButtonManager: void type(com.reactnativestripesdk.GooglePayButtonView,int)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MaskManager: void setFillOpacity(android.view.View,float)
com.stripe.android.view.FpxBank: com.stripe.android.view.FpxBank[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.model.BankAccount$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.ui.core.elements.Capitalization$Companion: kotlinx.serialization.KSerializer serializer()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(android.view.View,java.lang.Double)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath(android.graphics.Canvas,android.graphics.Paint)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: ReactScrollViewAccessibilityDelegate()
androidx.compose.ui.autofill.AutofillApi26Helper: void setAutofillType(android.view.ViewStructure,int)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.horcrux.svg.SvgViewManager: void setNextFocusUp(android.view.View,int)
com.stripe.android.ui.core.elements.ContactInformationSpec: ContactInformationSpec()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapCircleManager: MapCircleManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.FinancialConnectionsSheetRedirectActivity: FinancialConnectionsSheetRedirectActivity()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
androidx.compose.ui.autofill.AutofillApi23Helper: void setDimens(android.view.ViewStructure,int,int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFillOpacity(android.view.View,float)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: java.lang.String toString()
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult: ChallengeRequestResult()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeOpacity(android.view.View,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
androidx.compose.ui.platform.AbstractComposeView: boolean getShowLayoutBounds()
com.rnmaps.maps.MapWMSTileManager: void setOpacity(com.rnmaps.maps.MapWMSTile,float)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(android.view.View,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.security.crypto.MasterKey$Builder$Api23Impl$Api30Impl: void setUserAuthenticationParameters(android.security.keystore.KeyGenParameterSpec$Builder,int,int)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.crypto.tink.shaded.protobuf.CodedInputStream: CodedInputStream()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFillRule(android.view.View,int)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeWidth(android.view.View,java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.rnmaps.maps.MapManager: void setGoogleMapId(com.rnmaps.maps.MapView,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.rnmaps.maps.MapManager: com.rnmaps.maps.MapView createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.rnmaps.maps.MapHeatmap: com.google.android.gms.maps.model.TileOverlayOptions getHeatmapOptions()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.ui.core.elements.AffirmTextSpec: AffirmTextSpec()
com.rnmaps.maps.MapHeatmapManager: void setGradient(com.rnmaps.maps.MapHeatmap,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.stripe.android.view.CardInputWidget: java.util.Set getRequiredFields$payments_core_release()
com.rnmaps.maps.MapMarkerManager: com.rnmaps.maps.MapMarkerManager$AirMapMarkerSharedIcon getSharedIcon(java.lang.String)
com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent: com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.reactnativestripesdk.CardFormViewManager: CardFormViewManager()
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
com.stripe.android.link.ui.paymentmethod.SupportedPaymentMethod: com.stripe.android.link.ui.paymentmethod.SupportedPaymentMethod valueOf(java.lang.String)
com.facebook.hermes.intl.LocaleIdentifier: LocaleIdentifier()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: int hashCode()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getPointAtLength(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
com.stripe.android.StripeApiBeta: com.stripe.android.StripeApiBeta[] values()
androidx.compose.ui.viewinterop.AndroidViewHolder: kotlin.jvm.functions.Function0 getUpdate()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.VirtualView: void restoreCanvas(android.graphics.Canvas,int)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
androidx.compose.ui.text.android.BoringLayoutFactoryDefault: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic)
com.reactnativestripesdk.AuBECSDebitFormView: void setCompanyName(java.lang.String)
com.stripe.android.financialconnections.model.InstitutionResponse$Companion: InstitutionResponse$Companion()
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createViewUnsafe(java.lang.String,int,java.lang.Object,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.horcrux.svg.SvgViewManager: void setNativeBackgroundAndroid(com.horcrux.svg.SvgView,com.facebook.react.bridge.ReadableMap)
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.SvgViewManager: void setBorderColor(android.view.View,java.lang.Integer)
androidx.compose.ui.text.font.TypefaceHelperMethodsApi28: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.horcrux.rnsvg.NativeSvgViewModuleSpec: NativeSvgViewModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.airbnb.mvrx.Async component3()
com.google.android.material.progressindicator.LinearProgressIndicator: void setTrackCornerRadius(int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.stripe.android.model.SetupIntent$Error$Type: com.stripe.android.model.SetupIntent$Error$Type[] values()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(android.view.View,java.lang.Double)
androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View getTypedView()
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.stripe.android.paymentsheet.forms.MandateRequirement: com.stripe.android.paymentsheet.forms.MandateRequirement valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
androidx.compose.ui.node.LayoutNode$LayoutState: androidx.compose.ui.node.LayoutNode$LayoutState valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadEnd()
com.stripe.android.stripe3ds2.views.ThreeDS2WebView: ThreeDS2WebView(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.facebook.react.views.view.ReactViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.google.crypto.tink.proto.AesCtrKeyFormat: AesCtrKeyFormat()
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setColor(android.view.View,java.lang.Integer)
com.rnmaps.maps.MapPolylineManager: void setlineCap(com.rnmaps.maps.MapPolyline,java.lang.String)
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.google.android.material.chip.Chip: void setElevation(float)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setDisplay(android.view.View,java.lang.String)
com.horcrux.svg.SvgPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.rnmaps.maps.MapCircle: java.lang.Object getFeature()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,java.lang.Double)
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,java.lang.String)
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion: ConsentViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.motion.widget.MotionConstrainedPoint: MotionConstrainedPoint()
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread()
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.swmansion.reanimated.R$layout: R$layout()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void removeView(android.view.View,android.view.ViewGroup)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: java.lang.String getSelectedAccountId()
com.stripe.android.paymentsheet.ui.PaymentOptionsPrimaryButtonContainerFragment: PaymentOptionsPrimaryButtonContainerFragment()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setVectorEffect(android.view.View,int)
androidx.constraintlayout.core.widgets.VirtualLayout: VirtualLayout()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.google.accompanist.web.LoadingState: LoadingState()
com.swmansion.reanimated.AndroidUIScheduler: AndroidUIScheduler(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.reactnativestripesdk.CustomerSheetFragment: CustomerSheetFragment()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.rnmaps.maps.MapPolyline: java.lang.Object getFeature()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void maybeInit()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.reactnativecommunity.picker.ReactPickerManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.stripe.android.ui.core.elements.KeyboardType$Companion: KeyboardType$Companion()
com.BV.LinearGradient.LinearGradientView: void setLocations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
kotlinx.serialization.descriptors.PrimitiveKind: PrimitiveKind()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
com.stripe.android.view.AddPaymentMethodCardView: void setCommunicatingProgress(boolean)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$FinishedSpec: kotlinx.serialization.KSerializer serializer()
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.stripe.android.core.model.Country$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.rnmaps.maps.MapModule: void enableLatestRenderer(com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: int getCustomCoalesceKey()
com.horcrux.svg.VirtualViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.horcrux.svg.VirtualViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
com.stripe.android.stripe3ds2.views.InformationZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getWhyText$3ds2sdk_release()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.stripe.android.financialconnections.model.OwnershipRefresh$Companion: OwnershipRefresh$Companion()
androidx.compose.animation.core.SnapSpec: SnapSpec()
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
com.facebook.react.bridge.ReactBridge: void staticInit()
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.VirtualViewManager$RenderableShadowNode: VirtualViewManager$RenderableShadowNode()
com.facebook.jni.HybridData: boolean isValid()
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.StripeEditText$ErrorMessageListener getExpirationDateErrorListener$payments_core_release()
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.fabric.mounting.MountingManager: void initializeViewManager(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,java.lang.String)
androidx.compose.foundation.layout.LayoutOrientation: androidx.compose.foundation.layout.LayoutOrientation[] values()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState copy$default(com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState,java.lang.String,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect,com.airbnb.mvrx.Async,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.rnmaps.maps.MapCircleManager: void setFillColor(com.rnmaps.maps.MapCircle,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.navigation.AnimBuilder: AnimBuilder()
com.stripe.android.ui.core.elements.AuBecsDebitMandateTextSpec$Companion: AuBecsDebitMandateTextSpec$Companion()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
com.horcrux.svg.VirtualViewManager: void setMarkerMid(com.horcrux.svg.VirtualView,java.lang.String)
com.rnmaps.maps.MapGradientPolylineManager: void setZIndex(com.rnmaps.maps.MapGradientPolyline,float)
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap getPayload()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeOpacity(android.view.View,float)
com.stripe.android.financialconnections.features.consent.ConsentState: com.airbnb.mvrx.Async component4()
com.stripe.android.financialconnections.model.DataAccessNoticeBody$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
androidx.emoji2.text.EmojiExclusions$EmojiExclusions_Api34: java.util.Set getExclusions()
com.proyecto26.inappbrowser.RNInAppBrowserModule: void mayLaunchUrl(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapGradientPolyline: void setWidth(float)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.google.android.gms.dynamite.zzn: zzn()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion: com.stripe.android.financialconnections.features.accountpicker.AccountPickerState initialState(com.airbnb.mvrx.ViewModelContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.reactnativestripesdk.AuBECSDebitFormViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.rnmaps.maps.MapLocalTile: void setZIndex(float)
com.stripe.android.customersheet.CustomerSheet$Configuration$Builder: CustomerSheet$Configuration$Builder()
androidx.compose.ui.window.PopupProperties: PopupProperties()
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.reactnativestripesdk.utils.GooglePayErrorType: com.reactnativestripesdk.utils.GooglePayErrorType[] values()
com.stripe.android.view.StripeEditText: java.lang.String getAccessibilityText()
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.search.SearchView: androidx.appcompat.widget.Toolbar getToolbar()
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFillRule(android.view.View,int)
kotlinx.serialization.json.internal.WriteMode: kotlinx.serialization.json.internal.WriteMode[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: boolean isValidForm()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: boolean component2()
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: java.lang.String getName()
com.stripe.android.ui.core.elements.PhoneSpec$Companion: PhoneSpec$Companion()
com.facebook.react.bridge.Arguments: Arguments()
com.horcrux.svg.RenderableViewManager$MarkerManager: RenderableViewManager$MarkerManager()
com.facebook.soloader.SoSource: SoSource()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setName(android.view.View,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.reactnativecommunity.webview.RNCWebView: boolean getMessagingEnabled()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.compose.ui.platform.AbstractComposeView: void setPreviousAttachedWindowToken(android.os.IBinder)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.stripe.android.view.CardMultilineWidget: void setCardNumber(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontSize(android.view.View,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityLinks$AccessibleLink: ReactAccessibilityDelegate$AccessibilityLinks$AccessibleLink()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.horcrux.svg.SvgPackage: java.util.List createJSModules()
com.google.android.gms.common.api.internal.zzb: zzb()
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.horcrux.svg.SvgViewManager: void setFocusable(android.view.View,boolean)
androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(com.swmansion.rnscreens.SearchBarView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel: ManualEntrySuccessViewModel(com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState,com.stripe.android.financialconnections.domain.CompleteFinancialConnectionsSession,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator,com.stripe.android.core.Logger)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: SurfaceMountingManager$2(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
androidx.compose.animation.core.MutatorMutex: MutatorMutex()
com.rnmaps.maps.MapOverlayManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.imagepipeline.systrace.FrescoSystrace: FrescoSystrace()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
com.rnmaps.maps.MapPolygon: void setHoles(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int)
com.stripe.android.view.CardMultilineWidget: void setShouldShowErrorIcon$payments_core_release(boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitNumber()
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.reactnativecommunity.webview.RNCWebView: void setSendContentSizeChangeEvents(boolean)
androidx.compose.ui.platform.AndroidComposeView: void setLastMatrixRecalculationAnimationTime$ui_release(long)
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
com.stripe.android.view.StripeEditText: void setTextSilent$payments_core_release(java.lang.CharSequence)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void setUpCallbacks()
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.rnmaps.maps.MapMarkerManager$AirMapMarkerSharedIcon: MapMarkerManager$AirMapMarkerSharedIcon()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
com.stripe.android.uicore.elements.PhoneNumberState: com.stripe.android.uicore.elements.PhoneNumberState valueOf(java.lang.String)
com.horcrux.svg.VirtualView: void setMarkerMid(java.lang.String)
com.stripe.android.ui.core.elements.ConfirmStatusSpecAssociation$Companion: ConfirmStatusSpecAssociation$Companion()
com.horcrux.svg.SvgView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String component4()
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
kotlinx.coroutines.JobNode: JobNode()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getBBox(java.lang.Double,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isList(android.view.autofill.AutofillValue)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
com.stripe.android.view.ExpiryDateEditText: com.stripe.android.model.ExpirationDate$Validated getValidatedDate()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: float[] measure(int)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
androidx.compose.ui.platform.AndroidComposeViewVerificationHelperMethodsN: void setPointerIcon(android.view.View,androidx.compose.ui.input.pointer.PointerIcon)
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(android.view.View,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.facebook.react.fabric.EmptyReactNativeConfig: EmptyReactNativeConfig()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontWeight(android.view.View,java.lang.String)
com.google.android.gms.wallet.button.PayButton: PayButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.CppViewMutationsWrapper: boolean isValid()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: NetworkingLinkVerificationState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.crypto.tink.proto.KmsAeadKeyFormat: KmsAeadKeyFormat()
com.facebook.react.bridge.CatalystInstance: void destroy()
androidx.compose.ui.graphics.drawscope.DrawStyle: DrawStyle()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
com.facebook.react.modules.network.NetworkingModule: void invalidate()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
com.reactnativepagerview.PagerViewViewManager: void addView(com.reactnativepagerview.NestedScrollableHost,android.view.View,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
androidx.work.ListenableWorker$Result$Success: ListenableWorker$Result$Success()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(android.view.View,java.lang.String)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.stripe.android.core.exception.APIConnectionException: APIConnectionException()
com.facebook.react.fabric.StateWrapperImpl: void destroyState()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
androidx.compose.ui.window.PopupLayout: void getParams$ui_release$annotations()
androidx.constraintlayout.widget.ConstraintSet$Layout: ConstraintSet$Layout()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.swmansion.reanimated.Utils: int[] processIntArray(com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.Intl: Intl()
androidx.compose.ui.graphics.ShaderBrush: ShaderBrush()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: void onAnimationFrame(long)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
androidx.compose.ui.platform.ViewLayer: androidx.compose.ui.graphics.Path getManualClipPath()
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setNextFocusRight(android.view.View,int)
com.BV.LinearGradient.LinearGradientView: void setStartPoint(com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapPolyline: void setLineDashPattern(com.facebook.react.bridge.ReadableArray)
com.google.android.gms.location.LocationCallback: LocationCallback()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMask(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.TextUpdate: TextUpdate()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeUnique(java.lang.String,com.facebook.react.bridge.WritableMap,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
com.reactnativecommunity.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeLinejoin(android.view.View,int)
com.stripe.android.payments.paymentlauncher.PaymentLauncherConfirmationActivity: PaymentLauncherConfirmationActivity()
com.horcrux.svg.SvgViewManager: void setBorderBottomLeftRadius(android.view.View,double)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: InstitutionPickerState(java.lang.String,boolean,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration$FieldConfiguration: com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration$FieldConfiguration valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
androidx.compose.ui.text.font.SystemFontFamily: SystemFontFamily()
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.reactnativestripesdk.GooglePayButtonManager: void onAfterUpdateTransaction(com.reactnativestripesdk.GooglePayButtonView)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: void run(android.view.View)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.stripe.android.paymentsheet.addresselement.AddressLauncher$AdditionalFieldsConfiguration: AddressLauncher$AdditionalFieldsConfiguration()
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat$Builder: AesCtrHmacAeadKeyFormat$Builder()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion: com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(android.view.View,java.lang.Double)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.swmansion.reanimated.ReanimatedModule: void onCatalystInstanceDestroy()
com.stripe.android.view.AddPaymentMethodCardView: com.stripe.android.model.PaymentMethodCreateParams getCreateParams()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet: ViewOscillator$PathRotateSet()
androidx.collection.SparseArrayCompat: SparseArrayCompat()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
androidx.compose.ui.platform.AccessibilityIterators$AbstractTextSegmentIterator: AccessibilityIterators$AbstractTextSegmentIterator()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
androidx.compose.foundation.MutatorMutex: MutatorMutex()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.compose.ui.viewinterop.ViewFactoryHolder: void setResetBlock(kotlin.jvm.functions.Function1)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane[] values()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.work.ListenableWorker$Result$Failure: ListenableWorker$Result$Failure()
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(android.view.View,java.lang.String)
com.horcrux.svg.VirtualView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.activity.ComponentActivity: ComponentActivity()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.R: R()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeLinecap(android.view.View,int)
com.rnmaps.maps.MapMarkerManager: void receiveCommand(com.rnmaps.maps.MapMarker,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.model.SourceTypeModel$Card$ThreeDSecureStatus: com.stripe.android.model.SourceTypeModel$Card$ThreeDSecureStatus valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.reactnativestripesdk.StripeSdkModule: void retrieveSetupIntent(java.lang.String,com.facebook.react.bridge.Promise)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.reactnativestripesdk.CardFormViewManager: void setPlaceHolders(com.reactnativestripesdk.CardFormView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.stripe.android.paymentsheet.model.PaymentSelection$Saved$WalletType: com.stripe.android.paymentsheet.model.PaymentSelection$Saved$WalletType[] values()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.imagepipeline.memory.BitmapCounterProvider: BitmapCounterProvider()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion: NetworkingLinkSignupViewModel$Companion()
com.stripe.android.view.CardNumberTextInputLayout: CardNumberTextInputLayout(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.stripe.android.model.MicrodepositType: com.stripe.android.model.MicrodepositType[] values()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setMIsHidden(boolean)
com.stripe.android.ui.core.elements.SelectorIcon$Companion: SelectorIcon$Companion()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
com.rnmaps.maps.MapHeatmapManager: com.rnmaps.maps.MapHeatmap createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.crypto.tink.proto.KeyTemplate$Builder: KeyTemplate$Builder()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: NetworkingSaveToLinkVerificationState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.nimbusds.jose.jwk.KeyOperation: com.nimbusds.jose.jwk.KeyOperation[] values()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.stripe.android.paymentsheet.model.PaymentSelection: PaymentSelection()
com.horcrux.svg.SvgViewManager: void setNextFocusDown(com.horcrux.svg.SvgView,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
kotlinx.serialization.json.JsonPrimitive: JsonPrimitive()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.material.search.SearchBar: void setTitle(java.lang.CharSequence)
com.horcrux.svg.RNSVGRenderableManager: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: float getMinSize(int)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setGooglePlacesApiKey(com.reactnativestripesdk.addresssheet.AddressSheetView,java.lang.String)
com.stripe.android.view.CardBrandView: void setTintColorInt$payments_core_release(int)
com.google.android.material.datepicker.DayViewDecorator: DayViewDecorator()
androidx.compose.ui.text.android.StaticLayoutFactory28: void setUseLineSpacingFromFallbacks(android.text.StaticLayout$Builder,boolean)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.stripe.android.view.CardInputWidget: java.lang.String getPeekCardText()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
com.facebook.imagepipeline.image.CloseableImage: CloseableImage()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc: LockFreeLinkedListNode$AbstractAtomicDesc()
com.stripe.android.financialconnections.features.success.SuccessState: com.airbnb.mvrx.Async getCompleteSession()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.stripe.android.stripe3ds2.transaction.ChallengeResult: ChallengeResult()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async component4()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.reactnativecommunity.webview.RNCWebViewManager: void setAndroidLayerType(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(android.view.View,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffEnd()
com.stripe.android.view.CardMultilineWidget: void setCardNumberErrorListener$payments_core_release(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
com.reactnativecommunity.picker.ReactPickerManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(android.view.View,boolean)
com.stripe.android.view.BecsDebitBsbEditText: java.lang.String getBsb$payments_core_release()
com.google.android.gms.maps.internal.zzcb: zzcb()
androidx.appcompat.widget.SwitchCompat$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
com.stripe.android.paymentsheet.DefaultPaymentSheetLauncher$1: DefaultPaymentSheetLauncher$1()
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.reactnativecommunity.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(android.view.View,java.lang.Double)
com.reactnativestripesdk.StripeSdkModule: StripeSdkModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager$4: FabricUIManager$4(com.facebook.react.fabric.FabricUIManager)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setName(android.view.View,java.lang.String)
com.facebook.react.fabric.GuardedFrameCallback: void doFrame(long)
com.stripe.android.financialconnections.model.CreditBalance$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.rnmaps.maps.MapWMSTileManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.browser.customtabs.CustomTabsIntent$Api24Impl: java.lang.String getDefaultLocale()
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.stripe.android.payments.bankaccount.ui.CollectBankAccountActivity: CollectBankAccountActivity()
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int getModuleId()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(android.view.View,float)
androidx.compose.ui.autofill.AutofillApi23Helper: int addChildCount(android.view.ViewStructure,int)
com.google.android.gms.wallet.CardInfo: CardInfo()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.stripe.android.view.CardFormView: com.stripe.android.model.CardBrand getBrand()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(android.view.View,java.lang.Double)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.stripe.android.view.CardInputWidget: void setCardValidCallback(com.stripe.android.view.CardValidCallback)
androidx.compose.ui.text.android.BoringLayoutFactory33: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
com.google.android.material.progressindicator.CircularProgressIndicator: void setIndicatorDirection(int)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.stripe.android.stripe3ds2.transactions.UiType: com.stripe.android.stripe3ds2.transactions.UiType[] values()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.CardFormViewManager: void setAutofocus$default(com.reactnativestripesdk.CardFormViewManager,com.reactnativestripesdk.CardFormView,boolean,int,java.lang.Object)
com.facebook.react.fabric.FabricUIManager$1: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: BalanceRefresh$BalanceRefreshStatus(java.lang.String,int,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String toString()
androidx.compose.ui.platform.RenderNodeVerificationHelper28: void setAmbientShadowColor(android.view.RenderNode,int)
com.rnmaps.maps.MapOverlay: void setBounds(com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapManager: void setMinZoomLevel(com.rnmaps.maps.MapView,float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: void onAnimationFrame(double)
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.search.SearchBar: void setText(int)
com.facebook.react.fabric.Binding: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig)
com.swmansion.reanimated.R$id: R$id()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category$Companion: kotlinx.serialization.KSerializer serializer()
androidx.compose.ui.platform.AbstractComposeView: void setShowLayoutBounds(boolean)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.stripe.android.ui.core.elements.CountrySpec$Companion: CountrySpec$Companion()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: NetworkingLinkSignupState(com.airbnb.mvrx.Async,java.lang.String,java.lang.String,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: java.lang.String getValue()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.proyecto26.inappbrowser.RNInAppBrowserModule: void warmup(com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.stripe.android.uicore.address.CountryAddressSchema$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableView: void resetProperties()
androidx.lifecycle.viewmodel.CreationExtras: CreationExtras()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer component5()
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.stripe.android.stripe3ds2.init.ui.StripeToolbarCustomization: StripeToolbarCustomization()
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
androidx.compose.ui.graphics.AndroidPath: AndroidPath()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.airbnb.mvrx.Async component2()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void maybeRestartAnimationWithNewLayout(android.view.View)
com.rnmaps.maps.MapCalloutManager: void updateExtraData(android.view.View,java.lang.Object)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getInfoTextView$3ds2sdk_release()
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.rnmaps.maps.MapPolylineManager: com.rnmaps.maps.MapPolyline createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFontWeight(android.view.View,java.lang.Double)
com.horcrux.svg.SvgView: void setBbHeight(java.lang.Double)
com.rnmaps.maps.MapManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.rnmaps.maps.ViewChangesTracker: ViewChangesTracker()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
kotlin.jvm.internal.Ref$IntRef: Ref$IntRef()
com.stripe.android.view.CardInputWidgetPlacement: CardInputWidgetPlacement()
androidx.arch.core.internal.SafeIterableMap$SupportRemove: SafeIterableMap$SupportRemove()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.reactnativestripesdk.GooglePayButtonManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Companion: FinancialConnectionsSessionManifest$Companion()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
com.stripe.android.ui.core.elements.CardBillingSpec: CardBillingSpec()
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void endMarkers()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
androidx.compose.ui.platform.ViewLayer: void setCameraDistancePx(float)
com.facebook.react.fabric.SurfaceHandlerBinding: void setMountable(boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: FinancialConnectionsAccount$Subcategory(java.lang.String,int,java.lang.String)
com.google.crypto.tink.shaded.protobuf.DoubleArrayList: DoubleArrayList()
com.stripe.android.ui.core.elements.EmptyFormSpec: EmptyFormSpec()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setDisplay(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.horcrux.svg.SvgViewManager: void setBorderTopLeftRadius(android.view.View,double)
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,java.lang.Double)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
com.stripe.android.stripe3ds2.views.ChallengeZoneView: android.widget.RadioGroup getWhitelistRadioGroup$3ds2sdk_release()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setInlineSize(com.horcrux.svg.TextView,java.lang.String)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.stripe.android.financialconnections.model.DataAccessNotice getDataAccess()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.search.SearchView: android.widget.TextView getSearchPrefix()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.rnmaps.maps.MapGradientPolyline: void setCoordinates(java.util.List)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findScreen(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean isLayoutAnimationEnabled()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.rnmaps.maps.MapManager: void removeViewAt(android.view.ViewGroup,int)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: double getTotalLength(java.lang.Double)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.stripe.android.model.VerificationMethodParam: com.stripe.android.model.VerificationMethodParam[] values()
androidx.compose.ui.node.LayoutNode$UsageByParent: androidx.compose.ui.node.LayoutNode$UsageByParent valueOf(java.lang.String)
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
com.stripe.android.model.PaymentMethod$Card$Networks: PaymentMethod$Card$Networks()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.rnmaps.maps.MapMarkerManager: void setCalloutAnchor(com.rnmaps.maps.MapMarker,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.window.PopupLayout: android.view.View getViewRoot()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
com.stripe.android.financialconnections.model.Balance$Type$Companion: Balance$Type$Companion()
androidx.compose.ui.autofill.AutofillType: androidx.compose.ui.autofill.AutofillType[] values()
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,java.lang.String)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVectorEffect(android.view.View,int)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.airbnb.mvrx.Async component1()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapPolygonManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dropView(android.view.View)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.crypto.tink.proto.AesSivKey: AesSivKey()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidClipboardManager getClipboardManager()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(android.view.View,java.lang.Double)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.horcrux.svg.SvgView: void defineTemplate(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.stripe.android.view.ExpiryDateEditText: boolean getIncludeSeparatorGaps$payments_core_release()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: AttachPaymentState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$FinishedSpec: PostConfirmHandlingPiStatusSpecs$FinishedSpec()
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.swmansion.reanimated.NativeProxy$1: NativeProxy$1(java.lang.ref.WeakReference)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.stripe.android.stripe3ds2.init.Warning$Severity: com.stripe.android.stripe3ds2.init.Warning$Severity valueOf(java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status[] values()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: ManualEntryState()
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.swmansion.gesturehandler.core.HoverGestureHandler: HoverGestureHandler()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.facebook.react.fabric.FabricJSIModuleProvider: FabricJSIModuleProvider(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.CppComponentRegistry)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: java.lang.String toString()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.fabric.CppViewMutationsWrapper castToCppViewMutationWrapper(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.stripe.android.view.CardNumberTextInputLayout: void setLoading$payments_core_release(boolean)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: java.lang.String getSessionSecret()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,java.lang.Double)
com.horcrux.svg.VirtualViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.stripe.android.stripe3ds2.views.InformationZoneView: void setToggleColor$3ds2sdk_release(int)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: FabricUIManager$DispatchUIFrameCallback(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext,com.facebook.react.fabric.FabricUIManager$1)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
androidx.compose.ui.platform.Api29Impl: int getRecommendedTimeoutMillis(android.view.accessibility.AccessibilityManager,int,int)
com.stripe.android.stripe3ds2.transaction.TransactionStatus: com.stripe.android.stripe3ds2.transaction.TransactionStatus[] values()
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
okhttp3.Headers$Companion: Headers$Companion()
com.google.android.gms.tasks.Task: Task()
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.facebook.react.bridge.NativeModule: void invalidate()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeLinecap(android.view.View,int)
com.google.android.material.search.SearchBar: void setElevation(float)
com.stripe.android.model.ConsumerSessionLookup$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.reactnativestripesdk.StripeSdkModule: java.lang.String getName()
com.stripe.android.model.CardFunding: com.stripe.android.model.CardFunding[] values()
com.rnmaps.maps.MapMarker: void setTitle(java.lang.String)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
androidx.compose.ui.viewinterop.AndroidViewHolder: kotlin.jvm.functions.Function1 getOnRequestDisallowInterceptTouchEvent$ui_release()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.swmansion.reanimated.NodesManager: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: KeysetInfo$KeyInfo()
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule access$000(com.swmansion.reanimated.NodesManager)
com.reactnativestripesdk.utils.ConfirmSetupIntentErrorType: com.reactnativestripesdk.utils.ConfirmSetupIntentErrorType valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion: com.stripe.android.financialconnections.features.reset.ResetState initialState(com.airbnb.mvrx.ViewModelContext)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,java.lang.Double)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin valueOf(java.lang.String)
com.facebook.react.fabric.LongStreamingStats: double getMedian()
com.stripe.android.uicore.elements.IdentifierSpec$Companion: IdentifierSpec$Companion()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer getAccountConfirmError()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.reactnativecommunity.picker.ReactPickerManager: void focus(com.reactnativecommunity.picker.ReactPicker)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.crypto.tink.shaded.protobuf.MapFieldLite: MapFieldLite()
com.stripe.android.financialconnections.model.PartnerAccountsList$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus[] $values()
com.stripe.android.view.CardMultilineWidget: boolean getShouldShowErrorIcon$payments_core_release()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeLinecap(android.view.View,int)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status[] values()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.facebook.hermes.intl.IntlTextUtils: IntlTextUtils()
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setReanimatedNativeHierarchyManager(com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getHolderToLayoutNode()
com.stripe.android.uicore.text.EmbeddableImage: EmbeddableImage()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void publicDropView(android.view.View)
com.rnmaps.maps.MapCircle: void setStrokeWidth(float)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
androidx.work.ListenableWorker$Result$Retry: ListenableWorker$Result$Retry()
com.reactnativestripesdk.FinancialConnectionsSheetFragment$Mode: com.reactnativestripesdk.FinancialConnectionsSheetFragment$Mode[] values()
com.facebook.react.fabric.SurfaceHandler: void setProps(com.facebook.react.bridge.NativeMap)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.reactnativestripesdk.addresssheet.AddressSheetView: void setVisible(boolean)
com.horcrux.svg.FontData: FontData()
com.stripe.android.view.CvcEditText: com.stripe.android.cards.Cvc$Validated getCvc$payments_core_release()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraints(int,int,int,int,boolean,boolean,float)
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.stripe.android.view.AddPaymentMethodFpxView: com.stripe.android.view.FpxViewModel getViewModel()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void finishSharedAnimation(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.rnmaps.maps.MapUrlTileManager: void setOpacity(com.rnmaps.maps.MapUrlTile,float)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.reactcommunity.rndatetimepicker.NativeModuleTimePickerSpec: NativeModuleTimePickerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.compose.ui.window.SecureFlagPolicy: androidx.compose.ui.window.SecureFlagPolicy valueOf(java.lang.String)
com.rnmaps.maps.MapPolylineManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void requestRender(com.swmansion.reanimated.nativeProxy.AnimationFrameCallback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setClipRule(android.view.View,int)
com.stripe.android.uicore.elements.PhoneNumberState$Companion: PhoneNumberState$Companion()
com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility: com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.google.android.material.search.SearchView: void setUpBackgroundViewElevationOverlay(float)
com.stripe.android.view.CardNumberEditText: void getAccountRangeService$annotations()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs getInitialArgs()
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(android.view.View,java.lang.Double)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float)
com.stripe.android.EphemeralOperation: EphemeralOperation()
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.CardNumberEditText getCardNumberEditText()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontWeight(android.view.View,java.lang.Double)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.rnmaps.maps.MapManager: java.lang.String getName()
com.rnmaps.maps.MapMarker: android.view.View getCallout()
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.google.android.material.search.SearchView: java.lang.CharSequence getSearchPrefixText()
com.stripe.android.model.BankAccount$Type: com.stripe.android.model.BankAccount$Type[] values()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeDasharray(android.view.View,java.lang.String)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
androidx.compose.ui.graphics.Api26Bitmap: android.graphics.ColorSpace toFrameworkColorSpace$ui_graphics_release(androidx.compose.ui.graphics.colorspace.ColorSpace)
com.google.crypto.tink.proto.AesEaxParams: AesEaxParams()
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.bridge.WritableArray: void pushNull()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.stripe.android.uicore.elements.AdministrativeAreaConfig$Country$Canada: AdministrativeAreaConfig$Country$Canada()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
kotlinx.serialization.json.JsonNull: JsonNull()
com.rnmaps.maps.MapPolygon: void setTappable(boolean)
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void printSurfaceState()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsProtectedMedia(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: java.lang.Runnable getRunnable()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.reactnativestripesdk.addresssheet.AddressSheetEvent$EventType: com.reactnativestripesdk.addresssheet.AddressSheetEvent$EventType[] values()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.GooglePayJsonFactory$TransactionInfo$CheckoutOption: com.stripe.android.GooglePayJsonFactory$TransactionInfo$CheckoutOption valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.google.crypto.tink.proto.AesGcmKeyFormat: AesGcmKeyFormat()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: java.lang.String toString()
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.stripe.android.paymentsheet.ui.PrimaryButton: PrimaryButton(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async component3()
com.horcrux.svg.SvgViewManager: void setBorderBottomStartRadius(android.view.View,float)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.stripe.android.view.CountryTextInputLayout: android.widget.AutoCompleteTextView getCountryAutocomplete()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(android.view.View,java.lang.String)
com.reactnativecommunity.picker.ReactPickerManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapWMSTileManager: MapWMSTileManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.random.Random: Random()
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.rnmaps.maps.MapPolygonManager: void setTappable(com.rnmaps.maps.MapPolygon,boolean)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.input.PlatformTextInputPluginRegistryImpl getPlatformTextInputPluginRegistry()
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
com.stripe.android.financialconnections.model.ReturningNetworkingUserAccountPicker$Companion: ReturningNetworkingUserAccountPicker$Companion()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeMiterlimit(android.view.View,float)
com.rnmaps.maps.MapMarker: void setImage(java.lang.String)
com.horcrux.svg.R$styleable: R$styleable()
com.facebook.react.fabric.SurfaceHandlerBinding: void setProps(com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void token(com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDashoffset(android.view.View,float)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setGestureState(int,int)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: NetworkingSaveToLinkVerificationState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState copy$default(com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState,com.airbnb.mvrx.Async,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.compose.ui.platform.AccessibilityNodeInfoVerificationHelperMethods: void setAvailableExtraData(android.view.accessibility.AccessibilityNodeInfo,java.util.List)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructSetChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setVerticalAlign(com.horcrux.svg.TextView,java.lang.String)
com.reactnativestripesdk.CardFieldViewManager: void setDisabled(com.reactnativestripesdk.CardFieldView,boolean)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.google.crypto.tink.proto.Keyset$Key$Builder: Keyset$Key$Builder()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.swmansion.reanimated.NodesManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.crypto.tink.proto.Keyset$Builder: Keyset$Builder()
com.rnmaps.maps.MapView: void setInitialCamera(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher: NestedScrollDispatcher()
com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView: java.util.List getSelectedOptions()
com.swmansion.reanimated.R$attr: R$attr()
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes[] values()
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.rnmaps.maps.MapMarker: java.lang.Object getFeature()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.reactnativepagerview.NestedScrollableHost: void setDidSetInitialIndex(boolean)
androidx.core.text.HtmlCompat$Api24Impl: java.lang.String toHtml(android.text.Spanned,int)
com.horcrux.svg.RNSVGRenderableManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(android.view.View,java.lang.Double)
com.google.android.material.search.SearchView: void setAutoShowKeyboard(boolean)
com.stripe.android.stripe3ds2.security.Algorithm: com.stripe.android.stripe3ds2.security.Algorithm[] values()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.reactnativecommunity.picker.TextViewImpl: TextViewImpl(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.bumptech.glide.util.ExceptionPassthroughInputStream: ExceptionPassthroughInputStream()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext getContext()
com.google.android.material.chip.Chip: void setMaxLines(int)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect component3()
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType valueOf(java.lang.String)
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setVerticalAlign(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion: com.stripe.android.financialconnections.features.success.SuccessState initialState(com.airbnb.mvrx.ViewModelContext)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
androidx.navigation.NavigatorState: NavigatorState()
com.rnmaps.maps.MapPolygon: void setZIndex(float)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.RenderableViewManager$MaskManager: void setResponsible(android.view.View,boolean)
com.stripe.android.ui.core.elements.autocomplete.model.Address: Address()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
androidx.viewpager2.widget.ViewPager2: int getPageSize()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.compose.foundation.text.selection.TextFieldSelectionManager: TextFieldSelectionManager()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: java.lang.String toString()
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.stripe.android.PaymentSession$lifecycleObserver$1: void onDestroy()
com.google.crypto.tink.proto.AesSivKeyFormat$Builder: AesSivKeyFormat$Builder()
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer valueOf(java.lang.String)
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.fabric.FabricUIManager createUIManager(com.facebook.react.fabric.events.EventBeatManager)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.horcrux.svg.VirtualView: int saveAndSetupCanvas(android.graphics.Canvas,android.graphics.Matrix)
androidx.compose.ui.platform.AbstractComposeView: boolean getHasComposition()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didDispatchMountItems()
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.reactnativecommunity.picker.ReactDialogPickerManager: void setPrompt(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void flushOperations()
com.swmansion.reanimated.ReaCompatibility: ReaCompatibility(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String obtainProp(int,java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setVectorEffect(android.view.View,int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: IntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.swmansion.reanimated.layoutReanimation.SharedElement: SharedElement(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.reactnativestripesdk.CardFieldView: void setCardAddress(com.stripe.android.model.Address)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setDefaultValues(com.reactnativestripesdk.addresssheet.AddressSheetView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeLinejoin(android.view.View,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(android.view.View,java.lang.Double)
com.google.android.gms.wallet.PaymentCardRecognitionIntentResponse: PaymentCardRecognitionIntentResponse()
com.reactnativepagerview.PagerViewViewManager: com.reactnativepagerview.NestedScrollableHost createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.model.Entry$Image$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.swmansion.gesturehandler.core.RotationGestureHandler: RotationGestureHandler()
com.stripe.android.ui.core.elements.OTPSpec: OTPSpec()
androidx.compose.ui.viewinterop.AndroidViewHolder: kotlin.jvm.functions.Function1 getOnModifierChanged$ui_release()
com.horcrux.svg.SvgViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
androidx.compose.ui.platform.ViewLayer: float getCameraDistancePx()
com.stripe.android.ui.core.elements.CountrySpec: CountrySpec()
androidx.compose.material.ripple.RippleHostView: void setRippleState(boolean)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$1(android.view.View,int,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setDisplay(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
com.stripe.android.view.PaymentMethodsRecyclerView: void setTappedPaymentMethod$payments_core_release(com.stripe.android.model.PaymentMethod)
com.rnmaps.maps.MapOverlayManager: void setImage(com.rnmaps.maps.MapOverlay,java.lang.String)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.horcrux.svg.SvgView: SvgView(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,java.lang.Double)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setClipPath(android.view.View,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.stripe.android.financialconnections.model.NetworkedAccountsList$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onViewsRemoval(int[])
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.rnmaps.maps.MapView: void setUserLocationUpdateInterval(int)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async component1()
androidx.compose.ui.autofill.AutofillCallback: void unregister(androidx.compose.ui.autofill.AndroidAutofill)
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
androidx.compose.ui.platform.ViewLayerVerificationHelper31: void setRenderEffect(android.view.View,androidx.compose.ui.graphics.RenderEffect)
com.stripe.android.financialconnections.model.CashBalance$Companion: CashBalance$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.stripe.android.PaymentSessionConfig: PaymentSessionConfig()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.VirtualViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedTemplate(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void lambda$manageChildren$0(java.util.ArrayList,android.view.View,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.google.android.gms.internal.maps.zzc: zzc()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String toString()
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getScreenCTM(java.lang.Double)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setResponsible(android.view.View,boolean)
com.rnmaps.maps.MapView: void setUserLocationPriority(int)
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: boolean equals(java.lang.Object)
com.stripe.android.view.CardInputWidget: void getRequiredFields$payments_core_release$annotations()
com.swmansion.reanimated.R$bool: R$bool()
com.stripe.android.view.CardNumberEditText: void setLoadingCallback$payments_core_release(kotlin.jvm.functions.Function1)
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField: com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField[] values()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.stripe.android.view.StripeEditText: android.content.res.ColorStateList getDefaultColorStateList$payments_core_release()
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.constraintlayout.core.widgets.WidgetContainer: WidgetContainer()
com.stripe.android.financialconnections.model.Image$Companion: Image$Companion()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.airbnb.mvrx.Async getPayload()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.horcrux.svg.SvgViewManager: void setHitSlop(com.horcrux.svg.SvgView,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.AndroidUIScheduler$2: void runGuarded()
com.stripe.android.customersheet.analytics.CustomerSheetEvent: CustomerSheetEvent()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.uimanager.StateWrapper castToState(java.lang.Object)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.fabric.SurfaceHandler: void start()
com.stripe.android.view.CardMultilineWidget: void setPostalCodeTextWatcher(android.text.TextWatcher)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setVectorEffect(android.view.View,int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
kotlin.jvm.internal.Intrinsics$Kotlin: Intrinsics$Kotlin()
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
androidx.navigation.compose.DialogNavigator: DialogNavigator()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
androidx.compose.ui.window.PopupLayout: void setTestTag(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
com.horcrux.svg.VirtualViewManager: boolean isZero(double)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder: ReactPackageTurboModuleManagerDelegate$Builder()
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: void keyboardEventDataUpdater(int,int)
com.stripe.android.view.SelectShippingMethodWidget: void setShippingMethods(java.util.List)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFillOpacity(android.view.View,float)
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status[] $values()
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: DevToolsReactPerfLogger$FabricCommitPoint(int,com.facebook.react.fabric.DevToolsReactPerfLogger$1)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
com.stripe.android.model.parsers.PaymentMethodsListJsonParser: PaymentMethodsListJsonParser()
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight[] values()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: boolean equals(java.lang.Object)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.CardFieldView: void setAutofocus(boolean)
com.stripe.android.view.CardInputWidget: void setLayoutWidthCalculator$payments_core_release(com.stripe.android.view.CardInputWidget$LayoutWidthCalculator)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.reactnativestripesdk.CardFieldViewManager: void setCardStyle(com.reactnativestripesdk.CardFieldView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.horcrux.svg.SvgViewManager: void setBbHeight(android.view.View,java.lang.Double)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(android.view.View,java.lang.String)
com.google.crypto.tink.proto.EncryptedKeyset$Builder: EncryptedKeyset$Builder()
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
org.greenrobot.eventbus.ThreadMode: org.greenrobot.eventbus.ThreadMode[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.AndroidUIScheduler getAndroidUIScheduler()
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean getViewExists(int)
com.google.crypto.tink.proto.AesCtrKey: AesCtrKey()
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type[] $values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.CardMultilineWidget$CardBrandIconSupplier getCardBrandIconSupplier$payments_core_release()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.horcrux.svg.SvgViewManager: void setVbWidth(android.view.View,float)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: int hashCode()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.stripe.android.ui.core.elements.CardDetailsSectionSpec: CardDetailsSectionSpec()
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: java.lang.String toString()
androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate: ViewTimeCycle$PathRotate()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
com.horcrux.svg.VirtualViewManager: VirtualViewManager(com.horcrux.svg.VirtualViewManager$SVGClass)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgPackage: java.util.List getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.WindowInfo getWindowInfo()
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
androidx.compose.foundation.gestures.UpdatableAnimationState: UpdatableAnimationState()
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(com.horcrux.svg.MarkerView,float)
com.google.crypto.tink.proto.AesCtrHmacAeadKey$Builder: AesCtrHmacAeadKey$Builder()
com.google.android.material.search.SearchBar: int getStrokeColor()
androidx.compose.ui.text.input.ImmHelper21: void showSoftInput(android.view.inputmethod.InputMethodManager)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.horcrux.svg.RenderableView: android.graphics.Region getRegion(android.graphics.Path,android.graphics.RectF)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
com.airbnb.mvrx.MavericksViewModel: MavericksViewModel(com.airbnb.mvrx.MavericksState,com.airbnb.mvrx.MavericksViewModelConfigFactory,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.stripe.android.view.BecsDebitBsbEditText: com.stripe.android.view.BecsDebitBanks$Bank getBank()
androidx.compose.ui.text.input.ImmHelper30: void hideSoftInput(android.view.inputmethod.InputMethodManager)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
com.rnmaps.maps.MapView: void setLoadingIndicatorColor(java.lang.Integer)
androidx.compose.ui.platform.AndroidComposeView: void setViewTreeOwners(androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativepagerview.PagerViewViewManager: void receiveCommand(com.reactnativepagerview.NestedScrollableHost,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.stripe.android.paymentsheet.ui.BasePrimaryButtonContainerFragment: BasePrimaryButtonContainerFragment()
com.reactnativestripesdk.StripeSdkModule: void handleNextAction(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricJSIModuleProvider: FabricJSIModuleProvider(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig,com.facebook.react.uimanager.ViewManagerRegistry)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.stripe.android.view.CardInputWidget: com.stripe.android.model.CardParams getCardParams()
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category[] values()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.rnmaps.maps.MapMarker: void setCoordinate(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.stripe.android.view.PaymentFlowPage: com.stripe.android.view.PaymentFlowPage[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: java.lang.String getValue()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String getValidPhone()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.core.text.util.LinkifyCompat$LinkSpec: LinkifyCompat$LinkSpec()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
androidx.compose.ui.graphics.TileModeVerificationHelper: int getComposeTileModeDecal-3opZhB0()
com.stripe.android.view.CardInputWidget: com.stripe.android.view.CardInputWidgetPlacement getPlacement$payments_core_release()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
com.horcrux.svg.R$string: R$string()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontSize(android.view.View,java.lang.Double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.swmansion.gesturehandler.react.RNGestureHandlerTouchEvent: RNGestureHandlerTouchEvent()
androidx.compose.ui.platform.ComposeView: ComposeView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.reactcommunity.rndatetimepicker.TimePickerModule)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(com.horcrux.svg.MarkerView,float)
com.stripe.android.ui.core.elements.DropdownItemSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isStopped()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.stripe.android.uicore.elements.AddressType$Normal: AddressType$Normal()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status valueOf(java.lang.String)
com.stripe.android.ui.core.elements.SelectorIcon: SelectorIcon()
com.swmansion.reanimated.R$drawable: R$drawable()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.google.crypto.tink.proto.AesGcmKey: AesGcmKey()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.rnmaps.maps.MapManager: void updateExtraData(com.rnmaps.maps.MapView,java.lang.Object)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.WebAuthFlowState component1()
com.stripe.android.financialconnections.model.Entry$Text$Companion: Entry$Text$Companion()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.horcrux.svg.VirtualView: float getCanvasHeight()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
com.google.android.gms.wallet.zza: zza()
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.stripe.android.ui.core.cardscan.CardScanActivity: CardScanActivity()
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.google.android.gms.common.internal.zzj: zzj()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void endLayoutAnimation(int,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
com.stripe.android.stripe3ds2.views.InformationZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getExpandText$3ds2sdk_release()
com.reactnativepagerview.NestedScrollableHost: androidx.viewpager2.widget.ViewPager2 getParentViewPager()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.rnmaps.maps.MapCalloutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.constraintlayout.motion.widget.MotionHelper: float getProgress()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.rnmaps.maps.MapLocalTile: java.lang.Object getFeature()
androidx.compose.ui.viewinterop.AndroidViewHolder: androidx.savedstate.SavedStateRegistryOwner getSavedStateRegistryOwner()
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: SaveToLinkWithStripeSucceededRepository$State()
com.stripe.android.financialconnections.model.DataAccessNotice$Companion: DataAccessNotice$Companion()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.bumptech.glide.util.MultiClassKey: MultiClassKey()
androidx.compose.foundation.interaction.FocusInteraction$Focus: FocusInteraction$Focus()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.rnmaps.maps.MapLocalTileManager: void setZIndex(android.view.View,float)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,java.lang.Double)
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeOpacity(android.view.View,float)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.crypto.tink.proto.HmacParams: HmacParams()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,java.lang.String)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.stripe.android.view.CardBrandView: void setShouldShowCvc(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDy(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.stripe.android.PaymentAuthConfig$Stripe3ds2TextBoxCustomization$Builder: PaymentAuthConfig$Stripe3ds2TextBoxCustomization$Builder()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.stripe.android.stripe3ds2.init.DeviceParam: com.stripe.android.stripe3ds2.init.DeviceParam[] values()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.compose.ui.graphics.vector.ImageVector$Builder$GroupParams: ImageVector$Builder$GroupParams()
com.rnmaps.maps.MapPolyline: void setLineCap(com.google.android.gms.maps.model.Cap)
androidx.recyclerview.widget.ItemTouchHelper$Callback: ItemTouchHelper$Callback()
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.rnmaps.maps.MapManager: void setMapPadding(com.rnmaps.maps.MapView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: SendAccessibilityEvent(int,int,int)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.rnmaps.maps.MapManager: void setInitialRegion(com.rnmaps.maps.MapView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.stripe.android.ui.core.elements.SharedDataSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.compose.ui.text.font.AsyncTypefaceCache: AsyncTypefaceCache()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.model.Source$CodeVerification$Status: java.lang.String toString()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory[] values()
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionDuration(int)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
androidx.collection.ArrayMap: ArrayMap()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(java.lang.String,int,com.facebook.react.bridge.WritableMap)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.picker.ReactPickerManager: void blur(com.reactnativecommunity.picker.ReactPicker)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: FabricUIManager$MountItemDispatchListener(com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.FabricUIManager$1)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.stripe.android.uicore.elements.AdministrativeAreaConfig$Country$US: AdministrativeAreaConfig$Country$US()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.fabric.mounting.MountingManager: boolean getViewExists(int)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void clearAnimationConfigRecursive(android.view.View)
com.google.crypto.tink.proto.HmacKeyFormat$Builder: HmacKeyFormat$Builder()
androidx.navigation.NavArgumentBuilder: NavArgumentBuilder()
androidx.compose.ui.autofill.AutofillTree: AutofillTree()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.stripe.android.view.CardMultilineWidget: com.google.android.material.textfield.TextInputLayout getCvcInputLayout()
com.swmansion.reanimated.ReanimatedModule: void installTurboModule(java.lang.String)
com.stripe.android.financialconnections.model.MixedOAuthParams$Companion: MixedOAuthParams$Companion()
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.swmansion.gesturehandler.core.TapGestureHandler: TapGestureHandler()
com.reactnativestripesdk.StripeSdkModule: void customerAdapterSetSelectedPaymentOptionCallback(com.facebook.react.bridge.Promise)
com.rnmaps.maps.MapMarker: void setOpacity(float)
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme valueOf(java.lang.String)
com.stripe.android.view.CardMultilineWidget: void setCvcIcon(java.lang.Integer)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int getSurfaceId()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,java.lang.Double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.google.android.gms.wallet.CardRequirements: CardRequirements()
com.swmansion.reanimated.sensor.ReanimatedSensor: ReanimatedSensor(java.lang.ref.WeakReference,com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: GroupedLinkedMap$LinkedEntry()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionEnd()
com.reactnativecommunity.picker.ReactPickerManager: void onAfterUpdateTransaction(com.reactnativecommunity.picker.ReactPicker)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.EmptyReactNativeConfig: long getInt64(java.lang.String)
com.stripe.android.view.CardInputWidget: void setCardInputListener(com.stripe.android.view.CardInputListener)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: void access$100(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint,com.facebook.react.bridge.ReactMarkerConstants,long)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.proyecto26.inappbrowser.RNInAppBrowserModule: RNInAppBrowserModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.FabricComponents: FabricComponents()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: LinkStepUpVerificationState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.reactnativecommunity.picker.ReactDialogPickerManager: void setNumberOfLines(android.view.View,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.VirtualViewManager: void decomposeMatrix()
com.stripe.android.view.CardMultilineWidget: java.util.Set getInvalidFields$payments_core_release()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.bumptech.glide.gifdecoder.GifFrame: GifFrame()
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
com.stripe.android.view.ShippingInfoWidget: com.stripe.android.databinding.StripeAddressWidgetBinding getViewBinding()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(android.view.View,java.lang.String)
com.stripe.android.link.LinkActivityResult$Canceled$Reason: com.stripe.android.link.LinkActivityResult$Canceled$Reason valueOf(java.lang.String)
com.azendoo.reactnativesnackbar.SnackbarModule: int getOptionValue(com.facebook.react.bridge.ReadableMap,java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.rnmaps.maps.MapHeatmap: void setOpacity(double)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.compose.ui.autofill.AutofillApi23Helper: android.view.ViewStructure newChild(android.view.ViewStructure,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.google.crypto.tink.shaded.protobuf.LazyFieldLite: LazyFieldLite()
com.stripe.android.ui.core.elements.AuBankAccountNumberSpec: AuBankAccountNumberSpec()
com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingState: com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.react.fabric.SurfaceHandler: boolean isRunning()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
androidx.compose.ui.platform.ViewLayer: long getLayerId()
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.stripe.android.ui.core.elements.AddressSpec$Companion: AddressSpec$Companion()
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.stripe.android.view.BecsDebitWidget: void setValidParamsCallback(com.stripe.android.view.BecsDebitWidget$ValidParamsCallback)
com.rnmaps.maps.MapManager: void setMoveOnMarkerPress(com.rnmaps.maps.MapView,boolean)
com.horcrux.svg.RenderableView: int hitTest(float[])
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.stripe.android.link.LinkActivityResult$Canceled: LinkActivityResult$Canceled()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.PartnerAccount$Companion: PartnerAccount$Companion()
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.stripe.android.model.Source$CodeVerification$Status: com.stripe.android.model.Source$CodeVerification$Status[] values()
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper()
androidx.compose.ui.layout.SubcomposeLayoutState: SubcomposeLayoutState()
com.rnmaps.maps.MapOverlay: com.google.android.gms.maps.model.GroundOverlayOptions getGroundOverlayOptions()
com.google.android.material.search.SearchView: android.text.Editable getText()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
androidx.compose.ui.window.PopupLayout: boolean getCanCalculatePosition()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.rnmaps.maps.MapPolygonManager: void setGeodesic(com.rnmaps.maps.MapPolygon,boolean)
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
com.reactnativestripesdk.CardFieldView: void setPlaceHolders(com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.reactnativestripesdk.CardFieldViewManager: void setPlaceHolders(com.reactnativestripesdk.CardFieldView,com.facebook.react.bridge.ReadableMap)
com.rnmaps.maps.MapModule: void closeQuietly(java.io.Closeable)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.stripe.android.view.CountryTextInputLayout: void setCountryChangeCallback$payments_core_release(kotlin.jvm.functions.Function1)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.rnmaps.maps.MapMarkerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
kotlinx.serialization.descriptors.SerialKind: SerialKind()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.reactnativestripesdk.CardFormViewManager: void setAutofocus(com.reactnativestripesdk.CardFormView,boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setVectorEffect(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVectorEffect(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setDisplay(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Companion: FinancialConnectionsSession$Companion()
com.stripe.android.view.CardNumberEditText: com.stripe.android.cards.CardNumber$Validated getValidatedCardNumber$payments_core_release()
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
androidx.compose.material.ModalBottomSheetValue: androidx.compose.material.ModalBottomSheetValue[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.compose.ui.text.android.BoringLayoutFactoryDefault: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: void mergeProperties(com.horcrux.svg.RenderableView)
androidx.compose.ui.text.android.StaticLayoutFactory33: void setLineBreakConfig(android.text.StaticLayout$Builder,int,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean access$000(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.stripe.android.ui.core.elements.Capitalization: com.stripe.android.ui.core.elements.Capitalization valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.jni.DestructorThread$Terminus: void destruct()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFillRule(android.view.View,int)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
com.azendoo.reactnativesnackbar.SnackbarModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.compose.ui.graphics.BlendModeColorFilterHelper: android.graphics.BlendModeColorFilter BlendModeColorFilter-xETnrds(long,int)
androidx.compose.ui.platform.RenderNodeVerificationHelper28: int getAmbientShadowColor(android.view.RenderNode)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeMiterlimit(android.view.View,float)
com.reactnativepagerview.PagerViewViewManager: void setLayoutDirection(com.reactnativepagerview.NestedScrollableHost,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeOpacity(android.view.View,float)
com.horcrux.svg.VirtualView: double relativeOnHeight(com.horcrux.svg.SVGLength)
com.google.crypto.tink.proto.AesEaxKeyFormat: AesEaxKeyFormat()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFontWeight(android.view.View,java.lang.Double)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
androidx.compose.ui.input.pointer.PointerInteropFilter$DispatchToViewState: androidx.compose.ui.input.pointer.PointerInteropFilter$DispatchToViewState[] values()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.emoji2.text.EmojiCompat$InitCallback: EmojiCompat$InitCallback()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
androidx.compose.ui.graphics.Api26Bitmap: android.graphics.Bitmap createBitmap-x__-hDU$ui_graphics_release(int,int,int,boolean,androidx.compose.ui.graphics.colorspace.ColorSpace)
com.stripe.android.model.SourceTypeModel$Card$ThreeDSecureStatus: com.stripe.android.model.SourceTypeModel$Card$ThreeDSecureStatus[] values()
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
androidx.constraintlayout.motion.widget.MotionLayout: long getNanoTime()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setTextLength(com.horcrux.svg.TextView,java.lang.Double)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.swmansion.reanimated.NativeMethodsHelper: float[] measure(android.view.View)
com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField: com.stripe.android.ui.core.elements.PlaceholderSpec$PlaceholderField valueOf(java.lang.String)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.airbnb.mvrx.Async getDisableNetworkingAsync()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: FinancialConnectionsAccount$Permissions(java.lang.String,int,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.react.LazyReactPackage: LazyReactPackage()
com.stripe.android.ui.core.elements.AddressSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.fabric.Binding: void unregister()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontSize(android.view.View,java.lang.Double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
com.facebook.react.devsupport.LogBoxModule: void invalidate()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
com.nimbusds.jose.Requirement: com.nimbusds.jose.Requirement[] values()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor: void executeItems(java.util.Queue)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: AccountPickerState(com.airbnb.mvrx.Async,boolean,com.airbnb.mvrx.Async,java.util.Set)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMask(android.view.View,java.lang.String)
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Status valueOf(java.lang.String)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setEnabled(boolean)
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.stripe.android.model.StripeIntent$NextActionType: com.stripe.android.model.StripeIntent$NextActionType[] values()
com.rnmaps.maps.MapUrlTileManager: void setZIndex(android.view.View,float)
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInStroke(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.reactnativestripesdk.CardFormView: void setCardParams(com.stripe.android.model.PaymentMethodCreateParams$Card)
com.stripe.android.stripe3ds2.transaction.InitChallengeResult: InitChallengeResult()
com.facebook.react.fabric.mounting.MountingManager: long measureMapBuffer(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.react.uimanager.ReanimatedUIManager: void replaceExistingNonRootView(int,int)
kotlinx.serialization.internal.AbstractPolymorphicSerializer: AbstractPolymorphicSerializer()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.swmansion.reanimated.BuildConfig: BuildConfig()
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
com.google.android.material.search.SearchView: void setText(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,java.lang.Double)
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
com.stripe.android.view.CardInputWidget: void setCvcNumberTextWatcher(android.text.TextWatcher)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.google.android.material.search.SearchBar: float getCompatElevation()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.ViewGroup)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setToolbarElementsVisibility(int)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.stripe.android.PaymentAuthConfig$Stripe3ds2Config$Builder: PaymentAuthConfig$Stripe3ds2Config$Builder()
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.stripe.android.view.CountryTextInputLayout: kotlin.jvm.functions.Function1 getCountryChangeCallback$payments_core_release()
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$Result: GooglePayPaymentMethodLauncher$Result()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.reactnativestripesdk.StripeContainerManager: java.lang.String getName()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: java.lang.String component1()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(android.view.View,java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
com.facebook.react.fabric.FabricUIManager: boolean access$400(com.facebook.react.fabric.FabricUIManager)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: ReanimatedMessageQueueThreadBase()
com.facebook.react.fabric.mounting.MountItemDispatcher: void printMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,java.lang.String)
androidx.compose.ui.platform.ViewLayer: long getOwnerViewId()
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.stripe.android.googlepaylauncher.GooglePayLauncher$Result: GooglePayLauncher$Result()
com.facebook.react.bridge.Dynamic: void recycle()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(android.view.View,java.lang.String)
com.rnmaps.maps.MapManager: void setLoadingEnabled(com.rnmaps.maps.MapView,boolean)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.swmansion.reanimated.NativeProxy$1: boolean isLayoutAnimationEnabled()
com.facebook.react.fabric.events.EventEmitterWrapper: boolean isValid()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.layout.LayoutCoordinates getParentLayoutCoordinates()
com.stripe.android.googlepaylauncher.GooglePayEnvironment: com.stripe.android.googlepaylauncher.GooglePayEnvironment valueOf(java.lang.String)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(com.horcrux.svg.MarkerView,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.stripe.android.view.ExpiryDateEditText: java.lang.String getAccessibilityText()
com.rnmaps.maps.MapView: void setLoadingBackgroundColor(java.lang.Integer)
com.reactcommunity.rndatetimepicker.TimePickerModule: void lambda$open$0(androidx.fragment.app.FragmentManager,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
com.BV.LinearGradient.LinearGradientView: void setAngleCenter(com.facebook.react.bridge.ReadableArray)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.stripe.android.core.utils.PluginDetector$PluginType: com.stripe.android.core.utils.PluginDetector$PluginType[] values()
com.stripe.android.financialconnections.model.InstitutionResponse$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.rnmaps.maps.MapManager: void setRotateEnabled(com.rnmaps.maps.MapView,boolean)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.swmansion.reanimated.NodesManager: void startUpdatingOnAnimationFrame()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,java.lang.Double)
com.facebook.react.fabric.FabricJSIModuleProvider: com.facebook.react.bridge.UIManager get()
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.stripe.android.core.utils.DurationProvider$Key: com.stripe.android.core.utils.DurationProvider$Key valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.stripe.android.paymentsheet.model.PaymentSelection$CustomerRequestedSave: com.stripe.android.paymentsheet.model.PaymentSelection$CustomerRequestedSave valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebView: void setMessagingEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState copy(com.airbnb.mvrx.Async,java.util.List,com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
com.stripe.android.financialconnections.model.ManualEntryMode: com.stripe.android.financialconnections.model.ManualEntryMode[] values()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
com.stripe.android.financialconnections.domain.NativeAuthFlowCoordinator: NativeAuthFlowCoordinator()
com.reactnativecommunity.webview.RNCWebViewManager: void setForceDarkOn(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.google.android.material.progressindicator.LinearProgressIndicator: void setIndeterminateAnimationType(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.stripe.android.financialconnections.model.LegalDetailsBody$Companion: LegalDetailsBody$Companion()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType valueOf(java.lang.String)
kotlinx.serialization.json.JsonElement$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory: RNGestureHandlerModule$HandlerFactory()
com.google.android.gms.internal.wallet.zzg: zzg()
androidx.compose.ui.graphics.AndroidCanvas: AndroidCanvas()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
androidx.viewpager.widget.ViewPager: int getCurrentItem()
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$WindowInsetsCallback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
com.google.crypto.tink.shaded.protobuf.FieldSet: FieldSet()
com.stripe.android.financialconnections.model.AccountHolder$Type$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.stripe.android.paymentsheet.PaymentOptionsItem: PaymentOptionsItem()
androidx.security.crypto.MasterKey$Builder$Api23Impl$Api28Impl: void setIsStrongBoxBacked(android.security.keystore.KeyGenParameterSpec$Builder)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeLinejoin(android.view.View,int)
com.stripe.android.view.FpxBank: com.stripe.android.view.FpxBank valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$RedirectNextActionSpec: ConfirmResponseStatusSpecs$RedirectNextActionSpec()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedAnimationForView(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,java.lang.Double)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.stripe.android.view.BecsDebitMandateAcceptanceTextView: void setCompanyName(java.lang.String)
com.reactnativestripesdk.CardFormViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.CustomSearchView: void setText(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setVectorEffect(android.view.View,int)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.NodesManager: java.lang.String obtainProp(int,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.reactnativestripesdk.CardFormView: void setPostalCodeEnabled(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitEnd()
androidx.compose.ui.viewinterop.AndroidViewHolder: androidx.lifecycle.LifecycleOwner getLifecycleOwner()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.nimbusds.jose.shaded.ow2asm.Label: Label()
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
androidx.compose.material.ripple.RippleHostView: void setRippleState$lambda$2(androidx.compose.material.ripple.RippleHostView)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane getInitialPane()
com.stripe.android.stripe3ds2.init.DeviceParam: com.stripe.android.stripe3ds2.init.DeviceParam valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.stripe.android.view.CardInputWidget: void getShouldShowErrorIcon$payments_core_release$annotations()
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
androidx.constraintlayout.widget.R$id: R$id()
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
com.horcrux.svg.R$style: R$style()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.stripe.android.model.CustomerPaymentSource: CustomerPaymentSource()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.stripe3ds2.views.ThreeDS2HeaderTextView: ThreeDS2HeaderTextView(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion: ManualEntryViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState copy(com.airbnb.mvrx.Async)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.platform.MotionDurationScaleImpl: MotionDurationScaleImpl()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.RequestBody: RequestBody()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.rnmaps.maps.MapWMSTileManager: void setUrlTemplate(com.rnmaps.maps.MapWMSTile,java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setRotate(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFontSize(android.view.View,java.lang.Double)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactcommunity.rndatetimepicker.RNDatePickerDisplay: com.reactcommunity.rndatetimepicker.RNDatePickerDisplay[] values()
com.BV.LinearGradient.LinearGradientManager: void setUseAngle(com.BV.LinearGradient.LinearGradientView,boolean)
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$CaptureMethod: com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$CaptureMethod[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.views.view.ReactViewManagerWrapper)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
com.stripe.android.financialconnections.model.ManualEntry$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountHolderType: com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountHolderType valueOf(java.lang.String)
com.stripe.android.core.browser.BrowserCapabilities: com.stripe.android.core.browser.BrowserCapabilities[] values()
com.reactnativestripesdk.GooglePayButtonManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Companion: FinancialConnectionsAccount$Companion()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.horcrux.svg.SvgViewManager: void setHasTVPreferredFocus(android.view.View,boolean)
com.stripe.android.ui.core.elements.BsbSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.perflogger.NativeModulePerfLogger: NativeModulePerfLogger()
com.horcrux.svg.SvgView: int hitTest(float,float)
com.rnmaps.maps.MapFeature: java.lang.Object getFeature()
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState copy$default(com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState,com.stripe.android.financialconnections.presentation.WebAuthFlowState,boolean,com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog,boolean,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane,int,java.lang.Object)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.stripe.android.financialconnections.FinancialConnectionsSheetState: boolean getActivityRecreated()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitDuration()
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButtonShape: PaymentSheet$PrimaryButtonShape()
com.horcrux.svg.SvgViewManager: void setBbWidth(android.view.View,java.lang.Double)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
androidx.compose.foundation.Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: com.reactnativecommunity.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.emoji2.text.MetadataRepo$Node: MetadataRepo$Node()
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setSheetTitle(com.reactnativestripesdk.addresssheet.AddressSheetView,java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int getSurfaceId()
com.stripe.android.model.StripeIntent$NextActionType: com.stripe.android.model.StripeIntent$NextActionType valueOf(java.lang.String)
com.stripe.android.financialconnections.model.MixedOAuthParams$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.VirtualViewManager: void setMarkerEnd(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.fabric.events.EventBeatManager)
com.facebook.react.fabric.FabricUIManager$5: FabricUIManager$5(com.facebook.react.fabric.FabricUIManager,int,int,int,boolean)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
androidx.constraintlayout.core.widgets.Barrier: Barrier()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.rnmaps.maps.MapManager: void addView(com.rnmaps.maps.MapView,android.view.View,int)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: FinancialConnectionsAccount$Category(java.lang.String,int,java.lang.String)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: com.stripe.android.financialconnections.model.OwnershipRefresh$Status[] values()
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
kotlin.collections.builders.SetBuilder: SetBuilder()
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
androidx.compose.foundation.layout.SizeMode: androidx.compose.foundation.layout.SizeMode[] values()
androidx.compose.ui.platform.CalculateMatrixToWindowApi29: void calculateMatrixToWindow-EL8BTi8(android.view.View,float[])
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setBorderRadius(com.horcrux.svg.SvgView,double)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.stripe.android.financialconnections.model.Balance$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.model.NetworkedAccountsList$Companion: NetworkedAccountsList$Companion()
com.horcrux.svg.SvgView: void setId(int)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.rnmaps.maps.MapMarkerManager: void setZIndex(android.view.View,float)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.horcrux.svg.VirtualView: void setDisplay(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(android.view.View,float)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(android.view.View,java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.reactnativecommunity.picker.ReactPickerManager: void onAfterUpdateTransaction(android.view.View)
com.stripe.android.view.CardMultilineWidget: void setCvcCode(java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.rnmaps.maps.MapView: void setCacheEnabled(boolean)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$-CC: float getMaxSize(int)
com.stripe.android.view.CardInputWidget: void setCvcCode(java.lang.String)
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion: FinancialConnectionsSheetViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.stripe.android.stripe3ds2.init.ui.StripeUiCustomization: StripeUiCustomization()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.horcrux.svg.SvgViewManager: void setNextFocusUp(com.horcrux.svg.SvgView,int)
com.horcrux.svg.R$xml: R$xml()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion: com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState initialState(com.airbnb.mvrx.ViewModelContext)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableMap)
com.stripe.android.view.CardInputWidget: java.lang.String getPostalCodeValue()
androidx.compose.ui.node.ModifierNodeElement: ModifierNodeElement()
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
androidx.work.impl.utils.futures.AbstractFuture: AbstractFuture()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.compose.ui.window.DialogProperties: DialogProperties()
com.stripe.android.financialconnections.model.ManualEntryMode: java.lang.String getValue()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.ReactNativeUtils: ReactNativeUtils()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.rnmaps.maps.MapMarkerManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: DeltaCounter()
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod(java.lang.String,int,java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.compose.ui.layout.IntrinsicMinMax: androidx.compose.ui.layout.IntrinsicMinMax[] values()
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface: void remove()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.stripe.android.paymentsheet.PaymentSheet$PrimaryButtonTypography: PaymentSheet$PrimaryButtonTypography()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.stripe.android.uicore.address.FieldType$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.CardFieldView: com.stripe.android.model.PaymentMethodCreateParams$Card getCardParams()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFillOpacity(android.view.View,float)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: android.widget.FrameLayout getChallengeEntryView$3ds2sdk_release()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.bumptech.glide.GlideBuilder$LogRequestOrigins: GlideBuilder$LogRequestOrigins()
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.azendoo.reactnativesnackbar.SnackbarModule: void show(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.EventLoop: EventLoop()
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
androidx.compose.ui.text.platform.extensions.LocaleListHelperMethods: java.lang.Object localeSpan(androidx.compose.ui.text.intl.LocaleList)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.swmansion.reanimated.R$string: R$string()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.viewpager2.widget.ViewPager2: void setOffscreenPageLimit(int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.reactnativestripesdk.FinancialConnectionsSheetFragment: FinancialConnectionsSheetFragment()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.horcrux.svg.SvgViewModule: java.lang.String getName()
com.horcrux.svg.SvgViewManager: void setBorderBottomEndRadius(android.view.View,float)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.SvgViewManager: void setBorderStyle(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.horcrux.svg.SvgViewManager: void setBorderTopStartRadius(android.view.View,float)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes$Companion: FinancialConnectionsAccount$SupportedPaymentMethodTypes$Companion()
com.stripe.android.stripe3ds2.security.Algorithm: com.stripe.android.stripe3ds2.security.Algorithm valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.stripe.android.ui.core.elements.EmailElement: EmailElement()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,java.lang.String)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation: void execute(com.swmansion.reanimated.NodesManager)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void access$300(com.facebook.react.fabric.mounting.SurfaceMountingManager)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
com.stripe.android.financialconnections.features.consent.ConsentClickableText: com.stripe.android.financialconnections.features.consent.ConsentClickableText[] values()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.stripe.android.stripe3ds2.security.DirectoryServer: com.stripe.android.stripe3ds2.security.DirectoryServer valueOf(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void removeSubviewsFromContainerWithID(int)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
androidx.compose.material.Shapes: Shapes()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async getPayload()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.stripe.android.view.ShippingInfoWidget: java.util.List getHiddenFields()
com.stripe.android.financialconnections.model.ManualEntryMode: ManualEntryMode(java.lang.String,int,java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void scheduleCompletionCallback(long)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.PaymentMethodCreateParams getPaymentMethodCreateParams()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.facebook.react.common.futures.SimpleSettableFuture: SimpleSettableFuture()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeWidth(android.view.View,java.lang.String)
com.stripe.android.view.MaskedCardView: com.stripe.android.databinding.StripeMaskedCardViewBinding getViewBinding$payments_core_release()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.swmansion.reanimated.R$style: R$style()
com.stripe.android.financialconnections.features.reset.ResetState: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode[] values()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.stripe.android.link.ui.ErrorMessage: ErrorMessage()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.swmansion.reanimated.NativeProxy: NativeProxy(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setOpacity(android.view.View,float)
com.facebook.jni.HybridData$Destructor: void destruct()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.reactnativestripesdk.AuBECSDebitFormView: void setFormStyle(com.facebook.react.bridge.ReadableMap)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String getReanimatedJavaVersion()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.crypto.tink.proto.AesCmacKey$Builder: AesCmacKey$Builder()
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(android.view.View,java.lang.Double)
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
com.stripe.android.view.StripeEditText: void setDefaultColorStateList$payments_core_release(android.content.res.ColorStateList)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.rnmaps.maps.MapMarkerManager: void removeSharedIconIfEmpty(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.airbnb.mvrx.Async getPayload()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(android.view.View,java.lang.Double)
com.google.android.material.search.SearchBar: void setStrokeColor(int)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] values()
com.stripe.android.model.Token$Type: com.stripe.android.model.Token$Type[] values()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDx(android.view.View,com.facebook.react.bridge.ReadableArray)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.reactnativestripesdk.GooglePayLauncherFragment$Mode: com.reactnativestripesdk.GooglePayLauncherFragment$Mode[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
kotlinx.coroutines.internal.CtorCache: CtorCache()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.facebook.jni.HybridClassBase: HybridClassBase()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: SurfaceMountingManager$1(com.facebook.react.fabric.mounting.SurfaceMountingManager,android.view.View)
com.horcrux.svg.SvgViewManager: void setBorderRadius(android.view.View,double)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
androidx.compose.runtime.snapshots.SnapshotApplyResult: SnapshotApplyResult()
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: KmsEnvelopeAeadKeyFormat()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void clearAllSharedConfigsForView(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(android.view.View,java.lang.Double)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(android.view.View,java.lang.String)
com.rnmaps.maps.MapModule: void pointForCoordinate(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.sensor.ReanimatedSensorType: int getType()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.reactnativestripesdk.CardFormView: void setDisabled(boolean)
com.rnmaps.maps.MapMarkerManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void removeCallbacks()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.rnmaps.maps.MapView: void setIndoorActiveLevelIndex(int)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void setModule(com.facebook.react.turbomodule.core.interfaces.TurboModule)
com.facebook.react.fabric.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean hasAnimationForTag(int,int)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.airbnb.mvrx.Async getPayload()
com.stripe.android.model.TokenizationMethod: com.stripe.android.model.TokenizationMethod valueOf(java.lang.String)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$FinishedSpec: ConfirmResponseStatusSpecs$FinishedSpec()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(android.view.View,java.lang.Double)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getValue(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$800(com.facebook.react.animated.NativeAnimatedModule)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(android.view.View,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setY(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.reactnativestripesdk.CardFormViewManager: void setCardStyle(com.reactnativestripesdk.CardFormView,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.stripe.android.financialconnections.model.ConsentPaneBody$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.reactnativestripesdk.CardFieldViewManager: com.reactnativestripesdk.CardFieldView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFillOpacity(android.view.View,float)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.stripe.android.view.CountryTextInputLayout: CountryTextInputLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationError$Error: com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationError$Error[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(android.view.View,java.lang.Double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.rnmaps.maps.MapPolylineManager: void setLineDashPattern(com.rnmaps.maps.MapPolyline,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: int lambda$sortViewsByTags$0(android.view.View,android.view.View)
androidx.compose.ui.viewinterop.AndroidViewHolder: androidx.compose.ui.unit.Density getDensity()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeViewAttachMountItems()
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion: SuccessViewModel$Companion()
com.horcrux.svg.RenderableViewManager$PatternManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeOpacity(android.view.View,float)
kotlin.collections.AbstractMutableList: AbstractMutableList()
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.constraintlayout.widget.Guideline: void setFilterRedundantCalls(boolean)
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
com.stripe.android.view.CardMultilineWidget: void setCardNumberErrorListener(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.stripe.android.ui.core.elements.KlarnaCountrySpec: KlarnaCountrySpec()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.stripe.android.financialconnections.model.Entry: Entry()
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
androidx.compose.foundation.lazy.AwaitFirstLayoutModifier: AwaitFirstLayoutModifier()
com.horcrux.svg.VirtualViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.stripe.android.paymentsheet.model.PaymentSelection$CustomerRequestedSave: com.stripe.android.paymentsheet.model.PaymentSelection$CustomerRequestedSave[] values()
com.horcrux.svg.SvgViewManager: void setMinY(android.view.View,float)
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.stripe.android.view.BecsDebitWidget: com.stripe.android.databinding.StripeBecsDebitWidgetBinding getViewBinding$payments_core_release()
com.stripe.android.core.networking.StripeRequest$Method: com.stripe.android.core.networking.StripeRequest$Method valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.facebook.react.views.view.ReactViewGroup: void setOverflowInset(int,int,int,int)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy getNativeProxy()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
androidx.compose.ui.platform.AndroidComposeViewVerificationHelperMethodsO: void focusable(android.view.View,int,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.stripe.android.stripe3ds2.transactions.ChallengeResponseData$Companion: ChallengeResponseData$Companion()
com.rnmaps.maps.MapMarkerManager: void setTitle(com.rnmaps.maps.MapMarker,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.dropShadow.DropShadowModule: void setShadowOpacity(com.dropShadow.DropShadowLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: NativeAsyncStorageModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState copy$default(com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState,java.lang.String,boolean,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
com.stripe.android.financialconnections.features.success.SuccessState: com.airbnb.mvrx.Async component2()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeMiterlimit(android.view.View,float)
com.facebook.react.fabric.FabricUIManager$3: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,java.lang.String)
com.BV.LinearGradient.LinearGradientManager: void setBorderRadii(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()
androidx.work.NetworkType: androidx.work.NetworkType[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.stripe.android.ui.core.elements.CardDetailsSectionSpec$Companion: kotlinx.serialization.KSerializer serializer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: int size()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(android.view.View,java.lang.Double)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void onCatalystInstanceDestroy()
com.google.android.material.search.SearchView: void setupWithSearchBar(com.google.android.material.search.SearchBar)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.facebook.react.fabric.mounting.MountItemDispatcher: MountItemDispatcher(com.facebook.react.fabric.mounting.MountingManager,com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener)
com.rnmaps.maps.MapLocalTile: void setUseAssets(boolean)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.rnmaps.maps.MapUrlTile: void setOfflineMode(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionEnd()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setInlineSize(android.view.View,java.lang.Double)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.rnmaps.maps.MapUrlTileManager: void setOpacity(android.view.View,float)
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.reactnativecommunity.picker.CheckedTextViewImpl: CheckedTextViewImpl(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.stripe.android.stripe3ds2.views.InformationZoneView: android.widget.LinearLayout getExpandContainer$3ds2sdk_release()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderTopEndRadius(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
androidx.compose.ui.autofill.AutofillApi26Helper: java.lang.CharSequence textValue(android.view.autofill.AutofillValue)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String getAccount()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.stripe.android.model.VerificationType: com.stripe.android.model.VerificationType valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(com.swmansion.rnscreens.Screen,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.SvgViewManager: void setNeedsOffscreenAlphaCompositing(android.view.View,boolean)
com.horcrux.svg.VirtualViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.google.crypto.tink.proto.AesCmacKeyFormat: AesCmacKeyFormat()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.rnmaps.maps.MapMarker: void setZIndex(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setClipRule(android.view.View,int)
com.stripe.android.view.CardInputWidget: boolean getUsZipCodeRequired()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
com.rnmaps.maps.MapManager: void removeViewAt(com.rnmaps.maps.MapView,int)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void checkDuplicateSharedTag(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.stripe.android.ui.core.elements.TranslationId: com.stripe.android.ui.core.elements.TranslationId[] values()
com.reactnativestripesdk.StripeSdkModule: void createTokenFromPii(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.Integer getRoutingError()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.stripe.android.financialconnections.model.CashBalance$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.link.serialization.PopupPayload$CustomerInfo$Companion: PopupPayload$CustomerInfo$Companion()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFillRule(android.view.View,int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.work.InputMerger: InputMerger()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 getReleaseBlock()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.rnmaps.maps.MapWMSTileManager: void setMinimumZ(com.rnmaps.maps.MapWMSTile,float)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeLinejoin(android.view.View,int)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.stripe.android.financialconnections.model.OwnershipRefresh$Companion: kotlinx.serialization.KSerializer serializer()
com.reactnativestripesdk.GooglePayRequestHelper$Companion: GooglePayRequestHelper$Companion()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void flushOperations()
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
com.reactnativepagerview.PagerViewViewManager: void removeView(com.reactnativepagerview.NestedScrollableHost,android.view.View)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setClipRule(android.view.View,int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.react.fabric.mounting.SurfaceMountingManager: android.view.View getView(int)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Subcategory$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.StripeEditText$ErrorMessageListener getCardNumberErrorListener$payments_core_release()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.rnmaps.maps.MapManager: void setScrollEnabled(com.rnmaps.maps.MapView,boolean)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.uimanager.NativeViewHierarchyManager: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.stripe.android.view.StripeEditText: boolean getShouldShowError()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.rnmaps.maps.MapUrlTile: com.google.android.gms.maps.model.TileOverlayOptions getTileOverlayOptions()
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: boolean shouldSchedule()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMask(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.reset.ResetViewModel$Companion: ResetViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
com.stripe.android.paymentsheet.ui.PrimaryButton: void setIndicatorColor(int)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.stripe.android.financialconnections.model.BalanceRefresh$Companion: BalanceRefresh$Companion()
com.stripe.android.financialconnections.model.Balance$Type: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
androidx.compose.ui.viewinterop.AndroidViewHolder: kotlin.jvm.functions.Function0 getReset()
com.google.android.material.progressindicator.LinearProgressIndicator: int getIndicatorDirection()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
androidx.compose.ui.node.LayoutNode: LayoutNode()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
androidx.compose.material.ScaffoldLayoutContent: androidx.compose.material.ScaffoldLayoutContent[] values()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentModeEndMargin()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.view.BillingAddressFields: com.stripe.android.view.BillingAddressFields valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void stop()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState copy(java.lang.String,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect,com.airbnb.mvrx.Async)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.reactnativepagerview.PagerViewViewManager: java.lang.String getName()
com.swmansion.reanimated.AndroidUIScheduler: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer()
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
androidx.compose.ui.input.pointer.util.VelocityTracker: VelocityTracker()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.horcrux.svg.RenderableView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.reactnativestripesdk.AuBECSDebitFormViewManager: AuBECSDebitFormViewManager()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
com.stripe.android.view.StripeEditText: android.view.View$OnFocusChangeListener getOnFocusChangeListener()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,java.lang.Double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.reactnativepagerview.PagerViewViewManager: void setScrollEnabled(com.reactnativepagerview.NestedScrollableHost,boolean)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.google.crypto.tink.proto.AesGcmKey$Builder: AesGcmKey$Builder()
com.stripe.android.model.PaymentMethod$BillingDetails: PaymentMethod$BillingDetails()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: boolean getSearchMode()
com.google.android.material.chip.ChipGroup: int getVisibleChipCount()
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.reactnativecommunity.picker.ReactPicker: void setPrimaryColor(java.lang.Integer)
com.rnmaps.maps.MapOverlayManager: void setOpacity(android.view.View,float)
androidx.navigation.NavDeepLink$ParamQuery: NavDeepLink$ParamQuery()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(android.view.View,java.lang.Double)
com.reactnativestripesdk.CardFieldView: void setCountryCode(java.lang.String)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.view.CountryTextInputLayout: void getCountryChangeCallback$payments_core_release$annotations()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.rnmaps.maps.MapCallout: boolean getTooltip()
com.reactnativepagerview.PagerViewViewManager: void setOrientation(com.reactnativepagerview.NestedScrollableHost,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule()
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateLayout(int,int,int,int,int,int,int)
com.rnmaps.maps.MapUrlTile: void setOpacity(float)
com.stripe.android.uicore.address.NameType: com.stripe.android.uicore.address.NameType[] values()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.stripe.android.stripe3ds2.transactions.ChallengeRequestData$CancelReason: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData$CancelReason valueOf(java.lang.String)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: FinancialConnectionsSheetNativeState(com.stripe.android.financialconnections.presentation.WebAuthFlowState,boolean,com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog,boolean,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect,com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane)
com.reactnativecommunity.webview.RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
com.rnmaps.maps.MapManager: void setHandlePanDrag(com.rnmaps.maps.MapView,boolean)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: TurboModuleManager$TurboModuleHolder()
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(android.view.View,long)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void checkDuplicateSharedTag(int,int)
com.reactnativecommunity.picker.ReactPickerManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.stripe.android.financialconnections.model.Bullet: Bullet()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.uicore.address.FieldSchema$Companion: FieldSchema$Companion()
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFontSize(android.view.View,java.lang.Double)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
androidx.lifecycle.LiveData: LiveData()
com.reactnativestripesdk.StripeSdkModule: void initialise(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.compose.ui.platform.DrawChildContainer: int getChildCount()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.horcrux.svg.SvgViewManager: void setRemoveClippedSubviews(com.horcrux.svg.SvgView,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFillRule(android.view.View,int)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.stripe.android.financialconnections.model.GetFinancialConnectionsAcccountsParams$Companion: GetFinancialConnectionsAcccountsParams$Companion()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getRunStartTime()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: PlatformBitmapFactory()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: RenderableViewManager$GroupViewManagerAbstract(com.horcrux.svg.VirtualViewManager$SVGClass)
com.horcrux.svg.SvgView: java.lang.String toDataURL(int,int)
com.swmansion.gesturehandler.core.GestureHandler: GestureHandler()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray access$000(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(android.view.View,java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
org.bouncycastle.pqc.crypto.xmss.LTreeAddress$Builder: LTreeAddress$Builder()
com.stripe.android.financialconnections.model.BankAccount$Companion: BankAccount$Companion()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.stripe.android.financialconnections.features.reset.ResetState: ResetState(com.airbnb.mvrx.Async)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product[] $values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.swmansion.reanimated.NativeProxy$1: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.reactnativepagerview.PagerViewViewManager: void setInitialPage(com.reactnativepagerview.NestedScrollableHost,int)
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel: FinancialConnectionsSheetViewModel(java.lang.String,com.stripe.android.financialconnections.domain.SynchronizeFinancialConnectionsSession,com.stripe.android.financialconnections.domain.FetchFinancialConnectionsSession,com.stripe.android.financialconnections.domain.FetchFinancialConnectionsSessionForToken,com.stripe.android.core.Logger,com.stripe.android.financialconnections.analytics.FinancialConnectionsEventReporter,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.IsBrowserAvailable,com.stripe.android.financialconnections.domain.NativeAuthFlowRouter,com.stripe.android.financialconnections.FinancialConnectionsSheetState)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityArgs component1()
kotlinx.serialization.internal.PrimitiveArrayBuilder: PrimitiveArrayBuilder()
com.stripe.android.model.BankAccount: BankAccount()
com.stripe.android.financialconnections.model.PartnerNotice$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.stripe.android.link.LinkActivityResult$Canceled$Reason: com.stripe.android.link.LinkActivityResult$Canceled$Reason[] values()
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: NetworkingLinkSignupState(com.airbnb.mvrx.Async,java.lang.String,java.lang.String,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationError$Error: com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationError$Error valueOf(java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.stripe.android.stripe3ds2.transaction.Logger: Logger()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.rnmaps.maps.MapMarkerManager: void updateExtraData(com.rnmaps.maps.MapMarker,java.lang.Object)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.stripe.android.paymentsheet.addresselement.AddressLauncherResult: AddressLauncherResult()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.viewpager2.widget.ViewPager2: void setUserInputEnabled(boolean)
com.stripe.android.common.ui.BottomSheetState$DismissalType: com.stripe.android.common.ui.BottomSheetState$DismissalType[] values()
com.stripe.android.view.StripeEditText: void setLastKeyDelete$payments_core_release(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.stripe.android.view.CountryTextInputLayout: void setEnabled(boolean)
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
com.reactnativepagerview.NestedScrollableHost: java.lang.Integer getInitialIndex()
com.reactnativecommunity.webview.RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.react.fabric.LongStreamingStats: LongStreamingStats()
com.nimbusds.jose.shaded.json.JSONArray: JSONArray()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
androidx.compose.animation.EnterTransition: EnterTransition()
com.rnmaps.maps.MapGradientPolylineManager: void setStrokeColors(com.rnmaps.maps.MapGradientPolyline,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager startSurface(int,com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod[] values()
com.reactnativestripesdk.GooglePayLauncherFragment$Mode: com.reactnativestripesdk.GooglePayLauncherFragment$Mode valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect: NetworkingLinkSignupState$ViewEffect()
com.reactnativestripesdk.StripeSdkModule: void setCardFormView(com.reactnativestripesdk.CardFormView)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: DownsampleStrategy()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.stripe.android.financialconnections.features.success.SuccessState: SuccessState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setPointerEvents(android.view.View,java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState copy$default(com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState,com.airbnb.mvrx.Async,java.lang.String,java.lang.String,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect,int,java.lang.Object)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState$SelectionMode: com.stripe.android.financialconnections.features.accountpicker.AccountPickerState$SelectionMode[] values()
com.google.android.gms.wallet.MaskedWallet: MaskedWallet()
com.rnmaps.maps.MapMarker: com.google.android.gms.maps.model.MarkerOptions getMarkerOptions()
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: com.facebook.react.bridge.WritableMap getCTM(java.lang.Double)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.swmansion.reanimated.NodesManager$2: void doFrameGuarded(long)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(android.view.View,java.lang.Double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.stripe.android.view.NetbankingBank: com.stripe.android.view.NetbankingBank valueOf(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.stripe.android.financialconnections.model.Display$Companion: Display$Companion()
com.stripe.android.model.Source$Redirect$Status: com.stripe.android.model.Source$Redirect$Status valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMask(android.view.View,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager access$000(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.stripe.android.payments.PaymentFlowResult$Unvalidated: PaymentFlowResult$Unvalidated()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.motion.widget.MotionLayout: int getStartState()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: java.lang.String getValue()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.reactnativecommunity.webview.RNCWebView: com.reactnativecommunity.webview.RNCWebViewClient getRNCWebViewClient()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: boolean getCanRetry()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2HeaderTextView getInfoHeader$3ds2sdk_release()
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.reactnativestripesdk.StripeSdkModule: void canAddCardToWallet(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState access$002(com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener,com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(android.view.View,int)
com.stripe.android.ui.core.elements.SelectorIcon$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.reactnativestripesdk.addresssheet.AddressSheetView: void setAutocompleteCountries(java.util.List)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
com.google.android.material.internal.FlowLayout: int getRowCount()
com.horcrux.svg.SvgView: void onSizeChanged(int,int,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setDropdownIconColor(android.view.View,int)
com.rnmaps.maps.MapOverlay: void setTransparency(float)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void updateLayout(android.view.View,com.facebook.react.uimanager.ViewManager,int,float,float,float,float,boolean)
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps: GlideBuilder$EnableImageDecoderForBitmaps()
com.azendoo.reactnativesnackbar.SnackbarModule: void dismiss()
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
com.facebook.react.fabric.CppComponentRegistry: com.facebook.jni.HybridData initHybrid()
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: NetworkingLinkLoginWarmupState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: com.airbnb.mvrx.Async getSelectAccounts()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.transition.Transition: Transition()
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.swmansion.reanimated.ReanimatedModule$1: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: int hashCode()
com.rnmaps.maps.MapPolygon: void setStrokeWidth(float)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.stripe.android.view.CardNumberEditText: java.lang.String getAccessibilityText()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.stripe.android.view.PostalCodeEditText$Config: com.stripe.android.view.PostalCodeEditText$Config valueOf(java.lang.String)
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion: com.stripe.android.financialconnections.features.consent.ConsentViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.consent.ConsentState)
com.google.crypto.tink.proto.HmacKey: HmacKey()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.stripe.android.ui.core.elements.PostConfirmStatusSpecAssociation$Companion: PostConfirmStatusSpecAssociation$Companion()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setBaselineShift(android.view.View,java.lang.Double)
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$RedirectNextActionSpec$Companion: ConfirmResponseStatusSpecs$RedirectNextActionSpec$Companion()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.facebook.react.fabric.mounting.MountItemDispatcher: void addViewCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.compose.ui.graphics.Api26Bitmap: androidx.compose.ui.graphics.colorspace.ColorSpace composeColorSpace$ui_graphics_release(android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFontSize(android.view.View,java.lang.Double)
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion: com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState)
com.rnmaps.maps.MapOverlayManager: MapOverlayManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeEndMargin(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeLinejoin(android.view.View,int)
com.horcrux.svg.SvgViewManager: void setBorderBottomRightRadius(android.view.View,double)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setDefaultTintList$paymentsheet_release(android.content.res.ColorStateList)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.app.upfrica.MainApplication: MainApplication()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.stripe.android.view.CardBrandView: void setBrand(com.stripe.android.model.CardBrand)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
androidx.compose.ui.window.PopupLayout: void setIsFocusable(boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand: androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand valueOf(java.lang.String)
androidx.constraintlayout.core.widgets.ConstraintWidget: ConstraintWidget()
androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onCatalystInstanceDestroy()
com.stripe.android.PaymentAuthConfig$Stripe3ds2UiCustomization$ButtonType: com.stripe.android.PaymentAuthConfig$Stripe3ds2UiCustomization$ButtonType[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.rnmaps.maps.MapMarker: void setFlat(boolean)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.reactnativecommunity.picker.ReactPickerManager: void setEnabled(com.reactnativecommunity.picker.ReactPicker,boolean)
com.stripe.android.ui.core.elements.BsbSpec: BsbSpec()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
kotlinx.coroutines.internal.AtomicDesc: AtomicDesc()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
androidx.compose.foundation.text.Handle: androidx.compose.foundation.text.Handle valueOf(java.lang.String)
com.stripe.android.view.ShippingInfoWidget$CustomizableShippingField: com.stripe.android.view.ShippingInfoWidget$CustomizableShippingField valueOf(java.lang.String)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.reactnativepagerview.PagerViewViewManager: void removeAllViews(com.reactnativepagerview.NestedScrollableHost)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.compose.ui.window.PopupLayout: void setParentLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.stripe.android.view.CardMultilineWidget: com.google.android.material.textfield.TextInputLayout getExpiryTextInputLayout()
com.horcrux.svg.VirtualView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.reactnativestripesdk.utils.PaymentSheetErrorType: com.reactnativestripesdk.utils.PaymentSheetErrorType valueOf(java.lang.String)
com.stripe.android.model.ConsumerSession$VerificationSession$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.stripe.android.model.PaymentMethodCreateParams$CashAppPay: PaymentMethodCreateParams$CashAppPay()
com.stripe.android.financialconnections.model.PaymentAccount$Companion: kotlinx.serialization.KSerializer serializer()
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFillRule(android.view.View,int)
com.stripe.android.model.SourceOrderParams: SourceOrderParams()
com.google.crypto.tink.proto.ChaCha20Poly1305Key$Builder: ChaCha20Poly1305Key$Builder()
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontSize(android.view.View,java.lang.Double)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.imagepicker.ImagePickerModule: void launchImageLibrary(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.stripe.android.financialconnections.model.Bullet$Companion: kotlinx.serialization.KSerializer serializer()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.stripe.android.ui.core.elements.EmailSpec$Companion: EmailSpec$Companion()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior$Companion: FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior$Companion()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.picker.ReactDialogPickerManager: void blur(android.view.View)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: SurfaceHandlerBinding(java.lang.String)
androidx.compose.ui.res.ImageVectorCache: ImageVectorCache()
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
androidx.constraintlayout.motion.widget.MotionLayout: int getCurrentState()
com.stripe.android.ui.core.elements.CardNumberController: CardNumberController()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.stripe.android.model.BankAccountTokenParams$Type: com.stripe.android.model.BankAccountTokenParams$Type valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod[] $values()
com.stripe.android.view.CardInputWidget: boolean getPostalCodeEnabled()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.rnmaps.maps.MapMarker: com.rnmaps.maps.MapCallout getCalloutView()
com.horcrux.svg.RenderableView: void setStrokeDasharray(java.lang.String)
androidx.compose.ui.viewinterop.ViewFactoryHolder: void setSaveableRegistryEntry(androidx.compose.runtime.saveable.SaveableStateRegistry$Entry)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.stripe.android.financialconnections.appinitializer.FinancialConnectionsInitializer: FinancialConnectionsInitializer()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.jni.HybridData: void resetNative()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.stripe.android.googlepaylauncher.GooglePayLauncher$BillingAddressConfig$Format: com.stripe.android.googlepaylauncher.GooglePayLauncher$BillingAddressConfig$Format valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.stripe.android.view.MaskedCardView: void setSelected(boolean)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry)
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.stripe.android.view.CardInputWidget: void setExpiryDateTextWatcher(android.text.TextWatcher)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void viewDidLayout(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.CardParams getCardParams()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
androidx.compose.foundation.layout.RowColumnParentData: RowColumnParentData()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.google.android.material.progressindicator.BaseProgressIndicator: void setTrackColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.stripe.android.model.BankStatuses: BankStatuses()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.rnmaps.maps.MapManager: void setShowsUserLocation(com.rnmaps.maps.MapView,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(android.view.View,java.lang.String)
com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountType: com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountType valueOf(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int registerSensor(int,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState$SelectionMode: com.stripe.android.financialconnections.features.accountpicker.AccountPickerState$SelectionMode valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: java.lang.String getValue()
com.swmansion.reanimated.NodesManager$1: NodesManager$1(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.google.android.material.chip.Chip: void setLines(int)
com.stripe.android.stripe3ds2.views.ChallengeActivity: ChallengeActivity()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.stripe.android.model.SourceParams$WeChatParams: SourceParams$WeChatParams()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addRootView(android.view.View)
com.stripe.android.paymentsheet.forms.FormViewModel$ViewData: FormViewModel$ViewData()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.stripe.android.paymentsheet.DeferredIntentConfirmationType: com.stripe.android.paymentsheet.DeferredIntentConfirmationType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapMarker: void setIdentifier(java.lang.String)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.work.impl.utils.ProcessUtils: ProcessUtils()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeOpacity(android.view.View,float)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
com.swmansion.reanimated.NodesManager: void enqueueUpdateViewOnNativeThread(int,com.facebook.react.bridge.WritableMap,boolean)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFillOpacity(android.view.View,float)
com.horcrux.svg.SvgView: boolean notRendered()
com.reactnativestripesdk.StripeSdkModule: void confirmPaymentSheetPayment(com.facebook.react.bridge.Promise)
androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
androidx.compose.ui.platform.AndroidComposeViewForceDarkModeQ: void disallowForceDark(android.view.View)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setLockVisible$paymentsheet_release(boolean)
com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getInfoLabel$3ds2sdk_release()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async component2()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
androidx.navigation.NavBackStackEntry$SavedStateViewModel: NavBackStackEntry$SavedStateViewModel(androidx.lifecycle.SavedStateHandle)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: java.lang.String getValue()
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void clear(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isCreatingModule()
com.swmansion.reanimated.NodesManager: NodesManager(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.reactnativestripesdk.addresssheet.AddressSheetView: void setAppearance(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
com.google.android.material.progressindicator.BaseProgressIndicator: void setHideAnimationBehavior(int)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceId()
com.stripe.android.model.PaymentMethod$BillingDetails$Builder: PaymentMethod$BillingDetails$Builder()
com.google.android.gms.wallet.wobs.TimeInterval: TimeInterval()
kotlin.collections.CharIterator: CharIterator()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.compose.foundation.lazy.LazyListBeyondBoundsInfo: LazyListBeyondBoundsInfo()
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.rnmaps.maps.MapUrlTileManager: void setUrlTemplate(com.rnmaps.maps.MapUrlTile,java.lang.String)
com.stripe.android.ui.core.elements.CardBillingSpec$Companion: CardBillingSpec$Companion()
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setAndroidUIScheduler(com.swmansion.reanimated.AndroidUIScheduler)
com.stripe.android.GooglePayJsonFactory$BillingAddressParameters$Format: com.stripe.android.GooglePayJsonFactory$BillingAddressParameters$Format valueOf(java.lang.String)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.constraintlayout.motion.widget.MotionLayout: void setStartState(int)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion: com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(android.view.View,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
com.facebook.react.fabric.FabricUIManager$3: int getSurfaceId()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void registerExitingAncestors(android.view.View)
com.rnmaps.maps.MapHeatmapManager: void setOpacity(com.rnmaps.maps.MapHeatmap,double)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.stripe.android.financialconnections.model.Entry$Companion: kotlinx.serialization.KSerializer serializer()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.compose.foundation.layout.IntrinsicSize: androidx.compose.foundation.layout.IntrinsicSize valueOf(java.lang.String)
com.horcrux.svg.VirtualViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$Screen: com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$Screen[] values()
com.stripe.android.link.ui.signup.SignUpState: com.stripe.android.link.ui.signup.SignUpState valueOf(java.lang.String)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.fabric.FabricSoLoader: FabricSoLoader()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.stripe.android.stripe3ds2.init.ui.StripeTextBoxCustomization: StripeTextBoxCustomization()
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.turbomodule.core.TurboModuleManager$1: TurboModuleManager$1(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.google.android.material.search.SearchBar: float getStrokeWidth()
androidx.compose.ui.window.SecureFlagPolicy: androidx.compose.ui.window.SecureFlagPolicy[] values()
com.stripe.android.view.BecsDebitAccountNumberEditText: BecsDebitAccountNumberEditText(android.content.Context,android.util.AttributeSet)
androidx.compose.ui.platform.AndroidComposeView: void setLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
com.rnmaps.maps.MapManager: void setPitchEnabled(com.rnmaps.maps.MapView,boolean)
com.google.android.gms.signin.internal.zaa: zaa()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
com.stripe.android.view.CardInputWidget: com.stripe.android.model.PaymentMethod$BillingDetails getBillingDetails()
androidx.compose.ui.graphics.vector.VectorNode: VectorNode()
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.dropShadow.DropShadowModule: DropShadowModule()
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
okhttp3.Response$Builder: Response$Builder()
com.reactnativecommunity.webview.RNCWebViewManager: void setSetBuiltInZoomControls(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.drawee.debug.DebugControllerOverlayDrawable: DebugControllerOverlayDrawable()
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStrokeOpacity(android.view.View,float)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.stripe.android.view.CardInputWidget: void setEnabled(boolean)
com.stripe.android.payments.core.injection.WeChatPayAuthenticatorModule: WeChatPayAuthenticatorModule()
com.rnmaps.maps.MapUrlTileManager: void setTileCacheMaxAge(com.rnmaps.maps.MapUrlTile,float)
com.stripe.android.view.CardMultilineWidget: void setCvcPlaceholderText(java.lang.String)
com.stripe.android.financialconnections.features.consent.ConsentState: int hashCode()
com.facebook.react.bridge.ReadableArray: int size()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.stripe.android.link.LinkRedirectHandlerActivity: LinkRedirectHandlerActivity()
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeMiterlimit(android.view.View,float)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getBatchedExecutionTime()
com.stripe.android.paymentsheet.addresselement.AddressElementActivity: AddressElementActivity()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(android.view.View,java.lang.Double)
com.facebook.react.TurboReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView: void setToken(com.facebook.react.bridge.ReadableMap)
com.stripe.android.model.Address$Builder: Address$Builder()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeMiterlimit(android.view.View,float)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.rnmaps.maps.MapManager: void emitMapError(com.facebook.react.uimanager.ThemedReactContext,java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.gms.wallet.Wallet$WalletOptions: Wallet$WalletOptions()
com.reactnativecommunity.picker.ReactPicker: void setBackgroundColor(int)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewEffect getViewEffect()
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.stripe.android.view.CountryTextInputLayout: void setCountrySelected$payments_core_release(com.stripe.android.core.model.CountryCode)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.horcrux.svg.VirtualViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.stripe.android.model.AccountRange$BrandInfo: com.stripe.android.model.AccountRange$BrandInfo valueOf(java.lang.String)
com.rnmaps.maps.MapMarkerManager: void setDescription(com.rnmaps.maps.MapMarker,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$MaskManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.reactnativecommunity.picker.ReactPickerManager: void setPrompt(com.reactnativecommunity.picker.ReactPicker,java.lang.String)
com.google.android.material.search.SearchView: void setHint(int)
com.horcrux.svg.BuildConfig: BuildConfig()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.compose.ui.autofill.AutofillApi23Helper: void setId(android.view.ViewStructure,int,java.lang.String,java.lang.String,java.lang.String)
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void installJSIBindings()
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.swmansion.reanimated.R$xml: R$xml()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactcommunity.rndatetimepicker.DatePickerModule: DatePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.CopiedEvent: int getTargetTag()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
com.horcrux.svg.R$drawable: R$drawable()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.stripe.android.ui.core.elements.KlarnaHeaderStaticTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.reactnativecommunity.picker.ReactDialogPickerManager: void setNativeSelected(android.view.View,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeOpacity(android.view.View,float)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: AttachPaymentState(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: java.lang.String toString()
com.rnmaps.maps.MapPolylineManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout(android.view.View)
com.stripe.android.payments.bankaccount.CollectBankAccountConfiguration: CollectBankAccountConfiguration()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.horcrux.svg.SvgViewModule: void toDataURL(java.lang.Double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerEnd(android.view.View,java.lang.String)
com.reactnativecommunity.picker.ReactDropdownPickerManager: ReactDropdownPickerManager()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Category: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerMid(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void cancelAnimation(int)
androidx.compose.ui.Modifier$Node: Modifier$Node()
com.rnmaps.maps.MapLocalTileManager: java.lang.String getName()
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(android.view.View,float)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(android.view.View,java.lang.Double)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
androidx.compose.ui.layout.IntrinsicWidthHeight: androidx.compose.ui.layout.IntrinsicWidthHeight[] values()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane component7()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.stripe.android.financialconnections.model.OwnershipRefresh$Status$Companion: OwnershipRefresh$Status$Companion()
com.stripe.android.ui.core.elements.ConfirmResponseStatusSpecs$CanceledSpec: kotlinx.serialization.KSerializer serializer()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.stripe.android.financialconnections.model.PartnerAccount$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: int hashCode()
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void setEventListenerCount$stripe_stripe_react_native_release(int)
com.rnmaps.maps.MapWMSTileManager: void setTileCacheMaxAge(com.rnmaps.maps.MapWMSTile,float)
com.stripe.android.view.BillingAddressFields: com.stripe.android.view.BillingAddressFields[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void onFpxPaymentMethodResult(com.stripe.android.view.AddPaymentMethodActivityStarter$Result)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.jni.NativeRunnable: void run()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType getInstanceById(int)
com.rnmaps.maps.MapTileWorker: MapTileWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.airbnb.mvrx.Async getLinkPaymentAccount()
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$BillingAddressConfig: GooglePayPaymentMethodLauncher$BillingAddressConfig()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.views.view.ReactViewGroup: void recycleView()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.views.slider.ReactSlider: double getStepValue()
com.stripe.android.stripe3ds2.views.ChallengeZoneWebView: android.view.View$OnClickListener getOnClickListener$3ds2sdk_release()
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeLinecap(android.view.View,int)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.stripe.android.financialconnections.model.SynchronizeSessionResponse$Companion: SynchronizeSessionResponse$Companion()
com.reactnativecommunity.picker.ReactPickerManager: ReactPickerManager()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void progressLayoutAnimation(int,java.util.Map,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFillOpacity(android.view.View,float)
com.google.android.material.progressindicator.BaseProgressIndicator: com.google.android.material.progressindicator.DrawingDelegate getCurrentDrawingDelegate()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: int subscribeForKeyboardEvents(com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater,boolean)
com.rnmaps.maps.MapGradientPolyline: void setZIndex(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionStart()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.CardFormView getCardFormView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.input.TextInputForTests getTextInputForTests()
com.stripe.android.stripe3ds2.views.ChallengeActivityViewModel$OnInactiveAwareMutableLiveData: ChallengeActivityViewModel$OnInactiveAwareMutableLiveData()
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes valueOf(java.lang.String)
com.stripe.android.view.CardMultilineWidget: void setExpirationDateErrorListener(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.stripe.android.view.CardInputWidget$Field: com.stripe.android.view.CardInputWidget$Field valueOf(java.lang.String)
androidx.compose.ui.text.android.BoringLayoutFactory33: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean,android.text.TextUtils$TruncateAt,int)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: java.lang.String getRouting()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean removeOrAnimateExitRecursive(android.view.View,boolean,boolean)
com.facebook.react.fabric.SurfaceHandler: int getSurfaceId()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.facebook.react.TurboReactPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.reactnativestripesdk.AuBECSDebitFormViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.model.Source$Status: com.stripe.android.model.Source$Status valueOf(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder access$200(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$300(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeOpacity(android.view.View,float)
com.rnmaps.maps.MapManager: void receiveCommand(com.rnmaps.maps.MapView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(android.view.View,java.lang.Double)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: AccountPickerState(com.airbnb.mvrx.Async,boolean,com.airbnb.mvrx.Async,java.util.Set,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.stripe.android.financialconnections.model.VisualUpdate$Companion: VisualUpdate$Companion()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,java.lang.Double)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,java.lang.String)
com.nimbusds.jose.Payload$Origin: com.nimbusds.jose.Payload$Origin[] values()
com.swmansion.reanimated.R$integer: R$integer()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setClipRule(android.view.View,int)
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel: AccountPickerViewModel(com.stripe.android.financialconnections.features.accountpicker.AccountPickerState,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.SelectAccounts,com.stripe.android.financialconnections.domain.GetOrFetchSync,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger,com.stripe.android.financialconnections.domain.PollAuthorizationSessionAccounts)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: void addPoint(com.facebook.react.bridge.ReactMarkerConstants,long)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.horcrux.svg.VirtualView: void setName(java.lang.String)
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeViewAt(int,int,int)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.reactnativepagerview.PagerViewViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,java.lang.Double)
com.horcrux.svg.SvgView: void invalidate()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: BoundaryInterfaceReflectionUtil()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: FabricUIManager$MountItemDispatchListener(com.facebook.react.fabric.FabricUIManager)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void maybeFlushUIUpdatesQueue()
com.google.crypto.tink.proto.HmacKeyFormat: HmacKeyFormat()
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
com.horcrux.svg.SvgViewManager: void setBackfaceVisibility(com.horcrux.svg.SvgView,java.lang.String)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.rnmaps.maps.MapMarker: void setMarkerHue(float)
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.defaults.DefaultComponentsRegistry: com.facebook.react.defaults.DefaultComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.nativeProxy.KeyboardEventDataUpdater: KeyboardEventDataUpdater(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.reactnativestripesdk.StripeSdkModule: void intentCreationCallback(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountHolderType: com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountHolderType[] values()
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent component3()
com.stripe.android.financialconnections.features.success.SuccessViewModel$Companion: SuccessViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.reactnativestripesdk.StripeSdkModule: void removeListeners(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.google.crypto.tink.proto.RegistryConfig: RegistryConfig()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.rnmaps.maps.MapModule: void getAddressFromCoordinates(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane valueOf(java.lang.String)
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.NodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
androidx.compose.ui.text.style.TextGeometricTransform: TextGeometricTransform()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider getPositionProvider()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.airbnb.mvrx.MavericksBlockExecutions: com.airbnb.mvrx.MavericksBlockExecutions valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.compose.runtime.collection.IdentityArrayIntMap: IdentityArrayIntMap()
com.facebook.react.fabric.FabricUIManager$3: FabricUIManager$3(com.facebook.react.fabric.FabricUIManager,int,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.stripe.android.ui.core.elements.TranslationId$Companion: TranslationId$Companion()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleClearJSResponder()
com.horcrux.svg.SvgViewManager: void setNextFocusLeft(com.horcrux.svg.SvgView,int)
com.rnmaps.maps.MapManager: void setZoomControlEnabled(com.rnmaps.maps.MapView,boolean)
com.rnmaps.maps.MapManager: void setScrollDuringRotateOrZoomEnabled(com.rnmaps.maps.MapView,boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsInstitution$Companion: FinancialConnectionsInstitution$Companion()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
com.stripe.android.ui.core.elements.FormItemSpec$Companion: FormItemSpec$Companion()
com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountType: com.stripe.android.model.PaymentMethod$USBankAccount$USBankAccountType[] values()
androidx.startup.InitializationProvider: InitializationProvider()
com.stripe.android.view.ShippingInfoWidget: void setOptionalFields(java.util.List)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMask(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.horcrux.svg.SvgViewManager: void setBorderStyle(com.horcrux.svg.SvgView,java.lang.String)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.stripe.android.model.StripeIntent$NextActionData$BlikAuthorize: StripeIntent$NextActionData$BlikAuthorize()
com.airbnb.mvrx.ViewModelContext: ViewModelContext()
androidx.compose.ui.platform.ComposeView: java.lang.CharSequence getAccessibilityClassName()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
androidx.compose.ui.window.PopupLayout: void setParentLayoutCoordinates(androidx.compose.ui.layout.LayoutCoordinates)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.stripe.android.uicore.elements.ApiParameterDestination: com.stripe.android.uicore.elements.ApiParameterDestination valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.fabric.LongStreamingStats: double getAverage()
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType[] values()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.reactnativestripesdk.StripeSdkModule: void customerAdapterAttachPaymentMethodCallback(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Dynamic: boolean isNull()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState: com.airbnb.mvrx.Async getConfirmVerification()
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
androidx.compose.ui.text.android.Paint29: void getTextBounds(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Rect)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
com.stripe.android.view.AddPaymentMethodActivityStarter$Args$Builder: AddPaymentMethodActivityStarter$Args$Builder()
com.stripe.android.stripe3ds2.init.ui.UiCustomization$ButtonType: com.stripe.android.stripe3ds2.init.ui.UiCustomization$ButtonType[] values()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.TurboReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.rnmaps.maps.MapMarkerManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.stripe.android.model.SetupIntent$CancellationReason: com.stripe.android.model.SetupIntent$CancellationReason[] values()
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.google.android.material.search.SearchBar: void setNavigationIconDecorative(boolean)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.react.fabric.mounting.MountingManager: void stopSurface(int)
com.reactnativecommunity.picker.ReactDialogPickerManager: void setEnabled(android.view.View,boolean)
com.rnmaps.maps.MapWMSTileManager: void setTileSize(com.rnmaps.maps.MapWMSTile,float)
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,java.lang.Double)
com.rnmaps.maps.MapPolygon: void setGeodesic(boolean)
com.google.android.gms.internal.wallet.zzc: zzc()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: boolean valid()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.stripe.android.stripe3ds2.views.ChallengeZoneWebView: java.lang.String getUserEntry()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SVGLength: SVGLength()
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.swmansion.reanimated.NodesManager: void configureProps(java.util.Set,java.util.Set)
com.stripe.android.financialconnections.features.consent.ConsentState: java.util.List component2()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: long getAnimationTimestamp()
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: TrieNodeBaseIterator()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.reactnativecommunity.picker.ReactPickerManager: void setDropdownIconColor(com.reactnativecommunity.picker.ReactPicker,int)
com.dropShadow.DropShadowModule: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.stripe.android.stripe3ds2.views.ChallengeZoneTextView: void setText(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void screenDidLayout()
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontWeight(com.horcrux.svg.GroupView,java.lang.Double)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.fabric.EmptyReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.stripe.android.view.CvcEditText: void setCompletionCallback$payments_core_release(kotlin.jvm.functions.Function0)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.reactnativecommunity.picker.ReactPicker: java.lang.Integer getPrimaryColor()
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
com.stripe.android.model.Source$Flow: com.stripe.android.model.Source$Flow valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: void resetPerfStats()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
com.reactnativepagerview.PagerViewViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void access$500(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnOpenWindowEvent(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.reactnativecommunity.picker.ReactPickerManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.stripe.android.model.TokenizationMethod: com.stripe.android.model.TokenizationMethod[] values()
com.google.android.material.datepicker.OnSelectionChangedListener: OnSelectionChangedListener()
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setOnModifierChanged$ui_release(kotlin.jvm.functions.Function1)
androidx.compose.ui.platform.TextToolbarHelperMethods: android.view.ActionMode startActionMode(android.view.View,android.view.ActionMode$Callback,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.Set getPendingDeletionsForTag(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.stripe.android.view.PaymentMethodsActivity: PaymentMethodsActivity()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setStrokeLinejoin(android.view.View,int)
androidx.compose.foundation.text.Handle: androidx.compose.foundation.text.Handle[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
kotlinx.serialization.internal.TaggedDecoder: TaggedDecoder()
com.stripe.android.view.CardNumberEditText: void setCompletionCallback$payments_core_release(kotlin.jvm.functions.Function0)
com.reactnativestripesdk.StripeSdkModule: int getEventListenerCount$stripe_stripe_react_native_release()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.stripe.android.model.StripeIntent$NextActionType: java.lang.String toString()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.stripe.android.paymentsheet.PaymentOptionsState: PaymentOptionsState()
com.reactnativestripesdk.StripeSdkModule: com.facebook.react.bridge.Promise access$getCreatePlatformPayPaymentMethodPromise$p(com.reactnativestripesdk.StripeSdkModule)
com.facebook.react.views.text.ReactFontManager$AssetFontFamily: ReactFontManager$AssetFontFamily()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.stripe.android.view.ExpiryDateEditText: ExpiryDateEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.proyecto26.inappbrowser.RNInAppBrowserModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDy(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForViewEnforced(int)
com.stripe.android.financialconnections.model.CreditBalance: CreditBalance()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.compose.ui.autofill.AutofillApi26Helper: void setAutofillHints(android.view.ViewStructure,java.lang.String[])
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
com.swmansion.reanimated.nativeProxy.EventHandler: EventHandler(com.facebook.jni.HybridData)
androidx.constraintlayout.core.widgets.HelperWidget: HelperWidget()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean arrayContains(int[],int)
com.reactnativestripesdk.StripeSdkModule: void customerAdapterSetupIntentClientSecretForCustomerAttachCallback(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: void doFrameGuarded(long)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Pane[] $values()
kotlin.collections.LongIterator: LongIterator()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.stripe.android.financialconnections.model.LegalDetailsNotice$Companion: LegalDetailsNotice$Companion()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setFillOpacity(android.view.View,float)
androidx.core.view.DisplayCutoutCompat$Api30Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)
com.stripe.android.view.StripeActivity: StripeActivity()
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
com.rnmaps.maps.MapPolyline: void setCoordinates(com.facebook.react.bridge.ReadableArray)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
org.bouncycastle.asn1.ASN1Primitive: ASN1Primitive()
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontWeight(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.compose.ui.platform.AndroidComposeView: long getMeasureIteration()
androidx.compose.ui.input.pointer.MotionEventHelper: long toRawOffset-dBAh8RU(android.view.MotionEvent,int)
com.google.android.gms.wallet.InstrumentInfo: InstrumentInfo()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.rnmaps.maps.MapPolygonManager: void setCoordinate(com.rnmaps.maps.MapPolygon,com.facebook.react.bridge.ReadableArray)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutDuration()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.stripe.android.view.ShippingMethodView: void setShippingMethod(com.stripe.android.model.ShippingMethod)
com.stripe.android.model.Source$Usage: java.lang.String toString()
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResultInternal: CollectBankAccountResultInternal()
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceId(int)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setAllowedCountries(com.reactnativestripesdk.addresssheet.AddressSheetView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.rnmaps.maps.MapManager: void setShowTraffic(com.rnmaps.maps.MapView,boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect: ConsentState$ViewEffect()
com.stripe.android.model.PaymentMethod$Card: PaymentMethod$Card()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.stripe.android.link.ui.ErrorTextStyle: ErrorTextStyle()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.swmansion.reanimated.AndroidUIScheduler$2: AndroidUIScheduler$2(com.swmansion.reanimated.AndroidUIScheduler,com.facebook.react.bridge.JSExceptionHandler)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.view.PaymentAuthWebView: PaymentAuthWebView(android.content.Context,android.util.AttributeSet)
androidx.compose.ui.platform.AndroidComposeView: void getLastMatrixRecalculationAnimationTime$ui_release$annotations()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: AndroidInfoHelpers()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setMask(android.view.View,java.lang.String)
com.horcrux.svg.VirtualView: void setMarkerEnd(java.lang.String)
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap access$202(com.swmansion.reanimated.CopiedEvent,com.facebook.react.bridge.WritableMap)
androidx.compose.ui.platform.AndroidComposeView: void getShowLayoutBounds$annotations()
androidx.compose.ui.platform.WrapperVerificationHelperMethods: java.util.Map attributeSourceResourceMap(android.view.View)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.swmansion.reanimated.ReanimatedMessageQueueThread: ReanimatedMessageQueueThread()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: java.lang.String toString()
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,java.lang.String)
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView: void setCardDetails(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean hasAnimation(int,int)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: int getEventCategory()
androidx.compose.animation.core.AnimationEndReason: androidx.compose.animation.core.AnimationEndReason valueOf(java.lang.String)
com.stripe.android.uicore.image.NetworkImageDecoder: NetworkImageDecoder()
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod: com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$MicrodepositVerificationMethod valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.horcrux.svg.R$bool: R$bool()
com.facebook.react.bridge.ReactContext$1: void run()
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion: ConsentViewModel$Companion()
com.stripe.android.model.VerificationMethodParam: com.stripe.android.model.VerificationMethodParam valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.crypto.tink.proto.KeysetInfo$Builder: KeysetInfo$Builder()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
com.reactnativepagerview.PagerViewViewManager: void removeView(android.view.ViewGroup,android.view.View)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.swmansion.gesturehandler.core.PinchGestureHandler: PinchGestureHandler()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.stripe.android.view.CvcEditText: CvcEditText(android.content.Context,android.util.AttributeSet)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.LayoutNodeDrawScope getSharedDrawScope()
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection[] values()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,java.lang.Double)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$MaskManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.fabric.SurfaceHandler: void setMountable(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.stripe.android.paymentsheet.forms.PaymentMethodRequirements$Companion: kotlinx.serialization.KSerializer serializer()
androidx.compose.animation.core.MutatePriority: androidx.compose.animation.core.MutatePriority valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails: FinancialConnectionsSession$StatusDetails()
com.azendoo.reactnativesnackbar.SnackbarModule: SnackbarModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setClipRule(android.view.View,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,java.lang.Double)
androidx.compose.ui.platform.AndroidComposeView: void getFontLoader$annotations()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.picker.ReactPicker)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.PaymentMethod$BillingDetails$Builder getPaymentMethodBillingDetailsBuilder()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: AnimationsManager(com.facebook.react.bridge.ReactContext,com.facebook.react.uimanager.UIManagerModule)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setVisible(com.reactnativestripesdk.addresssheet.AddressSheetView,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerMid(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setBaselineShift(com.horcrux.svg.TextView,java.lang.String)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel: InstitutionPickerViewModel(com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration,com.stripe.android.financialconnections.domain.SearchInstitutions,com.stripe.android.financialconnections.domain.FeaturedInstitutions,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.financialconnections.domain.UpdateLocalManifest,com.stripe.android.core.Logger,com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState)
org.bouncycastle.pqc.crypto.util.PublicKeyFactory$SubjectPublicKeyInfoConverter: PublicKeyFactory$SubjectPublicKeyInfoConverter()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.rnmaps.maps.MapPolygonManager: void setStrokeWidth(com.rnmaps.maps.MapPolygon,float)
com.stripe.android.ui.core.elements.MandateTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState copy$default(com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
com.airbnb.mvrx.DeliveryMode: DeliveryMode()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setName(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeOpacity(android.view.View,float)
com.stripe.android.financialconnections.model.LegalDetailsNotice$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.google.android.gms.common.api.Api$ApiOptions$NoOptions: Api$ApiOptions$NoOptions()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap access$000(com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
com.stripe.android.view.StripeEditText: java.lang.String getErrorMessage$payments_core_release()
com.reactnativecommunity.picker.ReactDropdownPickerManager: void focus(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDashoffset(android.view.View,float)
com.reactnativestripesdk.AuBECSDebitFormViewManager: com.reactnativestripesdk.AuBECSDebitFormView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.swmansion.reanimated.NodesManager: void onHostPause()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setResponsible(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.model.NetworkingLinkSignupPane$Companion: kotlinx.serialization.KSerializer serializer()
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView: void setEphemeralKey(com.facebook.react.bridge.ReadableMap)
com.stripe.android.view.CardBrandView: boolean getShouldShowErrorIcon()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.VirtualView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
androidx.fragment.app.Fragment: Fragment()
com.horcrux.svg.RenderableView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,java.lang.Double)
com.nimbusds.jose.Requirement: com.nimbusds.jose.Requirement valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderLeftColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.BV.LinearGradient.LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: SharedTransitionManager(com.swmansion.reanimated.layoutReanimation.AnimationsManager)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.compose.foundation.lazy.LazyListState: LazyListState()
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.view.AddPaymentMethodView: void setCommunicatingProgress(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInFill(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.stripe.android.ui.core.elements.AuBecsDebitMandateTextSpec: AuBecsDebitMandateTextSpec()
com.horcrux.svg.R$layout: R$layout()
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
com.google.android.material.progressindicator.CircularProgressIndicator: int getIndicatorSize()
androidx.compose.foundation.text.UndoManager: UndoManager()
com.stripe.android.model.AccountRange$BrandInfo: com.stripe.android.model.AccountRange$BrandInfo[] values()
com.stripe.android.view.CardMultilineWidget: void setEnabled(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.stripe.android.ui.core.elements.UpiSpec: UpiSpec()
com.stripe.android.ui.core.elements.FormItemSpec: FormItemSpec()
com.facebook.react.animated.AnimationDriver: AnimationDriver()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.stripe.android.googlepaylauncher.GooglePayLauncherActivity: GooglePayLauncherActivity()
com.google.crypto.tink.proto.EncryptedKeyset: EncryptedKeyset()
com.horcrux.svg.VirtualView: VirtualView(com.facebook.react.bridge.ReactContext)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.stripe.android.view.BecsDebitBsbEditText: kotlin.jvm.functions.Function0 getOnCompletedCallback()
com.rnmaps.maps.MapView: int getFeatureCount()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.fabric.SurfaceHandler: void setLayoutConstraints(int,int,int,int,boolean,boolean,float)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: void stop()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.rnmaps.maps.MapUrlTileManager: java.lang.String getName()
androidx.constraintlayout.motion.widget.KeyTrigger: KeyTrigger()
com.stripe.android.payments.StripeBrowserProxyReturnActivity: StripeBrowserProxyReturnActivity()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.reactnativestripesdk.StripeSdkModule: void dispatchActivityResultsToFragments(int,int,android.content.Intent)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,java.lang.String)
com.rnmaps.maps.MapPolylineManager: MapPolylineManager(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.platform.AbstractComposeView getSubCompositionView()
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.google.android.material.search.SearchBar: void setOnLoadAnimationFadeInEnabled(boolean)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.stripe.android.view.CardInputWidget: void setCardNumberTextWatcher(android.text.TextWatcher)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void updateProps(int,java.util.Map)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: com.reactnativestripesdk.addresssheet.AddressSheetView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativestripesdk.CardFieldViewManager: void setPostalCodeEnabled$default(com.reactnativestripesdk.CardFieldViewManager,com.reactnativestripesdk.CardFieldView,boolean,int,java.lang.Object)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsAnimationCompat$Callback: WindowInsetsAnimationCompat$Callback(int)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.rnmaps.maps.MapCalloutManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(android.view.View,java.lang.String)
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType[] values()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Companion: FinancialConnectionsSession$StatusDetails$Cancelled$Companion()
com.horcrux.svg.VirtualViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.reactnativestripesdk.StripeSdkModule: void payWithFpx()
com.reactnativecommunity.picker.ReactPicker: com.reactnativecommunity.picker.ReactPicker$OnFocusListener getOnFocusListener()
com.stripe.android.view.CardMultilineWidget: void setExpirationDatePlaceholderRes$payments_core_release(java.lang.Integer)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility: com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility[] values()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.stripe.android.paymentsheet.addresselement.analytics.AddressLauncherEvent: AddressLauncherEvent()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.facebook.react.ReactInstancePackage: ReactInstancePackage()
com.rnmaps.maps.MapMarker: java.lang.String getIdentifier()
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion: com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,java.lang.String)
com.imagepicker.ImagePickerModule: java.lang.String getName()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.reactnativecommunity.picker.FabricEnabledPicker: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.rnmaps.maps.MapOverlayManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.stripe.android.payments.StripeBrowserLauncherActivity: StripeBrowserLauncherActivity()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.airbnb.mvrx.Async component2()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.horcrux.svg.RNSVGRenderableManager: RNSVGRenderableManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.stripe.android.networking.PaymentAnalyticsRequestFactory$ThreeDS2UiType: com.stripe.android.networking.PaymentAnalyticsRequestFactory$ThreeDS2UiType[] values()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.reactnativecommunity.picker.ReactPickerShadowNode: ReactPickerShadowNode()
com.reactnativestripesdk.utils.ConfirmPaymentErrorType: com.reactnativestripesdk.utils.ConfirmPaymentErrorType[] values()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,java.lang.String)
com.stripe.android.view.CardMultilineWidget: void setCvcNumberTextWatcher(android.text.TextWatcher)
com.rnmaps.maps.MapManager: MapManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
com.stripe.android.paymentsheet.flowcontroller.FlowControllerViewModel: FlowControllerViewModel(android.app.Application,androidx.lifecycle.SavedStateHandle)
com.horcrux.svg.SvgView: void clearChildCache()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFillRule(android.view.View,int)
com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus: com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NativeProxy$1: boolean hasAnimation(int,int)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.persistentOrderedSet.Links: Links()
com.stripe.android.stripe3ds2.views.BrandZoneView: android.widget.ImageView getIssuerImageView$3ds2sdk_release()
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent getCurrentBottomSheet()
com.reactcommunity.rndatetimepicker.RNDatePickerDialogFragment: RNDatePickerDialogFragment()
com.stripe.android.model.ConsumerSignUpConsentAction: com.stripe.android.model.ConsumerSignUpConsentAction valueOf(java.lang.String)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setAppearance(com.reactnativestripesdk.addresssheet.AddressSheetView,com.facebook.react.bridge.ReadableMap)
com.google.crypto.tink.proto.HmacParams$Builder: HmacParams$Builder()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: int hashCode()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.reactnativepagerview.PagerViewViewManager: int getChildCount(android.view.ViewGroup)
com.horcrux.svg.VirtualViewManager: void setDisplay(com.horcrux.svg.VirtualView,java.lang.String)
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
androidx.compose.ui.graphics.vector.PathParser$PathPoint: PathParser$PathPoint()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.google.android.gms.identity.intents.model.UserAddress: UserAddress()
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type valueOf(java.lang.String)
com.stripe.android.financialconnections.features.success.SuccessState: SuccessState()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setEnabled(com.reactnativecommunity.checkbox.ReactCheckBox,boolean)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setVectorEffect(android.view.View,int)
com.google.android.material.search.SearchBar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion: com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.accountpicker.AccountPickerState)
com.stripe.android.financialconnections.model.NetworkedAccount$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.ui.core.elements.IbanSpec: IbanSpec()
com.stripe.android.financialconnections.model.OwnershipRefresh$Status$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.view.CardMultilineWidget: void setShouldShowPostalCode(boolean)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
com.stripe.android.view.PostalCodeEditText: java.lang.String getPostalCode$payments_core_release()
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.stripe.android.financialconnections.model.BalanceRefresh$BalanceRefreshStatus: java.lang.String getCode$financial_connections_release()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.rnmaps.maps.MapManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setResponsible(android.view.View,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.google.android.material.animation.MotionSpec: MotionSpec()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.airbnb.mvrx.Async getConfirmVerification()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: java.lang.String getValue()
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
androidx.compose.material.TextFieldType: androidx.compose.material.TextFieldType valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.stripe.android.view.CardNumberEditText: com.stripe.android.cards.CardAccountRangeService getAccountRangeService()
com.stripe.android.view.StripeEditText: void setErrorMessage(java.lang.String)
com.horcrux.svg.RenderableView: boolean setupFillPaint(android.graphics.Paint,float)
com.bumptech.glide.request.BaseRequestOptions: BaseRequestOptions()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.horcrux.svg.VirtualViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setName(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.stripe.android.link.LinkForegroundActivity: LinkForegroundActivity()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.rnmaps.maps.MapMarkerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,java.lang.Double)
com.google.android.material.card.MaterialCardView: float getRadius()
com.horcrux.svg.RenderableViewManager$PatternManager: void setFontWeight(android.view.View,java.lang.Double)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isLayoutAnimationEnabled()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.stripe.android.PaymentAuthConfig$Stripe3ds2ToolbarCustomization$Builder: PaymentAuthConfig$Stripe3ds2ToolbarCustomization$Builder()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
com.reactnativestripesdk.utils.ErrorType: com.reactnativestripesdk.utils.ErrorType[] values()
com.google.android.material.button.MaterialButton: void setIconSize(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy: androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy valueOf(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product[] values()
com.facebook.react.bridge.Arguments$1: int size()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: FinancialConnectionsAuthorizationSession$Flow(java.lang.String,int,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.swmansion.reanimated.NodesManager: void handleEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
kotlin.text.RegexOption: kotlin.text.RegexOption[] values()
com.stripe.android.paymentsheet.ui.PrimaryButton: android.content.res.ColorStateList getDefaultTintList$paymentsheet_release()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.stripe.android.financialconnections.model.ManualEntryMode$Companion: kotlinx.serialization.KSerializer serializer()
com.rnmaps.maps.MapManager: void setMapType(com.rnmaps.maps.MapView,java.lang.String)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getMenuAlignmentMode()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.stripe.android.payments.bankaccount.navigation.CollectBankAccountResult: CollectBankAccountResult()
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState: NetworkingSaveToLinkVerificationState()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
okhttp3.CacheControl$Companion: CacheControl$Companion()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.swmansion.reanimated.NativeMethodsHelper: NativeMethodsHelper()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setDeltaX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,java.lang.Double)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ClickableText: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ClickableText valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setResponsible(android.view.View,boolean)
com.swmansion.reanimated.AndroidUIScheduler: java.util.concurrent.atomic.AtomicBoolean access$000(com.swmansion.reanimated.AndroidUIScheduler)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.stripe.android.core.networking.StripeRequest$MimeType: com.stripe.android.core.networking.StripeRequest$MimeType[] values()
com.stripe.android.view.StripeEditText: java.lang.String getFieldText$payments_core_release()
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.reactnativestripesdk.addresssheet.AddressSheetView: void setGooglePlacesApiKey(java.lang.String)
com.google.android.material.search.SearchView: void setHint(java.lang.CharSequence)
com.stripe.android.view.CountryTextInputLayout: void getSelectedCountryCode$payments_core_release$annotations()
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.stripe.android.paymentsheet.ui.GooglePayButton: com.stripe.android.paymentsheet.databinding.StripeGooglePayButtonBinding getViewBinding$paymentsheet_release()
com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingActivity: PollingActivity()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapHeatmap: void setPoints(com.google.maps.android.heatmaps.WeightedLatLng[])
androidx.compose.ui.text.AnnotationType: androidx.compose.ui.text.AnnotationType[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$ConfigCleanerTreeVisitor: SharedTransitionManager$ConfigCleanerTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: DispatchIntCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setOpacity(android.view.View,float)
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.stripe.android.model.PaymentIntent$CaptureMethod: com.stripe.android.model.PaymentIntent$CaptureMethod valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.stripe.android.ui.core.elements.PostConfirmStatusSpecAssociation: PostConfirmStatusSpecAssociation()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
org.bouncycastle.jcajce.provider.util.AlgorithmProvider: AlgorithmProvider()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
kotlinx.coroutines.scheduling.Task: Task()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setX(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
kotlinx.coroutines.flow.SharedFlowSlot: SharedFlowSlot()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.stripe.android.link.serialization.PopupPayload$CustomerInfo$Companion: kotlinx.serialization.KSerializer serializer()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.stripe.android.stripe3ds2.views.ThreeDS2WebView: void setWebViewClient(android.webkit.WebViewClient)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int getSurfaceId()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.stripe.android.model.PaymentMethod$Type: com.stripe.android.model.PaymentMethod$Type valueOf(java.lang.String)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void doFrameGuarded(long)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: void sendAccessibilityEvent(int,int,int)
com.stripe.android.ui.core.elements.PhoneSpec: PhoneSpec()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setDisplay(android.view.View,java.lang.String)
com.reactnativecommunity.picker.ReactDialogPickerManager: void setColor(android.view.View,java.lang.Integer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.google.crypto.tink.subtle.Base64: Base64()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.compose.ui.text.platform.Api28Impl: android.text.style.TypefaceSpan createTypefaceSpan(android.graphics.Typeface)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.compose.ui.graphics.vector.GroupComponent: GroupComponent()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView: java.util.List getCheckBoxes()
com.stripe.android.stripe3ds2.views.InformationZoneView: void getWhyContainer$3ds2sdk_release$annotations()
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void onViewStateDeleted(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: FinancialConnectionsSheetNativeState(com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetNativeActivityArgs)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.stripe.android.view.CardNumberEditText: kotlin.jvm.functions.Function1 getBrandChangeCallback$payments_core_release()
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.progressindicator.BaseProgressIndicator: void setIndeterminateDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.load.Options: Options()
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.stripe.android.model.ConsumerSession$Companion: ConsumerSession$Companion()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.stripe.android.view.CvcEditText: kotlin.jvm.functions.Function0 getCompletionCallback$payments_core_release()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.rnmaps.maps.MapManager: android.view.View getChildAt(com.rnmaps.maps.MapView,int)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetState$AuthFlowStatus component4()
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$AccountDisconnectionMethod$Companion: FinancialConnectionsSessionManifest$AccountDisconnectionMethod$Companion()
com.rnmaps.maps.MapOverlay: java.lang.Object getFeature()
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setVectorEffect(android.view.View,int)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.crypto.tink.proto.AesCtrKey$Builder: AesCtrKey$Builder()
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
com.google.android.material.search.SearchBar: void setHint(java.lang.CharSequence)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
com.rnmaps.maps.MapLocalTileManager: void setPathTemplate(com.rnmaps.maps.MapLocalTile,java.lang.String)
com.rnmaps.maps.MapManager: void setMarkerManager(com.rnmaps.maps.MapMarkerManager)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.compose.ui.platform.RenderNodeVerificationHelper28: void setSpotShadowColor(android.view.RenderNode,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setMask(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
com.stripe.android.view.CardNumberEditText: CardNumberEditText(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.view.CardNumberTextInputLayout getCardNumberTextInputLayout()
com.stripe.android.view.CountryTextInputLayout: void getCountryAutocomplete$annotations()
com.stripe.android.ui.core.elements.EmptyFormElement: EmptyFormElement()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: LayoutAnimationController()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.google.android.gms.wallet.button.zzc: zzc()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeDashoffset(android.view.View,float)
com.rnmaps.maps.MapView: void setRegion(com.facebook.react.bridge.ReadableMap)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.facebook.react.ReactInstanceManagerBuilder: ReactInstanceManagerBuilder()
com.facebook.react.devsupport.HMRClient: void enable()
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect getViewEffect()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(android.view.View,java.lang.Double)
com.stripe.android.stripe3ds2.views.InformationZoneView: void getExpandText$3ds2sdk_release$annotations()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async getPayload()
com.stripe.android.uicore.elements.IdentifierSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityResult: FinancialConnectionsSheetActivityResult()
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.stripe.android.link.ui.paymentmethod.SupportedPaymentMethod: com.stripe.android.link.ui.paymentmethod.SupportedPaymentMethod[] values()
androidx.compose.ui.viewinterop.ViewFactoryHolder: void setUpdateBlock(kotlin.jvm.functions.Function1)
com.stripe.android.view.AddPaymentMethodCardView: com.stripe.android.model.PaymentMethod$BillingDetails getBillingDetails()
com.stripe.android.model.CvcCheck: com.stripe.android.model.CvcCheck valueOf(java.lang.String)
com.reactnativestripesdk.addresssheet.AddressSheetViewManager: void setPrimaryButtonTitle(com.reactnativestripesdk.addresssheet.AddressSheetView,java.lang.String)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.stripe.android.view.BecsDebitBsbEditText: void setOnCompletedCallback(kotlin.jvm.functions.Function0)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList access$300(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec: AfterpayClearpayTextSpec()
com.bumptech.glide.util.Util: Util()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.stripe.android.ui.core.elements.NameSpec$Companion: NameSpec$Companion()
com.reactnativestripesdk.CardFieldViewManager: void setPostalCodeEnabled(com.reactnativestripesdk.CardFieldView,boolean)
com.rnmaps.maps.MapManager: void setMaxZoomLevel(com.rnmaps.maps.MapView,float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.focus.FocusOwner getFocusOwner()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: GeneratedMessageLite()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.reactnativecommunity.picker.FabricEnabledPicker: void setMeasuredHeight(int)
com.stripe.android.ui.core.elements.SharedDataSpec$Companion: SharedDataSpec$Companion()
com.rnmaps.maps.MapLocalTileManager: void setZIndex(com.rnmaps.maps.MapLocalTile,float)
com.stripe.android.customersheet.CustomerSheetContract$Args: CustomerSheetContract$Args()
com.reactnativestripesdk.StripeSdkModule: void collectBankAccount(boolean,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.stripe.android.stripe3ds2.views.ChallengeZoneView: void setChallengeEntryView(android.view.View)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.rnmaps.maps.MapCircleManager: void setRadius(com.rnmaps.maps.MapCircle,double)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.stripe.android.paymentsheet.analytics.EventReporter$Mode: com.stripe.android.paymentsheet.analytics.EventReporter$Mode[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.google.crypto.tink.proto.AesCtrHmacAeadKey: AesCtrHmacAeadKey()
com.horcrux.svg.SvgPackage: com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.stripe.android.view.CardFormView: void setEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unregisterSensor(int)
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
androidx.compose.ui.window.PopupLayout: void setSecurePolicy(androidx.compose.ui.window.SecureFlagPolicy)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(android.view.View,java.lang.String)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
androidx.compose.runtime.snapshots.SnapshotStateList: SnapshotStateList()
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.stripe.android.ui.core.elements.ConfirmStatusSpecAssociation: ConfirmStatusSpecAssociation()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeLinecap(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeWidth(android.view.View,java.lang.String)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: android.widget.RadioButton getWhitelistYesRadioButton$3ds2sdk_release()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTreeForTags(int[],com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.stripe.android.customersheet.CustomerSessionViewModel: CustomerSessionViewModel(android.app.Application)
com.stripe.android.ui.core.elements.SepaMandateTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
com.horcrux.svg.SvgView: int reactTagForTouch(float,float)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.stripe.android.view.CardInputWidget: com.stripe.android.view.ExpiryDateEditText getExpiryDateEditText$payments_core_release()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeDashoffset(android.view.View,float)
com.google.android.material.search.SearchBar: int getMenuResId()
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.horcrux.svg.SvgView: void setTintColor(java.lang.Integer)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.stripe.android.view.BecsDebitWidget: com.stripe.android.view.BecsDebitWidget$ValidParamsCallback getValidParamsCallback()
androidx.compose.material.FadeInFadeOutState: FadeInFadeOutState()
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion: com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState initialState(com.airbnb.mvrx.ViewModelContext)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.horcrux.svg.VirtualViewManager$SVGClass: com.horcrux.svg.VirtualViewManager$SVGClass valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: DispatchStringCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.StripeSdkModule: void setCardFieldView(com.reactnativestripesdk.CardFieldView)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.stripe.android.model.SourceOrder$Item$Type: com.stripe.android.model.SourceOrder$Item$Type valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$SetupFutureUse: com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$SetupFutureUse valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.stripe.android.model.CvcCheck: com.stripe.android.model.CvcCheck[] values()
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isText(android.view.autofill.AutofillValue)
androidx.compose.animation.core.FloatSpringSpec: FloatSpringSpec()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setClipRule(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
com.stripe.android.ui.core.elements.BlikSpec$Companion: BlikSpec$Companion()
com.reactnativecommunity.webview.RNCWebViewManager: void setLackPermissionToDownloadMessage(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
com.bumptech.glide.TransitionOptions: TransitionOptions()
com.rnmaps.maps.MapManager: void setToolbarEnabled(com.rnmaps.maps.MapView,boolean)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.facebook.react.ReactRootView: int getRootViewTag()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void makeSnapshot(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.picker.ReactPicker: void setOnFocusListener(com.reactnativecommunity.picker.ReactPicker$OnFocusListener)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.reactnativestripesdk.CardFormViewManager: com.reactnativestripesdk.CardFormView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setBaselineShift(android.view.View,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.bumptech.glide.load.engine.DiskCacheStrategy: DiskCacheStrategy()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.compose.ui.graphics.vector.VectorProperty: VectorProperty()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status: com.stripe.android.financialconnections.model.FinancialConnectionsSession$Status valueOf(java.lang.String)
com.rnmaps.maps.MapManager: void setRegion(com.rnmaps.maps.MapView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.stripe.android.financialconnections.FinancialConnectionsSheetState: boolean equals(java.lang.Object)
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntSize getPopupContentSize-bOM6tXw()
com.horcrux.svg.SvgViewManager: void setNextFocusDown(android.view.View,int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(android.view.View,java.lang.String)
okio.Buffer: Buffer()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: BouncyCastlePQCProvider()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.stripe.android.financialconnections.model.Entry$Companion: Entry$Companion()
com.rnmaps.maps.MapMarkerManager: void setIcon(com.rnmaps.maps.MapMarker,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: java.lang.String getValue()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(android.view.View,java.lang.String)
com.horcrux.svg.VirtualView: double relativeOnOther(com.horcrux.svg.SVGLength)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.reactnativestripesdk.GooglePayLauncherFragment: GooglePayLauncherFragment()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.stripe.android.view.CardInputWidget: void setPostalCodeRequired(boolean)
com.reactcommunity.rndatetimepicker.DatePickerModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.reactcommunity.rndatetimepicker.DatePickerModule)
com.swmansion.reanimated.sensor.ReanimatedSensorType: ReanimatedSensorType(java.lang.String,int,int)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.stripe.android.ui.core.elements.KlarnaCountrySpec$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.NodesManager: boolean isAnimationRunning()
com.facebook.jni.DestructorThread: DestructorThread()
com.swmansion.gesturehandler.core.FlingGestureHandler: FlingGestureHandler()
com.facebook.react.fabric.LongStreamingStats: long getMax()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection[] values()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isDoneCreatingModule()
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.horcrux.svg.SvgViewManager: void setBorderBottomEndRadius(com.horcrux.svg.SvgView,float)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.rnmaps.maps.MapCalloutManager: void setTooltip(com.rnmaps.maps.MapCallout,boolean)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
com.stripe.android.paymentsheet.PaymentSheetViewModel$CheckoutIdentifier: com.stripe.android.paymentsheet.PaymentSheetViewModel$CheckoutIdentifier[] values()
com.swmansion.reanimated.NodesManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion: AttachPaymentViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.swmansion.reanimated.NodesManager: void performOperations()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.reactnativestripesdk.StripeSdkModule: void access$setCreatePlatformPayPaymentMethodPromise$p(com.reactnativestripesdk.StripeSdkModule,com.facebook.react.bridge.Promise)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: boolean canCoalesceEvent()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.stripe.android.ui.core.elements.StaticTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.stripe.android.financialconnections.ui.FinancialConnectionsSheetNativeActivity: FinancialConnectionsSheetNativeActivity()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.dropShadow.DropShadowModule: void onDropViewInstance(android.view.View)
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.stripe.android.stripe3ds2.transaction.ChallengeRequestResult$Failure: ChallengeRequestResult$Failure()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
com.rnmaps.maps.MapLocalTileManager: void setUseAssets(com.rnmaps.maps.MapLocalTile,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,java.lang.Double)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.stripe.android.view.CardNumberEditText: com.stripe.android.cards.CardNumber$Unvalidated getUnvalidatedCardNumber()
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(android.view.View,float)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion: com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationState)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.horcrux.svg.VirtualViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativecommunity.webview.RNCWebView: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCBasicAuthCredential)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
com.google.android.material.card.MaterialCardView: float getProgress()
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: ChaCha20Poly1305KeyFormat()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(android.view.View,java.lang.Double)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.stripe.android.model.GooglePayResult: GooglePayResult()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setName(android.view.View,java.lang.String)
com.stripe.android.financialconnections.FinancialConnectionsSheetActivity: FinancialConnectionsSheetActivity()
com.rnmaps.maps.MapPolylineManager: void setStrokeWidth(com.rnmaps.maps.MapPolyline,float)
androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus[] values()
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
androidx.compose.ui.platform.AccessibilityIterators$LineTextSegmentIterator: AccessibilityIterators$LineTextSegmentIterator()
okhttp3.ResponseBody: ResponseBody()
com.google.crypto.tink.proto.Keyset: Keyset()
androidx.viewpager2.widget.ViewPager2: int getOffscreenPageLimit()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.dropShadow.DropShadowModule: void setShadowColor(com.dropShadow.DropShadowLayout,java.lang.Integer)
com.reactnativestripesdk.CardFormViewManager: void onDropViewInstance(com.reactnativestripesdk.CardFormView)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(android.view.View,java.lang.Double)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.google.android.gms.wallet.TransactionInfo: TransactionInfo()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.constraintlayout.widget.Barrier: int getType()
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didDispatchMountItems()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeMiterlimit(android.view.View,float)
com.dropShadow.DropShadowModule: void setShadowOffset(com.dropShadow.DropShadowLayout,com.facebook.react.bridge.ReadableMap)
kotlinx.serialization.internal.TaggedEncoder: TaggedEncoder()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2Button getResendButton$3ds2sdk_release()
com.google.android.material.search.SearchBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapHeatmapManager: void setPoints(com.rnmaps.maps.MapHeatmap,com.facebook.react.bridge.ReadableArray)
com.stripe.android.paymentsheet.ui.PrimaryButton: void setLabel(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType[] values()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
com.google.android.material.progressindicator.BaseProgressIndicator: int getHideAnimationBehavior()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setMatrix(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setEnabled(android.view.View,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFillOpacity(android.view.View,float)
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(android.view.View,int)
androidx.viewpager2.widget.ViewPager2: void setOrientation(int)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFillRule(android.view.View,int)
com.stripe.android.model.StripeIntent$NextActionData$UpiAwaitNotification: StripeIntent$NextActionData$UpiAwaitNotification()
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.search.SearchBar: java.lang.CharSequence getText()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: RecyclerView$ItemAnimator()
androidx.compose.ui.platform.AndroidComposeView: boolean getShowLayoutBounds()
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.stripe.android.model.Source$CodeVerification$Status: com.stripe.android.model.Source$CodeVerification$Status valueOf(java.lang.String)
com.swmansion.reanimated.CopiedEvent: java.lang.String getEventName()
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion: LinkStepUpVerificationViewModel$Companion()
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
com.google.crypto.tink.proto.AesGcmSivKey: AesGcmSivKey()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.rnmaps.maps.MapManager: void setCamera(com.rnmaps.maps.MapView,com.facebook.react.bridge.ReadableMap)
com.google.crypto.tink.proto.AesSivKeyFormat: AesSivKeyFormat()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setClipPath(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
com.google.android.material.search.SearchBar: void setCenterView(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.stripe.android.view.CardInputWidget: void setCardNumber(java.lang.String)
com.rnmaps.maps.MapMarkerManager: void addView(com.rnmaps.maps.MapMarker,android.view.View,int)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion: com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState initialState(com.airbnb.mvrx.ViewModelContext)
androidx.compose.ui.platform.RenderNodeVerificationHelper23: void destroyDisplayListData(android.view.RenderNode)
androidx.compose.ui.platform.ComposeView: boolean getShouldCreateCompositionOnAttachedToWindow()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setFontWeight(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
com.reactnativecommunity.picker.ReactPicker: com.facebook.react.bridge.ReactContext getReactContext()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.reactnativestripesdk.CardFieldViewManager: void receiveCommand(com.reactnativestripesdk.CardFieldView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
androidx.navigation.compose.ComposeNavigator: ComposeNavigator()
androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 getUpdateBlock()
com.stripe.android.stripe3ds2.init.Warning$Severity: com.stripe.android.stripe3ds2.init.Warning$Severity[] values()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
com.stripe.android.financialconnections.utils.Experiment: com.stripe.android.financialconnections.utils.Experiment[] values()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion: PartnerAuthViewModel$Companion()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFillOpacity(android.view.View,float)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.stripe.android.networking.StripeApiRepository$DnsCacheData: StripeApiRepository$DnsCacheData()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.stripe.android.financialconnections.features.success.SuccessState: java.lang.String toString()
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setResponsible(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: boolean getShowFullForm()
com.google.crypto.tink.proto.KeyTemplate: KeyTemplate()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void clearAnimationConfig(int)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.reactnativecommunity.webview.RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: com.airbnb.mvrx.Async getSelectInstitution()
com.google.crypto.tink.proto.ChaCha20Poly1305Key: ChaCha20Poly1305Key()
com.facebook.react.uimanager.ReanimatedUIManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] values()
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.horcrux.svg.SvgView: void defineBrush(com.horcrux.svg.Brush,java.lang.String)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(android.view.View,java.lang.String)
androidx.compose.ui.text.font.ResourceFontHelper: android.graphics.Typeface load(android.content.Context,androidx.compose.ui.text.font.ResourceFont)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.stripe.android.view.AddPaymentMethodFpxView: com.stripe.android.model.PaymentMethodCreateParams getCreateParams()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.google.crypto.tink.proto.AesEaxKey$Builder: AesEaxKey$Builder()
com.reactnativestripesdk.CardFieldView: void setCardBrandTint(int)
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setPointerEvents(android.view.View,java.lang.String)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
kotlinx.serialization.json.JsonPrimitive$Companion: kotlinx.serialization.KSerializer serializer()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState copy(com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.Cookie$Companion: Cookie$Companion()
com.swmansion.rnscreens.Screen: void setFragmentWrapper(com.swmansion.rnscreens.ScreenFragmentWrapper)
com.stripe.android.core.model.Country$Companion: Country$Companion()
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupViewModel$Companion: NetworkingLinkLoginWarmupViewModel$Companion()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,java.lang.Double)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
com.stripe.android.stripe3ds2.views.ThreeDS2Button: void setButtonCustomization(com.stripe.android.stripe3ds2.init.ui.ButtonCustomization)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.events.PointerEvent: PointerEvent()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsEvent$Code: com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsEvent$Code[] values()
com.stripe.android.financialconnections.model.LinkAccountSessionPaymentAccount$Companion: kotlinx.serialization.KSerializer serializer()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.rnmaps.maps.MapManager: void setLiteMode(com.rnmaps.maps.MapView,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.react.fabric.StateWrapperImpl: void updateState(com.facebook.react.bridge.WritableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.gms.wallet.zzc: zzc()
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.rnmaps.maps.MapCircle: void setFillColor(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNewProps(java.util.Map,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.uimanager.ViewManager,java.lang.Integer,boolean)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.fabric.EmptyReactNativeConfig: boolean getBool(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.facebook.react.turbomodule.core.TurboModuleManager$2: TurboModuleManager$2(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.facebook.react.TurboReactPackage: java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext)
androidx.compose.foundation.Api31Impl: float getDistance(android.widget.EdgeEffect)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.picker.ReactPickerManager: void setDropdownIconRippleColor(com.reactnativecommunity.picker.ReactPicker,int)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.rnmaps.maps.MapOverlay: void setBearing(float)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.stripe.android.view.CardMultilineWidget: boolean getPostalCodeRequired()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addCurrentConfig(java.util.HashMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(android.view.View,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.stripe.android.view.PaymentMethodsRecyclerView: com.stripe.android.model.PaymentMethod getTappedPaymentMethod$payments_core_release()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setVectorEffect(android.view.View,int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void startCreatingModule()
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion: com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationState)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setFillRule(android.view.View,int)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(android.view.View,java.lang.String)
com.stripe.android.view.CardMultilineWidget: void setCvcLabel(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.compose.ui.layout.IntrinsicMinMax: androidx.compose.ui.layout.IntrinsicMinMax valueOf(java.lang.String)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void cardDetails(com.reactnativestripesdk.pushprovisioning.AddToWalletButtonView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.swmansion.reanimated.ReanimatedMessageQueueThreadBase: void assertIsOnThread(java.lang.String)
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.rnmaps.maps.MapPolygon: com.google.android.gms.maps.model.PolygonOptions getPolygonOptions()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptObject(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
com.google.crypto.tink.proto.KmsAeadKey: KmsAeadKey()
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setDisplay(android.view.View,java.lang.String)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.ClipboardManager getClipboardManager()
com.reactnativestripesdk.AuBECSDebitFormViewManager: void setFormStyle(com.reactnativestripesdk.AuBECSDebitFormView,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean checkIfTopScreenHasHeader(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.stripe.android.PaymentAuthConfig$Stripe3ds2UiCustomization$ButtonType: com.stripe.android.PaymentAuthConfig$Stripe3ds2UiCustomization$ButtonType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.stripe.android.paymentsheet.PaymentSheetActivity: PaymentSheetActivity()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int getSurfaceId()
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalBias(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
com.stripe.android.view.EmailEditText: java.lang.String getEmail()
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setStrokeDashoffset(android.view.View,float)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerMid(android.view.View,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(android.view.View,java.lang.Double)
com.stripe.android.ui.core.elements.SepaMandateTextSpec$Companion: SepaMandateTextSpec$Companion()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.rnmaps.maps.MapCalloutManager: void updateExtraData(com.rnmaps.maps.MapCallout,java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
com.reactnativecommunity.picker.ReactPickerManager: void setBackgroundColor(com.reactnativecommunity.picker.ReactPicker,int)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager getReanimatedNativeHierarchyManager()
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.stripe.android.financialconnections.features.reset.ResetState: com.stripe.android.financialconnections.features.reset.ResetState copy$default(com.stripe.android.financialconnections.features.reset.ResetState,com.airbnb.mvrx.Async,int,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.text.TextLayoutManagerMapBuffer: TextLayoutManagerMapBuffer()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMidLine(com.horcrux.svg.TextPathView,java.lang.String)
com.stripe.android.financialconnections.model.Balance$Type: com.stripe.android.financialconnections.model.Balance$Type[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.rnmaps.maps.MapOverlay: void setTappable(boolean)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerViewModel$Companion: InstitutionPickerViewModel$Companion()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions: com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Permissions[] $values()
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean tryDispatchMountItems()
com.stripe.android.payments.paymentlauncher.PaymentResult: PaymentResult()
com.rnmaps.maps.MapMarkerManager: void setImage(com.rnmaps.maps.MapMarker,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.reactnativestripesdk.AuBECSDebitFormViewManager: void setCompanyName(com.reactnativestripesdk.AuBECSDebitFormView,java.lang.String)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setResponsible(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetViewCommandMountItems()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.stripe.android.financialconnections.model.LegalDetailsBody$Companion: kotlinx.serialization.KSerializer serializer()
com.stripe.android.paymentsheet.ui.PrimaryButton: java.lang.String getExternalLabel$paymentsheet_release()
com.reactnativestripesdk.StripeSdkModule: void retrieveCustomerSheetPaymentOptionSelection(com.facebook.react.bridge.Promise)
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
com.horcrux.svg.VirtualViewManager: void access$000(com.horcrux.svg.VirtualViewManager,com.horcrux.svg.VirtualView)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setDisplay(android.view.View,java.lang.String)
com.google.android.gms.maps.MapsInitializer: MapsInitializer()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.compose.foundation.text.selection.TextPreparedSelectionState: TextPreparedSelectionState()
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: AbstractDraweeController$InternalForwardingListener()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.rnmaps.maps.MapCircleManager: com.rnmaps.maps.MapCircle createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
com.rnmaps.maps.MapView: void setMapStyle(java.lang.String)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setDensity(androidx.compose.ui.unit.Density)
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.stripe.android.financialconnections.model.PartnerNotice$Companion: PartnerNotice$Companion()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.stripe.android.payments.bankaccount.ui.CollectBankAccountViewEffect: CollectBankAccountViewEffect()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.stripe.android.financialconnections.model.ReturningNetworkingUserAccountPicker$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.rnmaps.maps.MapView: android.widget.ImageView getCacheImageView()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.reactnativestripesdk.StripeSdkModule: void resetPaymentSheetCustomer(com.facebook.react.bridge.Promise)
com.rnmaps.maps.MapManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.fabric.FabricSoLoader: void staticInit()
com.stripe.android.financialconnections.model.Balance$Companion: Balance$Companion()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(android.view.View,int)
com.stripe.android.view.CardInputWidget: boolean getPostalCodeRequired()
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$BillingAddressConfig$Format: com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncher$BillingAddressConfig$Format[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabledInternal(boolean)
com.facebook.imagepipeline.cache.StagingArea: StagingArea()
com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient: AndroidKeystoreKmsClient()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentViewModel: AttachPaymentViewModel(com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState,com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository,com.stripe.android.financialconnections.domain.PollAttachPaymentAccount,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetCachedAccounts,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.financialconnections.domain.GetOrFetchSync,com.stripe.android.financialconnections.domain.GetCachedConsumerSession,com.stripe.android.core.Logger)
kotlinx.coroutines.selects.SeqNumber: SeqNumber()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.stripe.android.model.SourceOrderParams$Item: SourceOrderParams$Item()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(android.view.View,java.lang.Double)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.bridge.JavaScriptContextHolder: long get()
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.stripe.android.financialconnections.model.Image$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontWeight(android.view.View,java.lang.Double)
androidx.constraintlayout.motion.utils.ViewTimeCycle: ViewTimeCycle()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setClipRule(android.view.View,int)
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
com.reactnativecommunity.picker.ReactDialogPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.stripe.android.stripe3ds2.init.ui.StripeLabelCustomization: StripeLabelCustomization()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
org.greenrobot.eventbus.EventBus$PostingThreadState: EventBus$PostingThreadState()
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState$CloseDialog component4()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setDropdownIconRippleColor(android.view.View,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.stripe.android.financialconnections.model.FinancialConnectionsAccountList$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
com.google.crypto.tink.Registry: Registry()
androidx.compose.ui.node.Ref: Ref()
com.horcrux.svg.VirtualViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.features.consent.ConsentState: ConsentState(com.airbnb.mvrx.Async,java.util.List,com.stripe.android.financialconnections.features.consent.ConsentState$BottomSheetContent,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.reactcommunity.rndatetimepicker.RNTimePickerDisplay: com.reactcommunity.rndatetimepicker.RNTimePickerDisplay valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.networking.PaymentAnalyticsEvent: java.lang.String toString()
androidx.compose.foundation.lazy.ItemInfo: ItemInfo()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void printSubTree(android.view.View,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.stripe.android.stripe3ds2.views.InformationZoneView: com.stripe.android.stripe3ds2.views.ThreeDS2TextView getExpandLabel$3ds2sdk_release()
com.reactnativestripesdk.addresssheet.AddressSheetView: void setDefaultValues(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason: com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Cancelled$Reason[] values()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.DesignTool getDesignTool()
com.stripe.android.financialconnections.features.consent.ConsentState: com.stripe.android.financialconnections.features.consent.ConsentState$ViewEffect component5()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.stripe.android.financialconnections.ui.components.StringAnnotation: com.stripe.android.financialconnections.ui.components.StringAnnotation valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,java.lang.Double)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,java.lang.Double)
com.reactnativecommunity.picker.ReactPickerManager: void setSelected(com.reactnativecommunity.picker.ReactPicker,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setClipRule(android.view.View,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.stripe.android.financialconnections.features.success.SuccessState: com.airbnb.mvrx.Async getPayload()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
com.google.android.gms.wallet.ShippingAddressRequirements: ShippingAddressRequirements()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: boolean component5()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,java.lang.String)
com.stripe.android.stripe3ds2.init.ui.UiCustomization$ButtonType: com.stripe.android.stripe3ds2.init.ui.UiCustomization$ButtonType valueOf(java.lang.String)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
androidx.compose.ui.viewinterop.AndroidViewHolder: void setOnDensityChanged$ui_release(kotlin.jvm.functions.Function1)
com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationStepUpError$Error: com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationStepUpError$Error valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: int hashCode()
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.reactnativestripesdk.CardFieldViewManager: void setAutofocus(com.reactnativestripesdk.CardFieldView,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setMarkerEnd(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderRightColor(android.view.View,java.lang.Integer)
com.nimbusds.jose.JWEObject$State: com.nimbusds.jose.JWEObject$State valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
androidx.compose.ui.window.PopupLayout: int getDisplayWidth()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
com.swmansion.reanimated.nativeProxy.SensorSetter: void sensorSetter(float[],int)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.reactnativecommunity.picker.ReactDialogPickerManager: void setDropdownIconRippleColor(android.view.View,int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void endLayoutAnimation(int,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setResponsible(android.view.View,boolean)
com.stripe.android.model.Source$Flow: com.stripe.android.model.Source$Flow[] values()
com.reactnativecommunity.picker.ReactPicker: void setDropdownIconColor(int)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunning()
com.rnmaps.maps.MapManager: com.rnmaps.maps.MapView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$Product: java.lang.String getValue()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: void removeView(android.view.View)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.stripe.android.paymentsheet.ui.PaymentSheetPrimaryButtonContainerFragment: PaymentSheetPrimaryButtonContainerFragment()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
com.stripe.android.model.StripeIntent$NextActionData$DisplayOxxoDetails: StripeIntent$NextActionData$DisplayOxxoDetails()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: NodesManager$NativeUpdateOperation(com.swmansion.reanimated.NodesManager,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager$5: java.lang.String toString()
androidx.compose.ui.platform.actionmodecallback.MenuItemOption: androidx.compose.ui.platform.actionmodecallback.MenuItemOption valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingState: com.stripe.android.paymentsheet.paymentdatacollection.polling.PollingState[] values()
kotlinx.serialization.modules.ContextualProvider: ContextualProvider()
com.stripe.android.view.CardInputListener$FocusField: com.stripe.android.view.CardInputListener$FocusField valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
com.swmansion.reanimated.AndroidUIScheduler: void triggerUI()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(android.view.View,java.lang.String)
kotlinx.serialization.modules.SerializersModule: SerializersModule()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs: PostConfirmHandlingPiStatusSpecs()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setStrokeOpacity(android.view.View,float)
com.reactnativepagerview.ViewPagerAdapter: ViewPagerAdapter()
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.airbnb.mvrx.Async getSaveAccountToLink()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontSize(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: java.lang.String toString()
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnchorMode()
com.facebook.react.bridge.Dynamic: double asDouble()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: OwnershipRefresh$Status(java.lang.String,int,java.lang.String)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: android.view.View getRootView()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.horcrux.svg.VirtualViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStrokeDashoffset(android.view.View,float)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.material.progressindicator.CircularProgressIndicator: int getIndicatorInset()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setVectorEffect(android.view.View,int)
com.google.crypto.tink.daead.DeterministicAeadWrapper: DeterministicAeadWrapper()
com.facebook.react.fabric.events.EventBeatManager: void onBatchEventDispatched()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(com.reactnativecommunity.webview.RNCWebViewWrapper,java.lang.String)
com.horcrux.svg.RenderableView: void setId(int)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.react.bridge.GuardedRunnable: void run()
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
com.reactcommunity.rndatetimepicker.TimePickerModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.reactcommunity.rndatetimepicker.TimePickerModule)
com.rnmaps.maps.MapGradientPolylineManager: MapGradientPolylineManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.crypto.tink.proto.AesCtrKeyFormat$Builder: AesCtrKeyFormat$Builder()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.swmansion.reanimated.NodesManager: void stopUpdatingOnAnimationFrame()
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.horcrux.svg.SvgView: void startViewTransition(android.view.View)
com.stripe.android.model.MandateDataParams$Type$Online: MandateDataParams$Type$Online()
com.google.android.material.button.MaterialButton: int getIconPadding()
com.stripe.android.view.CardMultilineWidget: java.util.Collection getAllFields()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: double getTotalLength(java.lang.Double)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(android.view.View,float)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
com.stripe.android.stripe3ds2.views.InformationZoneView: void getExpandContainer$3ds2sdk_release$annotations()
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
androidx.compose.ui.window.PopupLayout: int getDisplayHeight()
kotlinx.serialization.json.JsonElement: JsonElement()
com.facebook.react.fabric.FabricUIManager$1: FabricUIManager$1()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.FinancialConnectionsSheetState: com.stripe.android.financialconnections.FinancialConnectionsSheetViewEffect getViewEffect()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
androidx.viewpager2.widget.ViewPager2: int getItemDecorationCount()
com.horcrux.svg.RenderableViewManager$PatternManager: void setFillOpacity(android.view.View,float)
com.stripe.android.ui.core.elements.KlarnaHeaderStaticTextSpec: KlarnaHeaderStaticTextSpec()
com.swmansion.gesturehandler.react.RNGestureHandlerStateChangeEvent: RNGestureHandlerStateChangeEvent()
com.facebook.react.animated.NativeAnimatedModule: void access$900(com.facebook.react.animated.NativeAnimatedModule,int)
com.stripe.android.model.SourceTypeModel: SourceTypeModel()
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.picker.CheckedTextViewImpl: void setHorizontallyScrolling(boolean)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion: NetworkingSaveToLinkVerificationViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.VirtualView: void clearParentCache()
com.facebook.react.fabric.CppComponentRegistry: CppComponentRegistry(com.facebook.jni.HybridData)
androidx.recyclerview.widget.GapWorker: GapWorker()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.stripe.android.view.CardNumberEditText: com.stripe.android.model.CardBrand getCardBrand()
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: NetworkingLinkLoginWarmupState()
com.reactnativepagerview.PagerViewViewManager: void set(com.reactnativepagerview.NestedScrollableHost,int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.navigation.PopUpToBuilder: PopUpToBuilder()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: RenderableViewManager$ForeignObjectManager()
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void dropView(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent: java.lang.String getEventName()
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMidLine(android.view.View,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$AddPaymentMethodStyle: com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$AddPaymentMethodStyle[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
androidx.compose.ui.window.PopupLayout: void setPopupContentSize-fhxjrPA(androidx.compose.ui.unit.IntSize)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.View)
androidx.compose.foundation.relocation.BringIntoViewRequesterImpl: BringIntoViewRequesterImpl()
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(android.view.View,java.lang.Double)
com.google.crypto.tink.shaded.protobuf.AbstractMessageLite: AbstractMessageLite()
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,java.lang.Double)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: ReactSliderManager$ReactSliderShadowNode()
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedClipPath(java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.reactnativecommunity.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
com.stripe.android.view.CardFormView$Style: com.stripe.android.view.CardFormView$Style valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setStrokeLinecap(android.view.View,int)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.reactnativepagerview.NestedScrollableHost: boolean getDidSetInitialIndex()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
okhttp3.MediaType$Companion: MediaType$Companion()
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.google.android.material.progressindicator.CircularProgressIndicator: void setTrackThickness(int)
com.facebook.imagepipeline.image.CloseableBitmap: CloseableBitmap()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
androidx.security.crypto.MasterKey$Builder$Api23Impl: java.lang.String getKeystoreAlias(android.security.keystore.KeyGenParameterSpec)
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManager(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativestripesdk.CardFormView: void setCardStyle(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,java.lang.Double)
com.rnmaps.maps.MapManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.compose.foundation.text.KeyCommand: androidx.compose.foundation.text.KeyCommand valueOf(java.lang.String)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(android.view.View,java.lang.Double)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: com.airbnb.mvrx.Async component1()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
com.reactnativestripesdk.utils.CreateTokenErrorType: com.reactnativestripesdk.utils.CreateTokenErrorType[] values()
androidx.compose.ui.window.PopupLayout: boolean getShouldCreateCompositionOnAttachedToWindow()
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.stripe.android.ui.core.elements.DropdownItemSpec: DropdownItemSpec()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
com.horcrux.svg.SvgViewManager: void setHitSlop(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
androidx.compose.animation.core.MutatePriority: androidx.compose.animation.core.MutatePriority[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager: int getSurfaceId()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void install$lambda-2(com.swmansion.gesturehandler.react.RNGestureHandlerModule)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setResponsible(android.view.View,boolean)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.stripe.android.stripe3ds2.views.ChallengeZoneSelectView: android.widget.LinearLayout getSelectGroup$3ds2sdk_release()
com.facebook.react.fabric.Binding: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,com.facebook.react.fabric.ReactNativeConfig,com.facebook.react.fabric.CppComponentRegistry)
com.stripe.android.financialconnections.model.ManualEntryMode: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(android.view.View,java.lang.String)
com.swmansion.reanimated.R$color: R$color()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.google.android.material.progressindicator.BaseProgressIndicator: int[] getIndicatorColor()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$anim: R$anim()
androidx.viewpager2.widget.ViewPager2: void setCurrentItem(int)
com.reactnativestripesdk.CardFieldView: void setCardParams(com.stripe.android.model.PaymentMethodCreateParams$Card)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.rnmaps.maps.MapCircleManager: void setZIndex(com.rnmaps.maps.MapCircle,float)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.stripe.android.paymentsheet.ui.PaymentSheetTopBarStateFactory: PaymentSheetTopBarStateFactory()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.stripe.android.core.networking.ApiRequest$Factory: ApiRequest$Factory()
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: java.lang.String toString()
com.stripe.android.view.BecsDebitBsbEditText: BecsDebitBsbEditText(android.content.Context,android.util.AttributeSet)
com.stripe.android.core.networking.StripeRequest$MimeType: com.stripe.android.core.networking.StripeRequest$MimeType valueOf(java.lang.String)
com.nimbusds.jose.shaded.asm.ConvertDate: ConvertDate()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.stripe.android.paymentsheet.PaymentSheet$GooglePayConfiguration$Environment: com.stripe.android.paymentsheet.PaymentSheet$GooglePayConfiguration$Environment valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.compose.material.InputPhase: androidx.compose.material.InputPhase valueOf(java.lang.String)
com.facebook.react.animated.AnimatedNode: AnimatedNode()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerMid(android.view.View,java.lang.String)
com.reactnativestripesdk.CardFormView: void setDangerouslyGetFullCardDetails(boolean)
com.rnmaps.maps.MapManager: int getChildCount(com.rnmaps.maps.MapView)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.reactnativecommunity.picker.ReactPicker: void setOnSelectListener(com.reactnativecommunity.picker.ReactPicker$OnSelectListener)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.rnmaps.maps.MapManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.stripe.android.financialconnections.features.consent.ConsentState: com.airbnb.mvrx.Async getAcceptConsent()
com.stripe.android.financialconnections.model.FinancialConnectionsSession$StatusDetails$Companion: FinancialConnectionsSession$StatusDetails$Companion()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.compose.ui.platform.ViewLayer: androidx.compose.ui.platform.DrawChildContainer getContainer()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setStrokeOpacity(android.view.View,float)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: com.airbnb.mvrx.Async component1()
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.facebook.react.fabric.DevToolsReactPerfLogger: DevToolsReactPerfLogger()
com.facebook.react.TurboReactPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$PatternManager: void setFont(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.stripe.android.stripe3ds2.transactions.ChallengeRequestData$CancelReason: com.stripe.android.stripe3ds2.transactions.ChallengeRequestData$CancelReason[] values()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.stripe.android.model.PaymentMethod$CardPresent: PaymentMethod$CardPresent()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.compose.ui.platform.AbstractComposeView: AbstractComposeView(android.content.Context,android.util.AttributeSet)
com.rnmaps.maps.MapMarkerManager: void removeViewAt(com.rnmaps.maps.MapMarker,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.stripe.android.paymentsheet.analytics.EventReporter$Mode: com.stripe.android.paymentsheet.analytics.EventReporter$Mode valueOf(java.lang.String)
com.rnmaps.maps.MapManager: void setCacheEnabled(com.rnmaps.maps.MapView,boolean)
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState: java.lang.String component3()
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$SupportedPaymentMethodTypes: FinancialConnectionsAccount$SupportedPaymentMethodTypes(java.lang.String,int,java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.stripe.android.ui.core.elements.autocomplete.model.AddressLine1: AddressLine1()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.stripe.android.ui.core.elements.DropdownSpec$Companion: DropdownSpec$Companion()
androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Api24Impl: void addSetProgressAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.compose.ui.semantics.SemanticsNode)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setStrokeWidth(android.view.View,java.lang.Double)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
com.swmansion.reanimated.NativeMethodsHelper: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManagerAbstract: void setFontWeight(com.horcrux.svg.GroupView,java.lang.String)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,java.lang.Double)
com.swmansion.reanimated.R$anim: R$anim()
com.rnmaps.maps.MapPolyline: void setColor(int)
com.horcrux.svg.R$color: R$color()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setClipRule(android.view.View,int)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.swmansion.reanimated.NodesManager: void scrollTo(int,double,double,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String)
com.google.maps.android.data.kml.KmlStyle: KmlStyle()
com.stripe.android.view.PaymentMethodsAdapter$ViewType: com.stripe.android.view.PaymentMethodsAdapter$ViewType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
androidx.work.ContentUriTriggers: ContentUriTriggers()
com.reactnativecommunity.picker.ReactDialogPickerManager: void setDropdownIconColor(android.view.View,int)
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.MountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
com.stripe.android.view.CardNumberEditText: int getFormattedPanLength()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
androidx.emoji2.text.flatbuffer.MetadataItem: MetadataItem()
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
com.google.android.material.progressindicator.BaseProgressIndicator: void setProgressDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(android.view.View,int)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.dropShadow.DropShadowLayout: void setShadowRadius(com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.sensor.ReanimatedSensor: void cancel()
com.stripe.android.financialconnections.features.reset.ResetState: com.airbnb.mvrx.Async component1()
com.horcrux.svg.VirtualView: void setResponsible(boolean)
com.google.maps.android.ui.RotationLayout: RotationLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void updateLayout(int,int,int,int,int,int)
com.horcrux.svg.SvgViewManager: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.stripe.android.financialconnections.features.networkinglinkloginwarmup.NetworkingLinkLoginWarmupState: boolean equals(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderTopStartRadius(com.horcrux.svg.SvgView,float)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.stripe.android.financialconnections.features.networkinglinkverification.NetworkingLinkVerificationViewModel$Companion: NetworkingLinkVerificationViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetMountItems()
com.stripe.android.StripeApiBeta: com.stripe.android.StripeApiBeta valueOf(java.lang.String)
com.google.crypto.tink.KeyManagerRegistry: KeyManagerRegistry()
com.horcrux.svg.SvgView: void setMinX(float)
com.stripe.android.model.Source$Usage: com.stripe.android.model.Source$Usage valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.financialconnections.features.manualentry.ManualEntryState: com.airbnb.mvrx.Async component8()
com.stripe.android.ui.core.elements.ContactInformationSpec$Companion: ContactInformationSpec$Companion()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setFillOpacity(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewManager: void setMenuCustomItems(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableArray)
com.BV.LinearGradient.LinearGradientView: void setColors(com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.stripe.android.financialconnections.features.accountpicker.AccountPickerViewModel$Companion: AccountPickerViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.rnmaps.maps.MapView: android.widget.ProgressBar getMapLoadingProgressBar()
com.stripe.android.financialconnections.features.accountpicker.AccountPickerState: java.util.Set getSelectedIds()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.rnmaps.maps.MapMarker: void setSnippet(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
androidx.compose.ui.viewinterop.AndroidViewHolder: void setSavedStateRegistryOwner(androidx.savedstate.SavedStateRegistryOwner)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setStrokeDasharray(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.stripe.android.financialconnections.features.attachpayment.AttachPaymentState: com.airbnb.mvrx.Async component1()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitStart()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.stripe.android.stripe3ds2.transactions.ErrorData$ErrorComponent: com.stripe.android.stripe3ds2.transactions.ErrorData$ErrorComponent[] values()
com.facebook.react.fabric.events.EventEmitterWrapper: void invoke(java.lang.String,com.facebook.react.bridge.WritableMap,int)
com.google.android.gms.wallet.OfferWalletObject: OfferWalletObject()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.compose.ui.viewinterop.AndroidViewHolder: void setUpdate(kotlin.jvm.functions.Function0)
com.reactnativestripesdk.StripeSdkModule: void createPaymentMethod(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: java.lang.String toString()
com.horcrux.svg.SvgViewModule: void access$000(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.reactnativestripesdk.StripeSdkModule: boolean access$getPlatformPayUsesDeprecatedTokenFlow$p(com.reactnativestripesdk.StripeSdkModule)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.react.fabric.mounting.MountingManager: boolean isWaitingForViewAttach(int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
com.stripe.android.model.PaymentMethod$Builder: PaymentMethod$Builder()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStrokeDashoffset(android.view.View,float)
com.horcrux.svg.VirtualViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
okio.AsyncTimeout: AsyncTimeout()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
androidx.compose.foundation.lazy.grid.LazyGridState: LazyGridState()
com.rnmaps.maps.MapOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.cards.CardNumber$Validated getValidatedCardNumber$payments_core_release()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessViewModel$Companion: ManualEntrySuccessViewModel$Companion()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String)
com.rnmaps.maps.MapUrlTile: void setDoubleTileSize(boolean)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: com.airbnb.mvrx.Async getPayload()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.stripe.android.view.CardNumberEditText: int getPanLength$payments_core_release()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthViewModel$Companion: com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState initialState(com.airbnb.mvrx.ViewModelContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(android.view.View,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.stripe.android.stripe3ds2.views.ChallengeZoneWebView: com.stripe.android.stripe3ds2.views.ThreeDS2WebView getWebView()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.constraintlayout.motion.widget.MotionLayout: void setDebugMode(int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setDisplay(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel$Companion: LinkAccountPickerViewModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontSize(android.view.View,java.lang.Double)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.stripe.android.view.CardInputWidget: void setPostalCode$payments_core_release(java.lang.String)
com.reactnativepagerview.PagerViewViewManager: void removeViewAt(com.reactnativepagerview.NestedScrollableHost,int)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.stripe.android.financialconnections.navigation.NavigationState: NavigationState()
com.stripe.android.view.CardInputWidget: com.stripe.android.model.CardBrand getBrand()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.stripe.android.paymentsheet.PaymentSheet$InitializationMode: PaymentSheet$InitializationMode()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,int,java.util.Map)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
com.rnmaps.maps.MapModule: void getCamera(int,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.reactnativestripesdk.PaymentLauncherFragment$Companion: PaymentLauncherFragment$Companion()
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: PartnerAuthState(java.lang.String,com.airbnb.mvrx.Async,com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState$ViewEffect,com.airbnb.mvrx.Async)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.stripe.android.model.CardFunding: com.stripe.android.model.CardFunding valueOf(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,java.lang.String)
com.reactcommunity.rndatetimepicker.DatePickerModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.stripe.android.link.LinkActivityResult: LinkActivityResult()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,java.lang.Double)
com.stripe.android.stripe3ds2.init.DefaultAppInfoRepository$Companion: DefaultAppInfoRepository$Companion()
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.stripe.android.financialconnections.model.FinancialConnectionsSessionManifest$LinkAccountSessionCancellationBehavior: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.modules.blob.BlobModule: void initialize()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.stripe.android.financialconnections.model.FinancialConnectionsAccount$Companion: kotlinx.serialization.KSerializer serializer()
com.reactnativestripesdk.CardFormViewManager: void setDangerouslyGetFullCardDetails(com.reactnativestripesdk.CardFormView,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setStrokeLinejoin(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.stripe.android.model.PaymentMethodCreateParams$Card: PaymentMethodCreateParams$Card()
com.stripe.android.stripe3ds2.views.InformationZoneView: android.widget.LinearLayout getWhyContainer$3ds2sdk_release()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.rnmaps.maps.MapPolylineManager: void setCoordinate(com.rnmaps.maps.MapPolyline,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
androidx.constraintlayout.motion.utils.ViewSpline$PathRotate: ViewSpline$PathRotate()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.graphics.Point convertScreenLocationToViewCoordinates(android.graphics.Point,android.view.View)
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState: com.stripe.android.financialconnections.FinancialConnectionsSheet$Configuration component3()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.stripe.android.ui.core.elements.KeyboardType: com.stripe.android.ui.core.elements.KeyboardType[] values()
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(android.view.View,java.lang.Double)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.reactnativestripesdk.pushprovisioning.PushProvisioningProxy: PushProvisioningProxy()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.reactnativestripesdk.CardFormViewManager: void onDropViewInstance(android.view.View)
androidx.compose.material.InputPhase: androidx.compose.material.InputPhase[] values()
com.stripe.android.model.ConfirmPaymentIntentParams$SetupFutureUsage: com.stripe.android.model.ConfirmPaymentIntentParams$SetupFutureUsage[] values()
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap access$400(com.facebook.react.fabric.mounting.SurfaceMountingManager)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,java.lang.Double)
com.reactnativecommunity.picker.ReactDropdownPickerManager: com.reactnativecommunity.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.stripe.android.financialconnections.features.manualentry.ManualEntryViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
androidx.constraintlayout.motion.widget.MotionLayout: void setInterpolatedProgress(float)
androidx.browser.customtabs.CustomTabsServiceConnection: CustomTabsServiceConnection()
com.rnmaps.maps.MapPolygonManager: void setStrokeColor(com.rnmaps.maps.MapPolygon,int)
com.stripe.android.financialconnections.features.manualentrysuccess.ManualEntrySuccessState: com.airbnb.mvrx.Async getCompleteSession()
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setFontSize(android.view.View,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.compose.material.TextFieldType: androidx.compose.material.TextFieldType[] values()
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void enqueuePendingEvent(int,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] values()
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow[] $values()
com.horcrux.svg.RenderableViewManager$MaskManager: void setFontSize(android.view.View,java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.checkbox.ReactCheckBox)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.stripe.android.uicore.elements.IdentifierSpec: IdentifierSpec()
androidx.cardview.widget.CardView: void setRadius(float)
com.google.crypto.tink.proto.AesCtrParams: AesCtrParams()
com.stripe.android.googlepaylauncher.GooglePayPaymentMethodLauncherActivity: GooglePayPaymentMethodLauncherActivity()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(android.view.View,java.lang.Double)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setFontSize(android.view.View,java.lang.String)
com.stripe.android.financialconnections.features.consent.ConsentViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.stripe.android.financialconnections.model.Balance$Type$Companion: kotlinx.serialization.KSerializer serializer()
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate access$000(com.facebook.react.devsupport.LogBoxModule)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.horcrux.svg.SvgViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.stripe.android.financialconnections.repository.SaveToLinkWithStripeSucceededRepository$State: boolean equals(java.lang.Object)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.stripe.android.view.CardInputWidget: com.stripe.android.model.PaymentMethodCreateParams$Card getPaymentMethodCard()
com.reactnativestripesdk.StripeSdkModule: java.util.List getAllStripeFragmentTags()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.horcrux.svg.RenderableViewManager$PatternManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.rnmaps.maps.MapView: void setUserLocationFastestInterval(int)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
androidx.compose.ui.viewinterop.AndroidViewHolder: int getNestedScrollAxes()
com.rnmaps.maps.MapMarkerManager: void removeViewAt(android.view.ViewGroup,int)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.horcrux.svg.RenderableViewManager$MaskManager: void setClipPath(android.view.View,java.lang.String)
com.horcrux.rnsvg.NativeSvgRenderableModuleSpec: boolean isPointInFill(java.lang.Double,com.facebook.react.bridge.ReadableMap)
com.google.android.material.search.SearchBar: android.widget.TextView getTextView()
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: KmsEnvelopeAeadKey()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setPropList(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(android.view.View,java.lang.String)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
androidx.navigation.compose.BackStackEntryIdViewModel: BackStackEntryIdViewModel(androidx.lifecycle.SavedStateHandle)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerEnforced(int,java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
com.stripe.android.GooglePayJsonFactory$MerchantInfo: GooglePayJsonFactory$MerchantInfo()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.horcrux.svg.SvgView$Events: SvgView$Events(java.lang.String,int,java.lang.String)
androidx.work.impl.model.WorkSpec$WorkInfoPojo: WorkSpec$WorkInfoPojo()
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativestripesdk.StripeSdkModule: void createToken(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.search.SearchView: void setUpStatusBarSpacer(int)
com.stripe.android.view.CardNumberEditText: void setWorkContext(kotlin.coroutines.CoroutineContext)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void doSnapshotForTopScreenViews(android.view.ViewGroup)
com.rnmaps.maps.MapHeatmapManager: MapHeatmapManager()
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.horcrux.svg.SvgViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setFill(android.view.View,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.NodesManager: void onCatalystInstanceDestroy()
com.google.android.material.progressindicator.CircularProgressIndicator: int getIndicatorDirection()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
androidx.compose.foundation.interaction.HoverInteraction$Enter: HoverInteraction$Enter()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnchorMode(int)
com.stripe.android.financialconnections.launcher.FinancialConnectionsSheetActivityResult$Completed: FinancialConnectionsSheetActivityResult$Completed()
com.stripe.android.ui.core.elements.SimpleTextSpec$Companion: SimpleTextSpec$Companion()
com.reactnativepagerview.PagerViewViewManager: com.facebook.react.uimanager.events.EventDispatcher access$getEventDispatcher$p(com.reactnativepagerview.PagerViewViewManager)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
androidx.compose.ui.text.android.StaticLayoutFactory26: void setJustificationMode(android.text.StaticLayout$Builder,int)
com.google.android.material.search.SearchView: java.lang.CharSequence getHint()
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState: com.stripe.android.financialconnections.features.networkinglinksignup.NetworkingLinkSignupState$ViewEffect getViewEffect()
com.horcrux.svg.RenderableView: void setStrokeWidth(java.lang.String)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Companion: FinancialConnectionsAuthorizationSession$Companion()
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
androidx.activity.compose.ActivityResultLauncherHolder: ActivityResultLauncherHolder()
com.stripe.android.model.ConsumerSession$VerificationSession$SessionType: com.stripe.android.model.ConsumerSession$VerificationSession$SessionType[] values()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.swmansion.reanimated.NodesManager$1: void runGuarded()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.swmansion.reanimated.NativeMethodsHelper: void scrollTo(android.view.View,double,double,boolean)
com.stripe.android.view.CardInputWidget: com.stripe.android.cards.Cvc$Validated getCvc()
com.google.android.material.progressindicator.BaseProgressIndicator: com.google.android.material.progressindicator.DeterminateDrawable getProgressDrawable()
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.stripe.android.core.networking.NetworkTypeDetector$NetworkType: com.stripe.android.core.networking.NetworkTypeDetector$NetworkType[] values()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerViewModel: LinkAccountPickerViewModel(com.stripe.android.financialconnections.features.linkaccountpicker.LinkAccountPickerState,com.stripe.android.financialconnections.analytics.FinancialConnectionsAnalyticsTracker,com.stripe.android.financialconnections.domain.GetCachedConsumerSession,com.stripe.android.financialconnections.domain.FetchNetworkedAccounts,com.stripe.android.financialconnections.domain.SelectNetworkedAccount,com.stripe.android.financialconnections.domain.UpdateLocalManifest,com.stripe.android.financialconnections.domain.UpdateCachedAccounts,com.stripe.android.financialconnections.domain.GetManifest,com.stripe.android.financialconnections.navigation.NavigationManager,com.stripe.android.core.Logger)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.stripe.android.view.ShippingMethodView: void setSelected(boolean)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.lifecycle.ViewModel: ViewModel()
com.stripe.android.view.CardMultilineWidget: void setExpirationDateErrorListener$payments_core_release(com.stripe.android.view.StripeEditText$ErrorMessageListener)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setVectorEffect(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeWidth(android.view.View,java.lang.String)
com.stripe.android.link.serialization.PopupPayload$PaymentInfo$Companion: PopupPayload$PaymentInfo$Companion()
com.horcrux.svg.RenderableViewManager$PatternManager: void setOpacity(android.view.View,float)
com.horcrux.svg.SvgView: void defineClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.rnmaps.maps.MapGradientPolylineManager: void setCoordinates(com.rnmaps.maps.MapGradientPolyline,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.stripe.android.financialconnections.features.reset.ResetState: int hashCode()
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.stripe.android.view.CardMultilineWidget: void setCardBrandIconSupplier$payments_core_release(com.stripe.android.view.CardMultilineWidget$CardBrandIconSupplier)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: void setNestedScrollEnabled(com.reactnativecommunity.webview.RNCWebViewWrapper,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.reactnativestripesdk.CardFieldViewManager: void setAutofocus$default(com.reactnativestripesdk.CardFieldViewManager,com.reactnativestripesdk.CardFieldView,boolean,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.collection.LongSparseArray: LongSparseArray()
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void attachRootView(android.view.View,com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
com.stripe.android.paymentsheet.PaymentSheet$IntentConfiguration$Mode$Setup: PaymentSheet$IntentConfiguration$Mode$Setup()
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme[] values()
com.swmansion.reanimated.Utils: java.util.Map processMapping(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.stripe.android.financialconnections.model.DataAccessNotice$Companion: kotlinx.serialization.KSerializer serializer()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStroke(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(android.view.View,int)
com.stripe.android.paymentsheet.PaymentSheet$GooglePayConfiguration$Environment: com.stripe.android.paymentsheet.PaymentSheet$GooglePayConfiguration$Environment[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.stripe.android.model.PaymentIntent$CancellationReason: com.stripe.android.model.PaymentIntent$CancellationReason[] values()
com.stripe.android.view.PaymentFlowViewPager: PaymentFlowViewPager(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.features.networkingsavetolinkverification.NetworkingSaveToLinkVerificationViewModel$Companion: NetworkingSaveToLinkVerificationViewModel$Companion()
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int,int)
org.bouncycastle.pqc.crypto.xmss.HashTreeAddress$Builder: HashTreeAddress$Builder()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableArray)
com.stripe.android.googlepaylauncher.GooglePayEnvironment: com.stripe.android.googlepaylauncher.GooglePayEnvironment[] values()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontSize(android.view.View,java.lang.Double)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeLinecap(android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.facebook.react.fabric.mounting.SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback: SurfaceMountingManager$RemoveDeleteTreeUIFrameCallback(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.bridge.ReactContext)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationViewModel$Companion: com.airbnb.mvrx.MavericksViewModel create(com.airbnb.mvrx.ViewModelContext,com.airbnb.mvrx.MavericksState)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.react.views.view.ReactViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setFillRule(android.view.View,int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.rnmaps.maps.MapCircleManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.rnmaps.maps.MapUrlTileManager: MapUrlTileManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(int)
com.facebook.drawee.components.DraweeEventTracker: DraweeEventTracker()
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl: boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.compose.ui.window.PopupLayout: void setContent(kotlin.jvm.functions.Function2)
com.rnmaps.maps.MapUrlTileManager: void setMinimumZ(com.rnmaps.maps.MapUrlTile,float)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.stripe.android.ui.core.elements.PostConfirmHandlingPiStatusSpecs$Companion: PostConfirmHandlingPiStatusSpecs$Companion()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setName(android.view.View,java.lang.String)
com.google.android.material.search.SearchView: void setUpHeaderLayout(int)
com.stripe.android.view.CardMultilineWidget: com.stripe.android.model.ExpirationDate$Validated getExpirationDate()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.stripe.android.view.PaymentMethodsActivityStarter$Result: PaymentMethodsActivityStarter$Result()
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.stripe.android.common.ui.BottomSheetState$DismissalType: com.stripe.android.common.ui.BottomSheetState$DismissalType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(android.view.View,java.lang.Double)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.dropShadow.DropShadowModule: java.lang.String getName()
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback: ViewPager2$OnPageChangeCallback()
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
kotlin.text.RegexOption: kotlin.text.RegexOption valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setDisplay(android.view.View,java.lang.String)
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(android.view.View,java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
com.horcrux.svg.RenderableViewManager$MaskManager: void setOpacity(android.view.View,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List access$100(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(android.view.View,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,java.lang.String)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setPointerEvents(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
androidx.compose.ui.platform.ViewLayerVerificationHelper28: void setOutlineSpotShadowColor(android.view.View,int)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addTargetConfig(java.util.HashMap)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: void setStrokeOpacity(android.view.View,float)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
com.oblador.vectoricons.VectorIconsModule: java.lang.String createGlyphImagePath(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.google.android.material.progressindicator.BaseProgressIndicator: void setTrackThickness(int)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$600(com.facebook.react.animated.NativeAnimatedModule)
com.reactnativestripesdk.utils.ErrorType: com.reactnativestripesdk.utils.ErrorType valueOf(java.lang.String)
com.stripe.android.stripe3ds2.views.ChallengeZoneTextView: com.google.android.material.textfield.TextInputEditText getTextEntryView$3ds2sdk_release()
androidx.compose.foundation.text.HandleState: androidx.compose.foundation.text.HandleState[] values()
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.rnmaps.maps.MapOverlayManager: void setOpacity(com.rnmaps.maps.MapOverlay,float)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.compose.ui.text.android.StaticLayoutFactory23: android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.VirtualView: void clip(android.graphics.Canvas,android.graphics.Paint)
com.rnmaps.maps.MapCalloutManager: MapCalloutManager()
androidx.compose.ui.platform.ViewLayer$UniqueDrawingIdApi29: long getUniqueDrawingId(android.view.View)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow: com.stripe.android.financialconnections.model.FinancialConnectionsAuthorizationSession$Flow valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean haveExceededNonBatchedFrameTime(long)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState access$1600(com.facebook.react.fabric.mounting.SurfaceMountingManager,int)
com.google.android.material.progressindicator.BaseProgressIndicator: void setTrackCornerRadius(int)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.mounting.MountingManager: void enqueuePendingEvent(int,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewEvent)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.stripe.android.paymentsheet.PaymentSheet$Appearance: PaymentSheet$Appearance()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setInlineSize(android.view.View,java.lang.Double)
com.stripe.android.financialconnections.features.institutionpicker.InstitutionPickerState: int hashCode()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
androidx.work.Data: Data()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMarkerEnd(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory: GlideBuilder$WaitForFramesAfterTrimMemory()
com.stripe.android.financialconnections.features.partnerauth.PartnerAuthState: java.lang.String getActiveAuthSession()
androidx.compose.ui.window.PopupLayout: java.lang.String getTestTag()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setAlignmentBaseline(android.view.View,java.lang.String)
com.proyecto26.inappbrowser.RNInAppBrowserModule: void onStart(android.app.Activity)
com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder: KeysetInfo$KeyInfo$Builder()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeRegisterSharedView(android.view.View)
com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState: com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState copy$default(com.stripe.android.financialconnections.features.linkstepupverification.LinkStepUpVerificationState,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,com.airbnb.mvrx.Async,int,java.lang.Object)
org.bouncycastle.asn1.DERSet: DERSet()
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.reactnativecommunity.picker.ReactPickerManager: void setItems(com.reactnativecommunity.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.reactnativestripesdk.StripeSdkModule: void confirmSetupIntent(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener: void bringBackWindowInsets()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.reactnativecommunity.picker.ReactPickerManager: java.lang.Object updateState(com.reactnativecommunity.picker.ReactPicker,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.reactnativecommunity.picker.ReactPickerManager: void setColor(com.reactnativecommunity.picker.ReactPicker,java.lang.Integer)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.rnmaps.maps.MapHeatmapManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.rnmaps.maps.MapMarkerManager: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.horcrux.svg.SvgViewManager: void setVbHeight(android.view.View,float)
androidx.compose.ui.platform.TextToolbarHelperMethods: void invalidateContentRect(android.view.ActionMode)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.stripe.android.view.CardValidCallback$Fields: com.stripe.android.view.CardValidCallback$Fields[] values()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsRecursive(android.view.View)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,java.lang.String)
com.stripe.android.view.CardMultilineWidget: CardMultilineWidget(android.content.Context,android.util.AttributeSet)
com.stripe.android.financialconnections.model.OwnershipRefresh$Status: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(android.view.View,java.lang.String)
com.stripe.android.model.SourceParams$Flow: com.stripe.android.model.SourceParams$Flow valueOf(java.lang.String)
com.reactnativestripesdk.StripeSdkModule: void configure3dSecure(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setFontWeight(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleSetJSResponder(double,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setBaselineShift(android.view.View,java.lang.Double)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: void maybeLoadSoLibrary()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.stripe.android.view.CardBrandView: int getTintColorInt$payments_core_release()
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.swmansion.rnscreens.ScreenStackHeaderConfig: boolean getMIsHidden()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBorderTopColor(com.horcrux.svg.SvgView,java.lang.Integer)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setMarkerStart(android.view.View,java.lang.String)
com.stripe.android.paymentsheet.ui.PrimaryButton: com.stripe.android.paymentsheet.databinding.StripePrimaryButtonBinding getViewBinding$paymentsheet_release()
com.facebook.react.fabric.FabricUIManager: void initialize()
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.swmansion.reanimated.NodesManager: void updateProps(int,java.util.Map)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addBasicConfig(java.util.HashMap)
androidx.compose.foundation.text.HandleState: androidx.compose.foundation.text.HandleState valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutNewView(android.view.View)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setName(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: BaseTransientBottomBar$BaseCallback()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.compose.foundation.layout.IntrinsicSize: androidx.compose.foundation.layout.IntrinsicSize[] values()
com.stripe.android.view.PaymentMethodsRecyclerView: void setPaymentMethodSelectedCallback$payments_core_release(kotlin.jvm.functions.Function1)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.SurfaceHandler: java.lang.String getModuleName()
com.horcrux.svg.SvgViewManager: void setBorderEndColor(com.horcrux.svg.SvgView,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
androidx.compose.ui.focus.FocusTargetModifierNode: FocusTargetModifierNode()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(android.view.View,java.lang.Double)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,java.lang.String)
com.stripe.android.ui.core.elements.DropdownItemSpec$Companion: DropdownItemSpec$Companion()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: com.facebook.react.fabric.events.EventEmitterWrapper castToEventEmitter(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setMarkerEnd(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.String toString()
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.horcrux.svg.R: R()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.reactnativestripesdk.CardFormViewManager: void setDangerouslyGetFullCardDetails$default(com.reactnativestripesdk.CardFormViewManager,com.reactnativestripesdk.CardFormView,boolean,int,java.lang.Object)
androidx.constraintlayout.motion.widget.MotionLayout: float getVelocity()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
androidx.compose.ui.platform.AndroidComposeView: kotlin.jvm.functions.Function1 getConfigurationChangeObserver()
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(android.view.View,java.lang.String)
com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationStepUpError$Error: com.stripe.android.financialconnections.analytics.FinancialConnectionsEvent$VerificationStepUpError$Error[] values()
com.rnmaps.maps.MapView: void setHandlePanDrag(boolean)
androidx.compose.ui.window.PopupLayout: void setLayoutDirection(int)
com.stripe.android.ui.core.elements.AuBecsDebitMandateTextSpec$Companion: kotlinx.serialization.KSerializer serializer()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
androidx.customview.poolingcontainer.PoolingContainerListenerHolder: PoolingContainerListenerHolder()
com.horcrux.svg.RenderableViewManager$TextViewManagerAbstract: RenderableViewManager$TextViewManagerAbstract(com.horcrux.svg.VirtualViewManager$SVGClass)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.fabric.FabricUIManager$2: FabricUIManager$2(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void reset()
com.stripe.android.model.PaymentIntent$ConfirmationMethod: com.stripe.android.model.PaymentIntent$ConfirmationMethod valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setStrokeDasharray(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax[] values()
androidx.compose.ui.viewinterop.AndroidViewHolder: void setView$ui_release(android.view.View)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
androidx.compose.material.SnackbarHostState: SnackbarHostState()
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
com.stripe.android.ui.core.elements.BlikSpec: BlikSpec()
com.reactnativecommunity.picker.ReactDropdownPickerManager: void setPrompt(android.view.View,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
androidx.collection.ArraySet: ArraySet()
com.google.crypto.tink.proto.AesEaxKey: AesEaxKey()
com.stripe.android.view.BecsDebitBsbEditText: kotlin.jvm.functions.Function1 getOnBankChangedCallback()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 getResetBlock()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection getParentLayoutDirection()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
androidx.compose.ui.text.android.StaticLayoutFactoryImpl: android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
com.horcrux.svg.SvgView: boolean interceptsTouchEvent(float,float)
androidx.compose.ui.platform.AndroidComposeView: long getLastMatrixRecalculationAnimationTime$ui_release()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTransactionEndDuration()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$Screen: com.stripe.android.customersheet.analytics.CustomerSheetEventReporter$Screen valueOf(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.stripe.android.stripe3ds2.views.ChallengeZoneView: void setSubmitButtonClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.stripe.android.financialconnections.features.reset.ResetState: com.stripe.android.financialconnections.features.reset.ResetState copy(com.airbnb.mvrx.Async)
androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand: androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand[] values()
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintSet$Constraint: ConstraintSet$Constraint()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.stripe.android.financialconnections.model.ConsentPane$Companion: kotlinx.serialization.KSerializer serializer()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int findPrecedingViewTagForTransition(int)
com.stripe.android.financialconnections.FinancialConnectionsSheetViewModel$Companion: com.airbnb.mvrx.MavericksState initialState(com.airbnb.mvrx.ViewModelContext)
com.horcrux.svg.SvgViewManager: void setNextFocusRight(com.horcrux.svg.SvgView,int)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTree(android.view.View,com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
com.google.android.material.search.SearchBar: void setStrokeWidth(float)
com.stripe.android.ui.core.elements.AfterpayClearpayTextSpec$Companion: AfterpayClearpayTextSpec$Companion()
com.rnmaps.maps.MapWMSTileManager: void setTileCachePath(com.rnmaps.maps.MapWMSTile,java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setClipRule(android.view.View,int)
com.stripe.android.view.PostalCodeEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.reactnativecommunity.picker.ReactDialogPickerManager: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void sortViewsByTags(java.util.List)
com.stripe.android.financialconnections.model.DataAccessNoticeBody$Companion: DataAccessNoticeBody$Companion()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setFillOpacity(android.view.View,float)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateState(int,com.facebook.react.uimanager.StateWrapper)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.rnmaps.maps.MapCalloutManager: java.lang.String getName()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,java.lang.String)
com.horcrux.svg.VirtualViewManager: void onDropViewInstance(com.horcrux.svg.VirtualView)
com.facebook.react.views.text.ReactStrikethroughSpan: ReactStrikethroughSpan()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.horcrux.svg.SvgViewManager: void setAccessible(android.view.View,boolean)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String getName()
androidx.activity.result.contract.ActivityResultContract: ActivityResultContract()
com.google.android.gms.common.api.internal.zzd: zzd()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,java.lang.String)
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(com.reactnativecommunity.webview.RNCWebViewWrapper,com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
com.swmansion.reanimated.ReanimatedUIManagerFactory: com.facebook.react.uimanager.UIManagerModule create(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.reactnativestripesdk.pushprovisioning.AddToWalletButtonManager: void onDropViewInstance(android.view.View)
com.google.android.material.progressindicator.CircularProgressIndicator: void setIndicatorInset(int)
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
com.stripe.android.uicore.elements.PhoneNumberState: com.stripe.android.uicore.elements.PhoneNumberState[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setName(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.reactnativestripesdk.StripeSdkModule: com.reactnativestripesdk.CardFieldView getCardFieldView()
com.google.android.gms.wallet.button.ButtonOptions: ButtonOptions()
com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel$Companion: com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeViewModel create(com.airbnb.mvrx.ViewModelContext,com.stripe.android.financialconnections.presentation.FinancialConnectionsSheetNativeState)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setResponsible(android.view.View,boolean)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: android.view.Choreographer$FrameCallback getFrameCallback()
